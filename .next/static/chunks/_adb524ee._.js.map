{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,4TAAC,iRAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/components/ui/form.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport type * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport {\r\n  Controller,\r\n  type ControllerProps,\r\n  type FieldPath,\r\n  type FieldValues,\r\n  FormProvider,\r\n  useFormContext,\r\n} from \"react-hook-form\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Label } from \"@/components/ui/label\"\r\n\r\nconst Form = FormProvider\r\n\r\ntype FormFieldContextValue<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\r\n> = {\r\n  name: TName\r\n}\r\n\r\nconst FormFieldContext = React.createContext<FormFieldContextValue>({} as FormFieldContextValue)\r\n\r\nconst FormField = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\r\n>({\r\n  ...props\r\n}: ControllerProps<TFieldValues, TName>) => {\r\n  return (\r\n    <FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>\r\n  )\r\n}\r\n\r\nconst useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext)\r\n  const itemContext = React.useContext(FormItemContext)\r\n  const { getFieldState, formState } = useFormContext()\r\n\r\n  const fieldState = getFieldState(fieldContext.name, formState)\r\n\r\n  if (!fieldContext) {\r\n    throw new Error(\"useFormField should be used within <FormField>\")\r\n  }\r\n\r\n  const { id } = itemContext\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState,\r\n  }\r\n}\r\n\r\ntype FormItemContextValue = {\r\n  id: string\r\n}\r\n\r\nconst FormItemContext = React.createContext<FormItemContextValue>({} as FormItemContextValue)\r\n\r\nconst FormItem = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\r\n  ({ className, ...props }, ref) => {\r\n    const id = React.useId()\r\n\r\n    return (\r\n      <FormItemContext.Provider value={{ id }}>\r\n        <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\r\n      </FormItemContext.Provider>\r\n    )\r\n  },\r\n)\r\nFormItem.displayName = \"FormItem\"\r\n\r\nconst FormLabel = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  const { error, formItemId } = useFormField()\r\n\r\n  return <Label ref={ref} className={cn(error && \"text-destructive\", className)} htmlFor={formItemId} {...props} />\r\n})\r\nFormLabel.displayName = \"FormLabel\"\r\n\r\nconst FormControl = React.forwardRef<React.ElementRef<typeof Slot>, React.ComponentPropsWithoutRef<typeof Slot>>(\r\n  ({ ...props }, ref) => {\r\n    const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\r\n\r\n    return (\r\n      <Slot\r\n        ref={ref}\r\n        id={formItemId}\r\n        aria-describedby={!error ? `${formDescriptionId}` : `${formDescriptionId} ${formMessageId}`}\r\n        aria-invalid={!!error}\r\n        {...props}\r\n      />\r\n    )\r\n  },\r\n)\r\nFormControl.displayName = \"FormControl\"\r\n\r\nconst FormDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(\r\n  ({ className, ...props }, ref) => {\r\n    const { formDescriptionId } = useFormField()\r\n\r\n    return <p ref={ref} id={formDescriptionId} className={cn(\"text-sm text-muted-foreground\", className)} {...props} />\r\n  },\r\n)\r\nFormDescription.displayName = \"FormDescription\"\r\n\r\nconst FormMessage = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(\r\n  ({ className, children, ...props }, ref) => {\r\n    const { error, formMessageId } = useFormField()\r\n    const body = error ? String(error?.message) : children\r\n\r\n    if (!body) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <p ref={ref} id={formMessageId} className={cn(\"text-sm font-medium text-destructive\", className)} {...props}>\r\n        {body}\r\n      </p>\r\n    )\r\n  },\r\n)\r\nFormMessage.displayName = \"FormMessage\"\r\n\r\nexport { useFormField, Form, FormItem, FormLabel, FormControl, FormDescription, FormMessage, FormField }\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS","debugId":null}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n};\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qJACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/components/ui/switch.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  )\n}\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AACA;AAEA;;;;AAEA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,4TAAC,kRAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,6WACA;QAED,GAAG,KAAK;kBAET,cAAA,4TAAC,kRAAA,CAAA,QAAqB;YACpB,aAAU;YACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKV;KArBS","debugId":null}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/components/hooks/use-toast.tsx"],"sourcesContent":["\"use client\"\r\n\r\n// This is a simplified version of the use-toast hook\r\n// In a real application, you would use a proper toast library\r\n\r\nimport { useState } from \"react\"\r\n\r\ntype ToastVariant = \"default\" | \"destructive\" | \"success\"\r\n\r\ninterface Toast {\r\n  id: string\r\n  title?: string\r\n  description?: string\r\n  variant?: ToastVariant\r\n}\r\n\r\ninterface ToastOptions {\r\n  title?: string\r\n  description?: string\r\n  variant?: ToastVariant\r\n}\r\n\r\nexport function useToast() {\r\n  const [toasts, setToasts] = useState<Toast[]>([])\r\n\r\n  const toast = ({ title, description, variant = \"default\" }: ToastOptions) => {\r\n    const id = Math.random().toString(36).substring(2, 9)\r\n    const newToast = { id, title, description, variant }\r\n\r\n    setToasts((prevToasts) => [...prevToasts, newToast])\r\n\r\n    // Auto dismiss after 5 seconds\r\n    setTimeout(() => {\r\n      setToasts((prevToasts) => prevToasts.filter((t) => t.id !== id))\r\n    }, 5000)\r\n\r\n    return id\r\n  }\r\n\r\n  const dismiss = (id: string) => {\r\n    setToasts((prevToasts) => prevToasts.filter((t) => t.id !== id))\r\n  }\r\n\r\n  return {\r\n    toast,\r\n    dismiss,\r\n    toasts,\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAEA,qDAAqD;AACrD,8DAA8D;AAE9D;;AALA;;AAsBO,SAAS;;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAEhD,MAAM,QAAQ,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,UAAU,SAAS,EAAgB;QACtE,MAAM,KAAK,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG;QACnD,MAAM,WAAW;YAAE;YAAI;YAAO;YAAa;QAAQ;QAEnD,UAAU,CAAC,aAAe;mBAAI;gBAAY;aAAS;QAEnD,+BAA+B;QAC/B,WAAW;YACT,UAAU,CAAC,aAAe,WAAW,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;QAC9D,GAAG;QAEH,OAAO;IACT;IAEA,MAAM,UAAU,CAAC;QACf,UAAU,CAAC,aAAe,WAAW,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;IAC9D;IAEA,OAAO;QACL;QACA;QACA;IACF;AACF;GA1BgB","debugId":null}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n        success:\n          \"border-transparent bg-green text-green-foreground [a&]:hover:bg-success/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n);\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\";\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\nexport { Badge, badgeVariants };\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,8OAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,uSAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 548, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/schema/product.ts"],"sourcesContent":["import { z } from \"zod\";\r\n\r\n// Schema for an existing variation reference (just an ID string)\r\nconst variationRefSchema = z.string();\r\n\r\n// Schema for a new variation to be created\r\nexport const variationOptionSchema = z\r\n  .object({\r\n    type: z.string(),\r\n    options: z.array(\r\n      z.object({\r\n        value: z.string().min(1, \"Value is required\"),\r\n        price: z.number().optional(),\r\n        stockCount: z.number(),\r\n      })\r\n    ),\r\n    isActive: z.boolean().optional().default(true),\r\n    imageURL: z.string().optional(),\r\n  })\r\n  .refine(\r\n    (data) => {\r\n      // If type is not empty, options must have at least one item\r\n      return data.type === \"\" || (data.type !== \"\" && data.options.length > 0);\r\n    },\r\n    {\r\n      message: \"Options are required when variation type is specified\",\r\n      path: [\"options\"], // Shows error on the options field\r\n    }\r\n  );\r\n\r\nexport const specificationSchema = z.array(\r\n  z.object({\r\n    key: z.string().min(1, \"Key is required\"),\r\n    value: z.string().min(1, \"Value is required\"),\r\n  })\r\n);\r\n\r\n// Main product schema that allows both variation references and new variations\r\nexport const ProductSchema = z.object({\r\n  _id: z.string().optional(),\r\n  name: z.string().min(1, \"Product name is required\"),\r\n  description: z.string().min(1, \"Description is required\"),\r\n  price: z.coerce.number().min(0, \"Price must be a positive number\"),\r\n  imageURLs: z.array(z.string()),\r\n  stockCount: z.coerce.number(),\r\n  isActive: z.boolean(),\r\n  categories: z.array(z.string()),\r\n  createdAt: z.number().optional(),\r\n  updatedAt: z.number().optional(),\r\n  variations: z\r\n    .array(\r\n      z.union([\r\n        variationRefSchema, // Existing variation ID\r\n        variationOptionSchema, // New variation to create\r\n      ])\r\n    )\r\n    .optional()\r\n    .default([]),\r\n  specifications: specificationSchema.optional(),\r\n  reviews: z\r\n    .array(\r\n      z.object({\r\n        productId: z.string(),\r\n        username: z.string(),\r\n        rating: z.number(),\r\n        comment: z.string(),\r\n        createdAt: z.number(),\r\n      })\r\n    )\r\n    .optional(),\r\n});\r\n\r\nexport type VariationOption = z.infer<typeof variationOptionSchema>;\r\nexport type ProductData = z.infer<typeof ProductSchema>;\r\nexport type Specification = z.infer<typeof specificationSchema>;\r\n"],"names":[],"mappings":";;;;;AAAA;;AAEA,iEAAiE;AACjE,MAAM,qBAAqB,wLAAA,CAAA,IAAC,CAAC,MAAM;AAG5B,MAAM,wBAAwB,wLAAA,CAAA,IAAC,CACnC,MAAM,CAAC;IACN,MAAM,wLAAA,CAAA,IAAC,CAAC,MAAM;IACd,SAAS,wLAAA,CAAA,IAAC,CAAC,KAAK,CACd,wLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACP,OAAO,wLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QACzB,OAAO,wLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QAC1B,YAAY,wLAAA,CAAA,IAAC,CAAC,MAAM;IACtB;IAEF,UAAU,wLAAA,CAAA,IAAC,CAAC,OAAO,GAAG,QAAQ,GAAG,OAAO,CAAC;IACzC,UAAU,wLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AAC/B,GACC,MAAM,CACL,CAAC;IACC,4DAA4D;IAC5D,OAAO,KAAK,IAAI,KAAK,MAAO,KAAK,IAAI,KAAK,MAAM,KAAK,OAAO,CAAC,MAAM,GAAG;AACxE,GACA;IACE,SAAS;IACT,MAAM;QAAC;KAAU;AACnB;AAGG,MAAM,sBAAsB,wLAAA,CAAA,IAAC,CAAC,KAAK,CACxC,wLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACP,KAAK,wLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACvB,OAAO,wLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC3B;AAIK,MAAM,gBAAgB,wLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,KAAK,wLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IACxB,MAAM,wLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACxB,aAAa,wLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,OAAO,wLAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAChC,WAAW,wLAAA,CAAA,IAAC,CAAC,KAAK,CAAC,wLAAA,CAAA,IAAC,CAAC,MAAM;IAC3B,YAAY,wLAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM;IAC3B,UAAU,wLAAA,CAAA,IAAC,CAAC,OAAO;IACnB,YAAY,wLAAA,CAAA,IAAC,CAAC,KAAK,CAAC,wLAAA,CAAA,IAAC,CAAC,MAAM;IAC5B,WAAW,wLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC9B,WAAW,wLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC9B,YAAY,wLAAA,CAAA,IAAC,CACV,KAAK,CACJ,wLAAA,CAAA,IAAC,CAAC,KAAK,CAAC;QACN;QACA;KACD,GAEF,QAAQ,GACR,OAAO,CAAC,EAAE;IACb,gBAAgB,oBAAoB,QAAQ;IAC5C,SAAS,wLAAA,CAAA,IAAC,CACP,KAAK,CACJ,wLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACP,WAAW,wLAAA,CAAA,IAAC,CAAC,MAAM;QACnB,UAAU,wLAAA,CAAA,IAAC,CAAC,MAAM;QAClB,QAAQ,wLAAA,CAAA,IAAC,CAAC,MAAM;QAChB,SAAS,wLAAA,CAAA,IAAC,CAAC,MAAM;QACjB,WAAW,wLAAA,CAAA,IAAC,CAAC,MAAM;IACrB,IAED,QAAQ;AACb","debugId":null}},
    {"offset": {"line": 612, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/store/productStore.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { create } from \"zustand\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { queryClient } from \"@/lib/query-client\";\r\nimport { ProductData, ProductSchema } from \"@/schema/product\";\r\n\r\n// Define a proper empty product that matches the schema\r\nconst emptyProduct: ProductData = {\r\n  name: \"\",\r\n  description: \"\",\r\n  price: 0,\r\n  imageURLs: [\"\"],\r\n  stockCount: 0,\r\n  isActive: true,\r\n  categories: [\"\"],\r\n  variations: [],\r\n  specifications: [],\r\n};\r\n\r\ninterface ProductState {\r\n  selectedProductId: string | null;\r\n  isCreatingProduct: boolean;\r\n  filters: {\r\n    showInactive: boolean;\r\n    searchTerm: string;\r\n    sortBy: \"name\" | \"price\" | \"stockCount\" | \"createdAt\";\r\n    sortOrder: \"asc\" | \"desc\";\r\n  };\r\n  // Product form state\r\n  product: ProductData;\r\n  setProduct: (product: ProductData) => void;\r\n  resetProduct: () => void;\r\n\r\n  // Actions\r\n  selectProduct: (id: string | null) => void;\r\n  setCreatingProduct: (creating: boolean) => void;\r\n  toggleShowInactive: () => void;\r\n  setSearchTerm: (term: string) => void;\r\n  setSorting: (\r\n    field: ProductState[\"filters\"][\"sortBy\"],\r\n    order: ProductState[\"filters\"][\"sortOrder\"]\r\n  ) => void;\r\n\r\n  // API interactions\r\n  fetchProducts: () => Promise<ProductData[]>;\r\n  fetchProductById: (id: string) => Promise<ProductData>;\r\n  createProduct: (data: ProductData) => Promise<ProductData>;\r\n  updateProduct: (id: string, data: ProductData) => Promise<ProductData>;\r\n  deleteProduct: (id: string) => Promise<void>;\r\n  invalidateProducts: () => Promise<void>;\r\n}\r\n\r\ntype CartItem = {\r\n  productId: string;\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n  quantity: number;\r\n  selectedOptions: Record<string, string>;\r\n};\r\n\r\ntype Store = {\r\n  cart: CartItem[];\r\n  addToCart: (item: CartItem) => void;\r\n  // ...other actions\r\n};\r\n\r\nconst getInitialCart = () => {\r\n  if (typeof window !== \"undefined\") {\r\n    const stored = localStorage.getItem(\"cart\");\r\n    return stored ? JSON.parse(stored) : [];\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const useProductStore = create<ProductState & Store>((set, get) => ({\r\n  selectedProductId: null,\r\n  isCreatingProduct: false,\r\n  filters: {\r\n    showInactive: false,\r\n    searchTerm: \"\",\r\n    sortBy: \"createdAt\",\r\n    sortOrder: \"desc\",\r\n  },\r\n  product: emptyProduct,\r\n\r\n  setProduct: (product) => set({ product }),\r\n  resetProduct: () => set({ product: emptyProduct }),\r\n\r\n  // Actions\r\n  selectProduct: (id) => set({ selectedProductId: id }),\r\n  setCreatingProduct: (creating) => set({ isCreatingProduct: creating }),\r\n  toggleShowInactive: () =>\r\n    set((state) => ({\r\n      filters: {\r\n        ...state.filters,\r\n        showInactive: !state.filters.showInactive,\r\n      },\r\n    })),\r\n  setSearchTerm: (term) =>\r\n    set((state) => ({\r\n      filters: {\r\n        ...state.filters,\r\n        searchTerm: term,\r\n      },\r\n    })),\r\n  setSorting: (field, order) =>\r\n    set((state) => ({\r\n      filters: {\r\n        ...state.filters,\r\n        sortBy: field,\r\n        sortOrder: order,\r\n      },\r\n    })),\r\n\r\n  // API interactions\r\n  fetchProducts: async () => {\r\n    const res = await fetch(\"/api/dashboard/products\", {\r\n      headers: { Accept: \"application/json\" },\r\n      cache: \"no-store\",\r\n    });\r\n    if (!res.ok) {\r\n      const error = await res\r\n        .json()\r\n        .catch(() => ({ message: \"Failed to fetch products\" }));\r\n      throw new Error(error.message || \"Failed to fetch products\");\r\n    }\r\n    return res.json();\r\n  },\r\n\r\n  fetchProductById: async (id) => {\r\n    const res = await fetch(`/api/dashboard/products/${id}`, {\r\n      headers: { Accept: \"application/json\" },\r\n      cache: \"no-store\",\r\n    });\r\n    if (!res.ok) {\r\n      const error = await res\r\n        .json()\r\n        .catch(() => ({ message: \"Failed to fetch product\" }));\r\n      throw new Error(error.message || \"Failed to fetch product\");\r\n    }\r\n    return res.json();\r\n  },\r\n\r\n  createProduct: async (data) => {\r\n    // Validate with the schema before sending\r\n    try {\r\n      const validData = ProductSchema.parse(data);\r\n\r\n      const res = await fetch(\"/api/dashboard/products\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify(validData),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const error = await res\r\n          .json()\r\n          .catch(() => ({ message: \"Failed to create product\" }));\r\n        throw new Error(error.message || \"Failed to create product\");\r\n      }\r\n\r\n      const newProduct = await res.json();\r\n      await get().invalidateProducts();\r\n      return newProduct;\r\n    } catch (error) {\r\n      console.error(\"Validation error:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateProduct: async (id, data) => {\r\n    // Validate with the schema before sending\r\n    try {\r\n      const validData = ProductSchema.parse(data);\r\n\r\n      const res = await fetch(`/api/dashboard/products/${id}`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify(validData),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const error = await res\r\n          .json()\r\n          .catch(() => ({ message: \"Failed to update product\" }));\r\n        throw new Error(error.message || \"Failed to update product\");\r\n      }\r\n\r\n      const updatedProduct = await res.json();\r\n      await get().invalidateProducts();\r\n      return updatedProduct;\r\n    } catch (error) {\r\n      console.error(\"Validation error:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  deleteProduct: async (id) => {\r\n    const res = await fetch(`/api/dashboard/products/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n\r\n    if (!res.ok) {\r\n      const error = await res\r\n        .json()\r\n        .catch(() => ({ message: \"Failed to delete product\" }));\r\n      throw new Error(error.message || \"Failed to delete product\");\r\n    }\r\n\r\n    await get().invalidateProducts();\r\n  },\r\n\r\n  invalidateProducts: async () => {\r\n    await queryClient.invalidateQueries({ queryKey: [\"products\"] });\r\n  },\r\n\r\n  cart: getInitialCart(),\r\n  addToCart: (item) => {\r\n    const updatedCart = [...get().cart, item];\r\n    set({ cart: updatedCart });\r\n    if (typeof window !== \"undefined\") {\r\n      localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\r\n    }\r\n  },\r\n  // ...other actions\r\n}));\r\n\r\n// Custom hook for accessing filtered products\r\nexport function useFilteredProducts() {\r\n  const { showInactive, searchTerm, sortBy, sortOrder } = useProductStore(\r\n    (state) => state.filters\r\n  );\r\n  const fetchProducts = useProductStore((state) => state.fetchProducts);\r\n\r\n  return useQuery<ProductData[]>({\r\n    queryKey: [\"products\", { showInactive, searchTerm, sortBy, sortOrder }],\r\n    queryFn: fetchProducts,\r\n    select: (data) => {\r\n      let filtered = data;\r\n\r\n      // Filter by active status if needed\r\n      if (!showInactive) {\r\n        filtered = filtered.filter((product) => product.isActive);\r\n      }\r\n\r\n      // Filter by search term if provided\r\n      if (searchTerm) {\r\n        const term = searchTerm.toLowerCase();\r\n        filtered = filtered.filter(\r\n          (product) =>\r\n            product.name?.toLowerCase().includes(term) ||\r\n            product.description?.toLowerCase().includes(term)\r\n        );\r\n      }\r\n\r\n      // Sort the data with null safety\r\n      filtered = [...filtered].sort((a, b) => {\r\n        const valueA = a[sortBy] ?? \"\";\r\n        const valueB = b[sortBy] ?? \"\";\r\n\r\n        // Handle string comparison\r\n        if (typeof valueA === \"string\" && typeof valueB === \"string\") {\r\n          return sortOrder === \"asc\"\r\n            ? valueA.localeCompare(valueB)\r\n            : valueB.localeCompare(valueA);\r\n        }\r\n\r\n        // Handle number comparison\r\n        return sortOrder === \"asc\"\r\n          ? Number(valueA) - Number(valueB)\r\n          : Number(valueB) - Number(valueA);\r\n      });\r\n\r\n      return filtered;\r\n    },\r\n  });\r\n}\r\n\r\n// Custom hook for accessing a single product by ID\r\nexport function useProduct(id: string | null) {\r\n  const fetchProductById = useProductStore((state) => state.fetchProductById);\r\n\r\n  return useQuery<ProductData>({\r\n    queryKey: [\"product\", id],\r\n    queryFn: () => fetchProductById(id as string),\r\n    enabled: !!id, // Only run the query if an ID is provided\r\n  });\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;;AALA;;;;;AAOA,wDAAwD;AACxD,MAAM,eAA4B;IAChC,MAAM;IACN,aAAa;IACb,OAAO;IACP,WAAW;QAAC;KAAG;IACf,YAAY;IACZ,UAAU;IACV,YAAY;QAAC;KAAG;IAChB,YAAY,EAAE;IACd,gBAAgB,EAAE;AACpB;AAkDA,MAAM,iBAAiB;IACrB,wCAAmC;QACjC,MAAM,SAAS,aAAa,OAAO,CAAC;QACpC,OAAO,SAAS,KAAK,KAAK,CAAC,UAAU,EAAE;IACzC;;AAEF;AAEO,MAAM,kBAAkB,CAAA,GAAA,uPAAA,CAAA,SAAM,AAAD,EAAwB,CAAC,KAAK,MAAQ,CAAC;QACzE,mBAAmB;QACnB,mBAAmB;QACnB,SAAS;YACP,cAAc;YACd,YAAY;YACZ,QAAQ;YACR,WAAW;QACb;QACA,SAAS;QAET,YAAY,CAAC,UAAY,IAAI;gBAAE;YAAQ;QACvC,cAAc,IAAM,IAAI;gBAAE,SAAS;YAAa;QAEhD,UAAU;QACV,eAAe,CAAC,KAAO,IAAI;gBAAE,mBAAmB;YAAG;QACnD,oBAAoB,CAAC,WAAa,IAAI;gBAAE,mBAAmB;YAAS;QACpE,oBAAoB,IAClB,IAAI,CAAC,QAAU,CAAC;oBACd,SAAS;wBACP,GAAG,MAAM,OAAO;wBAChB,cAAc,CAAC,MAAM,OAAO,CAAC,YAAY;oBAC3C;gBACF,CAAC;QACH,eAAe,CAAC,OACd,IAAI,CAAC,QAAU,CAAC;oBACd,SAAS;wBACP,GAAG,MAAM,OAAO;wBAChB,YAAY;oBACd;gBACF,CAAC;QACH,YAAY,CAAC,OAAO,QAClB,IAAI,CAAC,QAAU,CAAC;oBACd,SAAS;wBACP,GAAG,MAAM,OAAO;wBAChB,QAAQ;wBACR,WAAW;oBACb;gBACF,CAAC;QAEH,mBAAmB;QACnB,eAAe;YACb,MAAM,MAAM,MAAM,MAAM,2BAA2B;gBACjD,SAAS;oBAAE,QAAQ;gBAAmB;gBACtC,OAAO;YACT;YACA,IAAI,CAAC,IAAI,EAAE,EAAE;gBACX,MAAM,QAAQ,MAAM,IACjB,IAAI,GACJ,KAAK,CAAC,IAAM,CAAC;wBAAE,SAAS;oBAA2B,CAAC;gBACvD,MAAM,IAAI,MAAM,MAAM,OAAO,IAAI;YACnC;YACA,OAAO,IAAI,IAAI;QACjB;QAEA,kBAAkB,OAAO;YACvB,MAAM,MAAM,MAAM,MAAM,CAAC,wBAAwB,EAAE,IAAI,EAAE;gBACvD,SAAS;oBAAE,QAAQ;gBAAmB;gBACtC,OAAO;YACT;YACA,IAAI,CAAC,IAAI,EAAE,EAAE;gBACX,MAAM,QAAQ,MAAM,IACjB,IAAI,GACJ,KAAK,CAAC,IAAM,CAAC;wBAAE,SAAS;oBAA0B,CAAC;gBACtD,MAAM,IAAI,MAAM,MAAM,OAAO,IAAI;YACnC;YACA,OAAO,IAAI,IAAI;QACjB;QAEA,eAAe,OAAO;YACpB,0CAA0C;YAC1C,IAAI;gBACF,MAAM,YAAY,oHAAA,CAAA,gBAAa,CAAC,KAAK,CAAC;gBAEtC,MAAM,MAAM,MAAM,MAAM,2BAA2B;oBACjD,QAAQ;oBACR,SAAS;wBACP,gBAAgB;wBAChB,QAAQ;oBACV;oBACA,MAAM,KAAK,SAAS,CAAC;gBACvB;gBAEA,IAAI,CAAC,IAAI,EAAE,EAAE;oBACX,MAAM,QAAQ,MAAM,IACjB,IAAI,GACJ,KAAK,CAAC,IAAM,CAAC;4BAAE,SAAS;wBAA2B,CAAC;oBACvD,MAAM,IAAI,MAAM,MAAM,OAAO,IAAI;gBACnC;gBAEA,MAAM,aAAa,MAAM,IAAI,IAAI;gBACjC,MAAM,MAAM,kBAAkB;gBAC9B,OAAO;YACT,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,qBAAqB;gBACnC,MAAM;YACR;QACF;QAEA,eAAe,OAAO,IAAI;YACxB,0CAA0C;YAC1C,IAAI;gBACF,MAAM,YAAY,oHAAA,CAAA,gBAAa,CAAC,KAAK,CAAC;gBAEtC,MAAM,MAAM,MAAM,MAAM,CAAC,wBAAwB,EAAE,IAAI,EAAE;oBACvD,QAAQ;oBACR,SAAS;wBACP,gBAAgB;wBAChB,QAAQ;oBACV;oBACA,MAAM,KAAK,SAAS,CAAC;gBACvB;gBAEA,IAAI,CAAC,IAAI,EAAE,EAAE;oBACX,MAAM,QAAQ,MAAM,IACjB,IAAI,GACJ,KAAK,CAAC,IAAM,CAAC;4BAAE,SAAS;wBAA2B,CAAC;oBACvD,MAAM,IAAI,MAAM,MAAM,OAAO,IAAI;gBACnC;gBAEA,MAAM,iBAAiB,MAAM,IAAI,IAAI;gBACrC,MAAM,MAAM,kBAAkB;gBAC9B,OAAO;YACT,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,qBAAqB;gBACnC,MAAM;YACR;QACF;QAEA,eAAe,OAAO;YACpB,MAAM,MAAM,MAAM,MAAM,CAAC,wBAAwB,EAAE,IAAI,EAAE;gBACvD,QAAQ;YACV;YAEA,IAAI,CAAC,IAAI,EAAE,EAAE;gBACX,MAAM,QAAQ,MAAM,IACjB,IAAI,GACJ,KAAK,CAAC,IAAM,CAAC;wBAAE,SAAS;oBAA2B,CAAC;gBACvD,MAAM,IAAI,MAAM,MAAM,OAAO,IAAI;YACnC;YAEA,MAAM,MAAM,kBAAkB;QAChC;QAEA,oBAAoB;YAClB,MAAM,yHAAA,CAAA,cAAW,CAAC,iBAAiB,CAAC;gBAAE,UAAU;oBAAC;iBAAW;YAAC;QAC/D;QAEA,MAAM;QACN,WAAW,CAAC;YACV,MAAM,cAAc;mBAAI,MAAM,IAAI;gBAAE;aAAK;YACzC,IAAI;gBAAE,MAAM;YAAY;YACxB,wCAAmC;gBACjC,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;YAC9C;QACF;IAEF,CAAC;AAGM,SAAS;;IACd,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG;+CACtD,CAAC,QAAU,MAAM,OAAO;;IAE1B,MAAM,gBAAgB;8DAAgB,CAAC,QAAU,MAAM,aAAa;;IAEpE,OAAO,CAAA,GAAA,8QAAA,CAAA,WAAQ,AAAD,EAAiB;QAC7B,UAAU;YAAC;YAAY;gBAAE;gBAAc;gBAAY;gBAAQ;YAAU;SAAE;QACvE,SAAS;QACT,MAAM;4CAAE,CAAC;gBACP,IAAI,WAAW;gBAEf,oCAAoC;gBACpC,IAAI,CAAC,cAAc;oBACjB,WAAW,SAAS,MAAM;wDAAC,CAAC,UAAY,QAAQ,QAAQ;;gBAC1D;gBAEA,oCAAoC;gBACpC,IAAI,YAAY;oBACd,MAAM,OAAO,WAAW,WAAW;oBACnC,WAAW,SAAS,MAAM;wDACxB,CAAC,UACC,QAAQ,IAAI,EAAE,cAAc,SAAS,SACrC,QAAQ,WAAW,EAAE,cAAc,SAAS;;gBAElD;gBAEA,iCAAiC;gBACjC,WAAW;uBAAI;iBAAS,CAAC,IAAI;oDAAC,CAAC,GAAG;wBAChC,MAAM,SAAS,CAAC,CAAC,OAAO,IAAI;wBAC5B,MAAM,SAAS,CAAC,CAAC,OAAO,IAAI;wBAE5B,2BAA2B;wBAC3B,IAAI,OAAO,WAAW,YAAY,OAAO,WAAW,UAAU;4BAC5D,OAAO,cAAc,QACjB,OAAO,aAAa,CAAC,UACrB,OAAO,aAAa,CAAC;wBAC3B;wBAEA,2BAA2B;wBAC3B,OAAO,cAAc,QACjB,OAAO,UAAU,OAAO,UACxB,OAAO,UAAU,OAAO;oBAC9B;;gBAEA,OAAO;YACT;;IACF;AACF;GAhDgB;;QAC0C;QAGlC;QAEf,8QAAA,CAAA,WAAQ;;;AA6CV,SAAS,WAAW,EAAiB;;IAC1C,MAAM,mBAAmB;wDAAgB,CAAC,QAAU,MAAM,gBAAgB;;IAE1E,OAAO,CAAA,GAAA,8QAAA,CAAA,WAAQ,AAAD,EAAe;QAC3B,UAAU;YAAC;YAAW;SAAG;QACzB,OAAO;mCAAE,IAAM,iBAAiB;;QAChC,SAAS,CAAC,CAAC;IACb;AACF;IARgB;;QACW;QAElB,8QAAA,CAAA,WAAQ","debugId":null}},
    {"offset": {"line": 901, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/store/variationStore.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport { create } from \"zustand\";\r\ninterface Variant {\r\n  id: string;\r\n  name: string;\r\n  // Add other fields as needed\r\n}\r\n\r\nexport interface ProductVariation {\r\n  _id: string;\r\n  productId: string;\r\n  type: string;\r\n  value: string;\r\n  price?: number;\r\n  stockCount: number;\r\n  isActive: boolean;\r\n  imageURL?: string;\r\n}\r\n\r\nasync function fetchVariants(): Promise<Variant[]> {\r\n  const response = await fetch(\"/api/variants\");\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to fetch variants\");\r\n  }\r\n  return response.json();\r\n}\r\n\r\nasync function fetchProductVariations(): Promise<ProductVariation[]> {\r\n  const response = await fetch(\"/api/dashboard/variations\");\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to fetch product variations\");\r\n  }\r\n  return response.json();\r\n}\r\nasync function fetchProductVariationById(\r\n  id: string\r\n): Promise<ProductVariation> {\r\n  const response = await fetch(`/api/dashboard/variations/${id}`);\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to fetch product variation\");\r\n  }\r\n  return response.json();\r\n}\r\nexport const useVariantsQuery = () =>\r\n  create(() => ({\r\n    queryKey: [\"variants\"],\r\n    queryFn: fetchVariants,\r\n  }));\r\n\r\nexport function useProductVariations() {\r\n  return useQuery<ProductVariation[]>({\r\n    queryKey: [\"productVariations\"],\r\n    queryFn: fetchProductVariations,\r\n  });\r\n}\r\n\r\nexport function useProductVariation(id: string) {\r\n  return useQuery<ProductVariation>({\r\n    queryKey: [\"productVariation\", id],\r\n    queryFn: () => fetchProductVariationById(id),\r\n  });\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAkBA,eAAe;IACb,MAAM,WAAW,MAAM,MAAM;IAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,SAAS,IAAI;AACtB;AAEA,eAAe;IACb,MAAM,WAAW,MAAM,MAAM;IAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,SAAS,IAAI;AACtB;AACA,eAAe,0BACb,EAAU;IAEV,MAAM,WAAW,MAAM,MAAM,CAAC,0BAA0B,EAAE,IAAI;IAC9D,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,SAAS,IAAI;AACtB;AACO,MAAM,mBAAmB,IAC9B,CAAA,GAAA,uPAAA,CAAA,SAAM,AAAD,EAAE,IAAM,CAAC;YACZ,UAAU;gBAAC;aAAW;YACtB,SAAS;QACX,CAAC;AAEI,SAAS;;IACd,OAAO,CAAA,GAAA,8QAAA,CAAA,WAAQ,AAAD,EAAsB;QAClC,UAAU;YAAC;SAAoB;QAC/B,SAAS;IACX;AACF;GALgB;;QACP,8QAAA,CAAA,WAAQ;;;AAMV,SAAS,oBAAoB,EAAU;;IAC5C,OAAO,CAAA,GAAA,8QAAA,CAAA,WAAQ,AAAD,EAAoB;QAChC,UAAU;YAAC;YAAoB;SAAG;QAClC,OAAO;4CAAE,IAAM,0BAA0B;;IAC3C;AACF;IALgB;;QACP,8QAAA,CAAA,WAAQ","debugId":null}},
    {"offset": {"line": 978, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/components/upload/uploader-provider.tsx"],"sourcesContent":["import * as React from 'react';\n\n/**\n * Represents the possible statuses of a file in the uploader.\n */\nexport type FileStatus = 'PENDING' | 'UPLOADING' | 'COMPLETE' | 'ERROR';\n\n/**\n * Represents the state of a file in the uploader.\n */\nexport type FileState = {\n  /** The file object being uploaded */\n  file: File;\n\n  /** Unique identifier for the file */\n  key: string;\n\n  /** Upload progress (0-100) */\n  progress: number;\n\n  /** Current status of the file */\n  status: FileStatus;\n\n  /** URL of the uploaded file (available when status is COMPLETE) */\n  url?: string;\n\n  /** Error message if the upload failed */\n  error?: string;\n\n  /** AbortController to cancel the upload */\n  abortController?: AbortController;\n\n  /** Whether the file should be automatically uploaded */\n  autoUpload?: boolean;\n};\n\n/**\n * Represents a file that has completed uploading.\n */\nexport type CompletedFileState = Omit<FileState, 'status' | 'url'> & {\n  /** Status is guaranteed to be 'COMPLETE' */\n  status: 'COMPLETE';\n\n  /** URL is guaranteed to be available */\n  url: string;\n};\n\n/**\n * Function type for handling file uploads.\n */\nexport type UploadFn<TOptions = unknown> = (props: {\n  /** The file to be uploaded */\n  file: File;\n\n  /** AbortSignal to cancel the upload */\n  signal: AbortSignal;\n\n  /** Callback to update progress */\n  onProgressChange: (progress: number) => void | Promise<void>;\n\n  /** Additional options */\n  options?: TOptions;\n}) => Promise<{ url: string }>;\n\n/**\n * Context type for the UploaderProvider.\n */\ntype UploaderContextType<TOptions = unknown> = {\n  /** List of all files in the uploader */\n  fileStates: FileState[];\n\n  /** Add files to the uploader */\n  addFiles: (files: File[]) => void;\n\n  /** Update a file's state */\n  updateFileState: (key: string, changes: Partial<FileState>) => void;\n\n  /** Remove a file from the uploader */\n  removeFile: (key: string) => void;\n\n  /** Cancel an ongoing upload */\n  cancelUpload: (key: string) => void;\n\n  /** Start uploading files */\n  uploadFiles: (keysToUpload?: string[], options?: TOptions) => Promise<void>;\n\n  /** Reset all files */\n  resetFiles: () => void;\n\n  /** Whether any file is currently uploading */\n  isUploading: boolean;\n\n  /** Whether files should be automatically uploaded */\n  autoUpload?: boolean;\n};\n\n/**\n * Props for the UploaderProvider component.\n */\ntype ProviderProps<TOptions = unknown> = {\n  /** React children or render function */\n  children:\n    | React.ReactNode\n    | ((context: UploaderContextType<TOptions>) => React.ReactNode);\n\n  /** Callback when files change */\n  onChange?: (args: {\n    allFiles: FileState[];\n    completedFiles: CompletedFileState[];\n  }) => void | Promise<void>;\n\n  /** Callback when a file is added */\n  onFileAdded?: (file: FileState) => void | Promise<void>;\n\n  /** Callback when a file is removed */\n  onFileRemoved?: (key: string) => void | Promise<void>;\n\n  /** Callback when a file upload completes */\n  onUploadCompleted?: (file: CompletedFileState) => void | Promise<void>;\n\n  /** Function to handle the actual upload */\n  uploadFn: UploadFn<TOptions>;\n\n  /** External value to control the file states */\n  value?: FileState[];\n\n  /** Whether files should be automatically uploaded when added */\n  autoUpload?: boolean;\n};\n\n// Context\nconst UploaderContext =\n  React.createContext<UploaderContextType<unknown> | null>(null);\n\n/**\n * Hook to access the uploader context.\n *\n * @returns The uploader context\n * @throws Error if used outside of UploaderProvider\n *\n * @example\n * ```tsx\n * const { fileStates, addFiles, uploadFiles } = useUploader();\n * ```\n */\nexport function useUploader<TOptions = unknown>() {\n  const context = React.useContext(UploaderContext);\n  if (!context) {\n    throw new Error('useUploader must be used within a UploaderProvider');\n  }\n  return context as UploaderContextType<TOptions>;\n}\n\n/**\n * Provider component for file upload functionality.\n *\n * @component\n * @example\n * ```tsx\n * <UploaderProvider\n *   uploadFn={async ({ file, signal, onProgressChange }) => {\n *     // Upload implementation\n *     return { url: 'https://example.com/uploads/image.jpg' };\n *   }}\n *   autoUpload={true}\n * >\n *   <ImageUploader maxFiles={5} maxSize={1024 * 1024 * 2} />\n * </UploaderProvider>\n * ```\n */\nexport function UploaderProvider<TOptions = unknown>({\n  children,\n  onChange,\n  onFileAdded,\n  onFileRemoved,\n  onUploadCompleted,\n  uploadFn,\n  value: externalValue,\n  autoUpload = false,\n}: ProviderProps<TOptions>) {\n  const [fileStates, setFileStates] = React.useState<FileState[]>(\n    externalValue ?? [],\n  );\n  const [pendingAutoUploadKeys, setPendingAutoUploadKeys] = React.useState<\n    string[] | null\n  >(null);\n\n  // Sync with external value if provided\n  React.useEffect(() => {\n    if (externalValue) {\n      setFileStates(externalValue);\n    }\n  }, [externalValue]);\n\n  const updateFileState = React.useCallback(\n    (key: string, changes: Partial<FileState>) => {\n      setFileStates((prevStates) => {\n        return prevStates.map((fileState) => {\n          if (fileState.key === key) {\n            return { ...fileState, ...changes };\n          }\n          return fileState;\n        });\n      });\n    },\n    [],\n  );\n\n  const uploadFiles = React.useCallback(\n    async (keysToUpload?: string[], options?: TOptions) => {\n      const filesToUpload = fileStates.filter(\n        (fileState) =>\n          fileState.status === 'PENDING' &&\n          (!keysToUpload || keysToUpload.includes(fileState.key)),\n      );\n\n      if (filesToUpload.length === 0) return;\n\n      await Promise.all(\n        filesToUpload.map(async (fileState) => {\n          try {\n            const abortController = new AbortController();\n            updateFileState(fileState.key, {\n              abortController,\n              status: 'UPLOADING',\n              progress: 0,\n            });\n\n            const uploadResult = await uploadFn({\n              file: fileState.file,\n              signal: abortController.signal,\n              onProgressChange: (progress) => {\n                updateFileState(fileState.key, { progress });\n              },\n              options,\n            });\n\n            // Wait a bit to show the bar at 100%\n            await new Promise((resolve) => setTimeout(resolve, 500));\n\n            const completedFile = {\n              ...fileState,\n              status: 'COMPLETE' as const,\n              progress: 100,\n              url: uploadResult?.url,\n            };\n\n            updateFileState(fileState.key, {\n              status: 'COMPLETE',\n              progress: 100,\n              url: uploadResult?.url,\n            });\n\n            // Call onUploadCompleted when a file upload is completed\n            if (onUploadCompleted) {\n              void onUploadCompleted(completedFile);\n            }\n          } catch (err: unknown) {\n            if (\n              err instanceof Error &&\n              // if using with EdgeStore, the error name is UploadAbortedError\n              (err.name === 'AbortError' || err.name === 'UploadAbortedError')\n            ) {\n              updateFileState(fileState.key, {\n                status: 'PENDING',\n                progress: 0,\n                error: 'Upload canceled',\n              });\n            } else {\n              if (process.env.NODE_ENV === 'development') {\n                console.error(err);\n              }\n              const errorMessage =\n                err instanceof Error ? err.message : 'Upload failed';\n              updateFileState(fileState.key, {\n                status: 'ERROR',\n                error: errorMessage,\n              });\n            }\n          }\n        }),\n      );\n    },\n    [fileStates, updateFileState, uploadFn, onUploadCompleted],\n  );\n\n  const addFiles = React.useCallback(\n    (files: File[]) => {\n      const newFileStates = files.map<FileState>((file) => ({\n        file,\n        key: `${file.name}-${Date.now()}-${Math.random()\n          .toString(36)\n          .slice(2)}`,\n        progress: 0,\n        status: 'PENDING',\n        autoUpload,\n      }));\n      setFileStates((prev) => [...prev, ...newFileStates]);\n\n      // Call onFileAdded for each new file\n      if (onFileAdded) {\n        newFileStates.forEach((fileState) => {\n          void onFileAdded(fileState);\n        });\n      }\n\n      if (autoUpload) {\n        setPendingAutoUploadKeys(newFileStates.map((fs) => fs.key));\n      }\n    },\n    [autoUpload, onFileAdded],\n  );\n\n  const removeFile = React.useCallback(\n    (key: string) => {\n      setFileStates((prev) =>\n        prev.filter((fileState) => fileState.key !== key),\n      );\n\n      // Call onFileRemoved when a file is removed\n      if (onFileRemoved) {\n        void onFileRemoved(key);\n      }\n    },\n    [onFileRemoved],\n  );\n\n  const cancelUpload = React.useCallback(\n    (key: string) => {\n      const fileState = fileStates.find((f) => f.key === key);\n      if (fileState?.abortController && fileState.progress < 100) {\n        fileState.abortController.abort();\n        if (fileState?.autoUpload) {\n          // Remove file if it was an auto-upload\n          removeFile(key);\n        } else {\n          // If it was not an auto-upload, reset the file state\n          updateFileState(key, { status: 'PENDING', progress: 0 });\n        }\n      }\n    },\n    [fileStates, updateFileState, removeFile],\n  );\n\n  const resetFiles = React.useCallback(() => {\n    setFileStates([]);\n  }, []);\n\n  React.useEffect(() => {\n    const completedFileStates = fileStates.filter(\n      (fs): fs is CompletedFileState => fs.status === 'COMPLETE' && !!fs.url,\n    );\n    void onChange?.({\n      allFiles: fileStates,\n      completedFiles: completedFileStates,\n    });\n  }, [fileStates, onChange]);\n\n  // Handle auto-uploading files added to the queue\n  React.useEffect(() => {\n    if (pendingAutoUploadKeys && pendingAutoUploadKeys.length > 0) {\n      void uploadFiles(pendingAutoUploadKeys);\n      setPendingAutoUploadKeys(null);\n    }\n  }, [pendingAutoUploadKeys, uploadFiles]);\n\n  const isUploading = React.useMemo(\n    () => fileStates.some((fs) => fs.status === 'UPLOADING'),\n    [fileStates],\n  );\n\n  const value = React.useMemo(\n    () => ({\n      fileStates,\n      addFiles,\n      updateFileState,\n      removeFile,\n      cancelUpload,\n      uploadFiles,\n      resetFiles,\n      isUploading,\n      autoUpload,\n    }),\n    [\n      fileStates,\n      addFiles,\n      updateFileState,\n      removeFile,\n      cancelUpload,\n      uploadFiles,\n      resetFiles,\n      isUploading,\n      autoUpload,\n    ],\n  );\n\n  return (\n    <UploaderContext.Provider value={value as UploaderContextType<unknown>}>\n      {typeof children === 'function' ? children(value) : children}\n    </UploaderContext.Provider>\n  );\n}\n\n/**\n * Formats a file size in bytes to a human-readable string.\n *\n * @param bytes - The file size in bytes\n * @returns A formatted string (e.g., \"1.5 MB\")\n *\n * @example\n * ```ts\n * formatFileSize(1024); // \"1 KB\"\n * formatFileSize(1024 * 1024 * 2.5); // \"2.5 MB\"\n * ```\n */\nexport function formatFileSize(bytes?: number) {\n  if (!bytes) return '0 B';\n  const k = 1024;\n  const dm = 2;\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1282, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/components/upload/dropzone.tsx"],"sourcesContent":["'use client';\n\nimport { cn } from '@/lib/utils';\nimport { AlertCircleIcon, UploadCloudIcon } from 'lucide-react';\nimport * as React from 'react';\nimport { useDropzone, type DropzoneOptions } from 'react-dropzone';\nimport { formatFileSize, useUploader } from './uploader-provider';\n\nconst DROPZONE_VARIANTS = {\n  base: 'relative rounded-md p-4 w-full flex justify-center items-center flex-col cursor-pointer border-2 border-dashed border-muted-foreground transition-colors duration-200 ease-in-out',\n  active: 'border-primary',\n  disabled:\n    'bg-muted border-muted-foreground cursor-default pointer-events-none opacity-50',\n  accept: 'border-primary bg-primary/10',\n  reject: 'border-destructive bg-destructive/10',\n};\n\n/**\n * Props for the Dropzone component.\n *\n * @interface DropzoneProps\n * @extends {React.HTMLAttributes<HTMLInputElement>}\n */\nexport interface DropzoneProps extends React.HTMLAttributes<HTMLInputElement> {\n  /**\n   * Options passed to the underlying react-dropzone component.\n   * Cannot include 'disabled' or 'onDrop' as they are handled internally.\n   */\n  dropzoneOptions?: Omit<DropzoneOptions, 'disabled' | 'onDrop'>;\n\n  /**\n   * Whether the dropzone is disabled.\n   */\n  disabled?: boolean;\n\n  /**\n   * Message shown when files are being dragged over the dropzone.\n   */\n  dropMessageActive?: string;\n\n  /**\n   * Default message shown when the dropzone is idle.\n   */\n  dropMessageDefault?: string;\n}\n\n/**\n * A dropzone component for file uploads that integrates with the UploaderProvider.\n *\n * @component\n * @example\n * ```tsx\n * <Dropzone\n *   dropzoneOptions={{\n *     maxFiles: 5,\n *     maxSize: 1024 * 1024 * 10, // 10MB\n *   }}\n * />\n * ```\n */\nconst Dropzone = React.forwardRef<HTMLInputElement, DropzoneProps>(\n  (\n    {\n      dropzoneOptions,\n      className,\n      disabled,\n      dropMessageActive = 'Drop files here...',\n      dropMessageDefault = 'drag & drop files here, or click to select',\n      ...props\n    },\n    ref,\n  ) => {\n    const { fileStates, addFiles } = useUploader();\n    const [error, setError] = React.useState<string>();\n\n    const maxFiles = dropzoneOptions?.maxFiles;\n    const maxSize = dropzoneOptions?.maxSize;\n    const isMaxFilesReached = !!maxFiles && fileStates.length >= maxFiles;\n    const isDisabled = disabled ?? isMaxFilesReached;\n\n    const {\n      getRootProps,\n      getInputProps,\n      isDragActive,\n      isFocused,\n      isDragAccept,\n      isDragReject,\n    } = useDropzone({\n      disabled: isDisabled,\n      onDrop: (acceptedFiles, rejectedFiles) => {\n        setError(undefined);\n\n        // Handle rejections first\n        if (rejectedFiles.length > 0) {\n          if (rejectedFiles[0]?.errors[0]) {\n            const error = rejectedFiles[0].errors[0];\n            const code = error.code;\n            const messages: Record<string, string> = {\n              'file-too-large': `The file is too large. Max size is ${formatFileSize(\n                maxSize ?? 0,\n              )}.`,\n              'file-invalid-type': 'Invalid file type.',\n              'too-many-files': `You can only add ${\n                maxFiles ?? 'multiple'\n              } file(s).`,\n              default: 'The file is not supported.',\n            };\n            setError(messages[code] ?? messages.default);\n          }\n          return; // Exit early if there are any rejections\n        }\n\n        // Handle accepted files\n        if (acceptedFiles.length === 0) return;\n\n        // Check if adding these files would exceed maxFiles limit\n        if (maxFiles) {\n          const remainingSlots = maxFiles - fileStates.length;\n          // If adding all files would exceed the limit, reject them all\n          if (acceptedFiles.length > remainingSlots) {\n            setError(`You can only add ${maxFiles} file(s).`);\n            return;\n          }\n        }\n\n        addFiles(acceptedFiles);\n      },\n      ...dropzoneOptions,\n    });\n\n    const dropZoneClassName = React.useMemo(\n      () =>\n        cn(\n          DROPZONE_VARIANTS.base,\n          isFocused && DROPZONE_VARIANTS.active,\n          isDisabled && DROPZONE_VARIANTS.disabled,\n          isDragReject && DROPZONE_VARIANTS.reject,\n          isDragAccept && DROPZONE_VARIANTS.accept,\n          className,\n        ),\n      [isFocused, isDisabled, isDragAccept, isDragReject, className],\n    );\n\n    return (\n      <div className=\"w-full\">\n        <div\n          {...getRootProps({\n            className: dropZoneClassName,\n          })}\n        >\n          <input ref={ref} {...getInputProps()} {...props} />\n          <div className=\"flex flex-col items-center justify-center gap-2 text-center text-muted-foreground\">\n            <UploadCloudIcon className=\"h-10 w-10\" />\n            <div className=\"text-sm font-medium\">\n              {isDragActive ? dropMessageActive : dropMessageDefault}\n            </div>\n            {(!!maxSize || !!maxFiles) && (\n              <div className=\"text-xs\">\n                {maxFiles && maxFiles > 1 ? `Up to ${maxFiles} files` : ''}\n                {maxFiles && maxFiles > 1 && maxSize ? ', ' : ''}\n                {maxSize && `Max size: ${formatFileSize(maxSize)}`}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Error Text */}\n        {error && (\n          <div className=\"mt-1 flex items-center text-xs text-destructive\">\n            <AlertCircleIcon className=\"mr-1 h-4 w-4\" />\n            <span>{error}</span>\n          </div>\n        )}\n      </div>\n    );\n  },\n);\nDropzone.displayName = 'Dropzone';\n\nexport { Dropzone };\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1488, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/components/upload/progress-circle.tsx"],"sourcesContent":["import { cn } from '@/lib/utils';\nimport * as React from 'react';\n\n/**\n * Props for the ProgressCircle component.\n *\n * @interface ProgressCircleProps\n * @extends {React.HTMLAttributes<HTMLDivElement>}\n */\nexport interface ProgressCircleProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * The progress value as a percentage (0-100).\n   */\n  progress: number;\n\n  /**\n   * The diameter of the circle in pixels.\n   * @default 48\n   */\n  size?: number;\n\n  /**\n   * The width of the progress stroke in pixels.\n   * @default 4\n   */\n  strokeWidth?: number;\n}\n\n/**\n * A circular progress indicator component that visualizes completion percentage.\n *\n * @component\n * @example\n * ```tsx\n * <ProgressCircle progress={75} />\n * <ProgressCircle progress={50} size={64} strokeWidth={6} />\n * ```\n */\nconst ProgressCircle = React.forwardRef<HTMLDivElement, ProgressCircleProps>(\n  ({ progress, size = 48, strokeWidth = 4, className, ...props }, ref) => {\n    const radius = (size - strokeWidth) / 2;\n    const circumference = 2 * Math.PI * radius;\n    const offset = circumference - (progress / 100) * circumference;\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          'relative flex flex-col items-center justify-center text-white',\n          className,\n        )}\n        style={{\n          width: size,\n          height: size,\n        }}\n        {...props}\n      >\n        <svg\n          className=\"absolute\" // Position SVG centered relative to the div\n          width={size}\n          height={size}\n          viewBox={`0 0 ${size} ${size}`}\n          style={{ transform: 'rotate(-90deg)' }} // Start from top\n        >\n          {/* Background track */}\n          <circle\n            cx={size / 2}\n            cy={size / 2}\n            r={radius}\n            strokeWidth={strokeWidth}\n            className=\"fill-none stroke-gray-500\"\n          />\n          {/* Progress arc */}\n          <circle\n            cx={size / 2}\n            cy={size / 2}\n            r={radius}\n            strokeWidth={strokeWidth}\n            className=\"fill-none stroke-white\"\n            strokeDasharray={circumference}\n            strokeDashoffset={offset}\n            style={{ transition: 'stroke-dashoffset 0.3s ease' }} // Smooth transition\n          />\n        </svg>\n        {/* Progress Percentage Text (centered visually) */}\n        <div className=\"z-10 text-xs font-medium\">{Math.round(progress)}%</div>\n      </div>\n    );\n  },\n);\nProgressCircle.displayName = 'ProgressCircle';\n\nexport { ProgressCircle };\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AA4BA;;;;;;;;;CASC,GACD,MAAM,+BAAiB,CAAA,GAAA,4RAAA,CAAA,aAAgB,AAAD,OACpC,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,cAAc,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC9D,MAAM,SAAS,CAAC,OAAO,WAAW,IAAI;IACtC,MAAM,gBAAgB,IAAI,KAAK,EAAE,GAAG;IACpC,MAAM,SAAS,gBAAgB,AAAC,WAAW,MAAO;IAElD,qBACE,4TAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAEF,OAAO;YACL,OAAO;YACP,QAAQ;QACV;QACC,GAAG,KAAK;;0BAET,4TAAC;gBACC,WAAU,WAAW,4CAA4C;;gBACjE,OAAO;gBACP,QAAQ;gBACR,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,MAAM;gBAC9B,OAAO;oBAAE,WAAW;gBAAiB;;kCAGrC,4TAAC;wBACC,IAAI,OAAO;wBACX,IAAI,OAAO;wBACX,GAAG;wBACH,aAAa;wBACb,WAAU;;;;;;kCAGZ,4TAAC;wBACC,IAAI,OAAO;wBACX,IAAI,OAAO;wBACX,GAAG;wBACH,aAAa;wBACb,WAAU;wBACV,iBAAiB;wBACjB,kBAAkB;wBAClB,OAAO;4BAAE,YAAY;wBAA8B;;;;;;;;;;;;0BAIvD,4TAAC;gBAAI,WAAU;;oBAA4B,KAAK,KAAK,CAAC;oBAAU;;;;;;;;;;;;;AAGtE;;AAEF,eAAe,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1595, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/components/upload/multi-image.tsx"],"sourcesContent":["'use client';\n\nimport { cn } from '@/lib/utils';\nimport { Trash2Icon, XIcon } from 'lucide-react';\nimport * as React from 'react';\nimport { type DropzoneOptions } from 'react-dropzone';\nimport { Dropzone } from './dropzone';\nimport { ProgressCircle } from './progress-circle';\nimport { useUploader } from './uploader-provider';\n\n/**\n * Props for the ImageList component.\n *\n * @interface ImageListProps\n * @extends {React.HTMLAttributes<HTMLDivElement>}\n */\nexport interface ImageListProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Whether the image deletion controls should be disabled.\n   */\n  disabled?: boolean;\n}\n\n/**\n * Displays a grid of image previews with upload status and controls.\n *\n * @component\n * @example\n * ```tsx\n * <ImageList className=\"my-4\" />\n * ```\n */\nconst ImageList = React.forwardRef<HTMLDivElement, ImageListProps>(\n  ({ className, disabled: initialDisabled, ...props }, ref) => {\n    const { fileStates, removeFile, cancelUpload } = useUploader();\n\n    // Create temporary URLs for image previews\n    const tempUrls = React.useMemo(() => {\n      const urls: Record<string, string> = {};\n      fileStates.forEach((fileState) => {\n        if (fileState.file) {\n          urls[fileState.key] = URL.createObjectURL(fileState.file);\n        }\n      });\n      return urls;\n    }, [fileStates]);\n\n    // Clean up temporary URLs on unmount\n    React.useEffect(() => {\n      return () => {\n        Object.values(tempUrls).forEach((url) => {\n          URL.revokeObjectURL(url);\n        });\n      };\n    }, [tempUrls]);\n\n    if (!fileStates.length) return null;\n\n    return (\n      <div\n        ref={ref}\n        className={cn('mt-4 grid grid-cols-3 gap-2', className)}\n        {...props}\n      >\n        {fileStates.map((fileState) => {\n          const displayUrl = tempUrls[fileState.key] ?? fileState.url;\n          return (\n            <div\n              key={fileState.key}\n              className={\n                'relative aspect-square h-full w-full rounded-md border-0 bg-muted p-0 shadow-md'\n              }\n            >\n              {displayUrl ? (\n                <img\n                  className=\"h-full w-full rounded-md object-cover\"\n                  src={displayUrl}\n                  alt={fileState.file.name}\n                />\n              ) : (\n                <div className=\"flex h-full w-full items-center justify-center bg-secondary\">\n                  <span className=\"text-xs text-muted-foreground\">\n                    No Preview\n                  </span>\n                </div>\n              )}\n\n              {/* Upload progress indicator */}\n              {fileState.status === 'UPLOADING' && (\n                <div className=\"absolute left-0 top-0 flex h-full w-full items-center justify-center rounded-md bg-black/70\">\n                  <ProgressCircle progress={fileState.progress} />\n                </div>\n              )}\n\n              {/* Delete/cancel button */}\n              {displayUrl && !initialDisabled && (\n                <button\n                  type=\"button\"\n                  className=\"group pointer-events-auto absolute right-1 top-1 z-10 -translate-y-1/4 translate-x-1/4 transform rounded-full border border-muted-foreground bg-background p-1 shadow-md transition-all hover:scale-110\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    if (fileState.status === 'UPLOADING') {\n                      cancelUpload(fileState.key);\n                    } else {\n                      removeFile(fileState.key);\n                    }\n                  }}\n                >\n                  {fileState.status === 'UPLOADING' ? (\n                    <XIcon className=\"block h-4 w-4 text-muted-foreground\" />\n                  ) : (\n                    <Trash2Icon className=\"block h-4 w-4 text-muted-foreground\" />\n                  )}\n                </button>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    );\n  },\n);\nImageList.displayName = 'ImageList';\n\n/**\n * Props for the ImageDropzone component.\n *\n * @interface ImageDropzoneProps\n * @extends {React.HTMLAttributes<HTMLDivElement>}\n */\nexport interface ImageDropzoneProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Whether the dropzone is disabled.\n   */\n  disabled?: boolean;\n\n  /**\n   * Options passed to the underlying Dropzone component.\n   * Cannot include 'disabled' or 'onDrop' as they are handled internally.\n   */\n  dropzoneOptions?: Omit<DropzoneOptions, 'disabled' | 'onDrop'>;\n\n  /**\n   * Ref for the input element inside the Dropzone.\n   */\n  inputRef?: React.Ref<HTMLInputElement>;\n}\n\n/**\n * A dropzone component specifically for image uploads.\n *\n * @component\n * @example\n * ```tsx\n * <ImageDropzone\n *   dropzoneOptions={{\n *     maxFiles: 5,\n *     maxSize: 1024 * 1024 * 2, // 2MB\n *   }}\n * />\n * ```\n */\nconst ImageDropzone = React.forwardRef<HTMLDivElement, ImageDropzoneProps>(\n  ({ dropzoneOptions, className, disabled, inputRef, ...props }, ref) => {\n    return (\n      <div ref={ref} className={className} {...props}>\n        <Dropzone\n          ref={inputRef}\n          dropzoneOptions={{\n            accept: { 'image/*': [] },\n            ...dropzoneOptions,\n          }}\n          disabled={disabled}\n          dropMessageActive=\"Drop images here...\"\n          dropMessageDefault=\"drag & drop images here, or click to select\"\n        />\n      </div>\n    );\n  },\n);\nImageDropzone.displayName = 'ImageDropzone';\n\n/**\n * Props for the ImageUploader component.\n *\n * @interface ImageUploaderProps\n * @extends {React.HTMLAttributes<HTMLDivElement>}\n */\nexport interface ImageUploaderProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Maximum number of images allowed.\n   */\n  maxFiles?: number;\n\n  /**\n   * Maximum file size in bytes.\n   */\n  maxSize?: number;\n\n  /**\n   * Whether the uploader is disabled.\n   */\n  disabled?: boolean;\n\n  /**\n   * Additional className for the dropzone component.\n   */\n  dropzoneClassName?: string;\n\n  /**\n   * Additional className for the image list component.\n   */\n  imageListClassName?: string;\n\n  /**\n   * Ref for the input element inside the Dropzone.\n   */\n  inputRef?: React.Ref<HTMLInputElement>;\n}\n\n/**\n * A complete image uploader component with dropzone and image grid preview.\n *\n * @component\n * @example\n * ```tsx\n * <ImageUploader\n *   maxFiles={10}\n *   maxSize={1024 * 1024 * 5} // 5MB\n * />\n * ```\n */\nconst ImageUploader = React.forwardRef<HTMLDivElement, ImageUploaderProps>(\n  (\n    {\n      maxFiles,\n      maxSize,\n      disabled,\n      className,\n      dropzoneClassName,\n      imageListClassName,\n      inputRef,\n      ...props\n    },\n    ref,\n  ) => {\n    return (\n      <div ref={ref} className={cn('w-full space-y-4', className)} {...props}>\n        <ImageDropzone\n          ref={inputRef}\n          dropzoneOptions={{\n            maxFiles,\n            maxSize,\n          }}\n          disabled={disabled}\n          className={dropzoneClassName}\n        />\n\n        <ImageList className={imageListClassName} disabled={disabled} />\n      </div>\n    );\n  },\n);\nImageUploader.displayName = 'ImageUploader';\n\nexport { ImageList, ImageDropzone, ImageUploader };\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1859, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/components/multiImageUpload.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { ImageUploader } from \"@/components/upload/multi-image\";\r\nimport {\r\n  UploaderProvider,\r\n  type UploadFn,\r\n} from \"@/components/upload/uploader-provider\";\r\nimport { useEdgeStore } from \"@/lib/edgestore\";\r\nimport * as React from \"react\";\r\n\r\ninterface MultiImageDropzoneUsageProps {\r\n  onUpload: (url: string) => void;\r\n}\r\n\r\nexport function MultiImageDropzoneUsage({\r\n  onUpload,\r\n}: MultiImageDropzoneUsageProps) {\r\n  const { edgestore } = useEdgeStore();\r\n\r\n  const uploadFn: UploadFn = React.useCallback(\r\n    async ({ file, onProgressChange, signal }) => {\r\n      const res = await edgestore.publicFiles.upload({\r\n        file,\r\n        signal,\r\n        onProgressChange,\r\n      });\r\n      // Pass the uploaded URL to the parent\r\n      onUpload(res.url);\r\n      return res;\r\n    },\r\n    [edgestore, onUpload]\r\n  );\r\n\r\n  return (\r\n    <UploaderProvider uploadFn={uploadFn} autoUpload>\r\n      <ImageUploader\r\n        maxFiles={10}\r\n        maxSize={1024 * 1024 * 5} // 1 MB\r\n      />\r\n    </UploaderProvider>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAIA;AACA;;;AARA;;;;;AAcO,SAAS,wBAAwB,EACtC,QAAQ,EACqB;;IAC7B,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,mHAAA,CAAA,eAAY,AAAD;IAEjC,MAAM,WAAqB,CAAA,GAAA,4RAAA,CAAA,cAAiB,AAAD;yDACzC,OAAO,EAAE,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE;YACvC,MAAM,MAAM,MAAM,UAAU,WAAW,CAAC,MAAM,CAAC;gBAC7C;gBACA;gBACA;YACF;YACA,sCAAsC;YACtC,SAAS,IAAI,GAAG;YAChB,OAAO;QACT;wDACA;QAAC;QAAW;KAAS;IAGvB,qBACE,4TAAC,gJAAA,CAAA,mBAAgB;QAAC,UAAU;QAAU,UAAU;kBAC9C,cAAA,4TAAC,0IAAA,CAAA,gBAAa;YACZ,UAAU;YACV,SAAS,OAAO,OAAO;;;;;;;;;;;AAI/B;GA3BgB;;QAGQ,mHAAA,CAAA,eAAY;;;KAHpB","debugId":null}},
    {"offset": {"line": 1926, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/app/dashboard/products/new/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Trash2, Plus, ArrowLeft, Loader2, X } from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormDescription,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from \"@/components/ui/form\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Switch } from \"@/components/ui/switch\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport { useToast } from \"@/components/hooks/use-toast\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\n\r\n// Import product schema and store\r\nimport {\r\n  ProductData,\r\n  ProductSchema,\r\n  VariationOption,\r\n  Specification,\r\n} from \"@/schema/product\";\r\nimport { useProductStore } from \"@/store/productStore\";\r\nimport { useProductVariations } from \"@/store/variationStore\";\r\nimport { MultiImageDropzoneUsage } from \"@/components/multiImageUpload\";\r\nimport { Plus as PlusIcon, Trash2 as TrashIcon } from \"lucide-react\";\r\n\r\n// For tracking product variations internally in the form\r\ninterface FormVariation {\r\n  id?: string; // For existing variations\r\n  type: string;\r\n  options: {\r\n    id?: string;\r\n    value: string;\r\n    price?: number;\r\n    stockCount: number;\r\n    isActive?: boolean;\r\n    imageURL?: string;\r\n  }[];\r\n}\r\n\r\ninterface SpecificationData {\r\n  key: string;\r\n  value: string;\r\n}\r\n\r\n// Form-specific data structure\r\ninterface ProductFormData extends Omit<ProductData, \"variations\"> {\r\n  variationTypes?: string[];\r\n  newVariationType?: string;\r\n  formVariations?: FormVariation[];\r\n}\r\n\r\nexport default function NewProductPage() {\r\n  const router = useRouter();\r\n  const { toast } = useToast();\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [isVariationDialogOpen, setIsVariationDialogOpen] = useState(false);\r\n  const [formVariations, setFormVariations] = useState<FormVariation[]>([]);\r\n\r\n  // Use product store\r\n  const { product, setProduct, resetProduct, createProduct } =\r\n    useProductStore();\r\n\r\n  // Initialize the form with product from store or default\r\n  const form = useForm<ProductFormData>({\r\n    resolver: zodResolver(ProductSchema.omit({ variations: true })),\r\n    defaultValues: {\r\n      ...product,\r\n      imageURLs: product?.imageURLs?.length ? product.imageURLs : [\"\"],\r\n      categories: product?.categories?.length ? product.categories : [\"\"],\r\n      specifications: [],\r\n      newVariationType: \"\",\r\n      formVariations: [],\r\n    },\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  // Keep store in sync with form\r\n  useEffect(() => {\r\n    const subscription = form.watch((values) => {\r\n      setProduct({\r\n        ...values,\r\n        variations: [], // We'll handle variations separately on submit\r\n      } as ProductData);\r\n    });\r\n    return () => subscription.unsubscribe();\r\n  }, [form, setProduct]);\r\n  const prepareSpecificationsForSubmit = () => {\r\n    const specs = form.getValues(\"specifications\") || [];\r\n    return specs\r\n      .map((spec) => ({\r\n        key: spec.key?.trim() ?? \"\",\r\n        value: spec.value?.trim() ?? \"\",\r\n      }))\r\n      .filter((spec) => spec.key && spec.value);\r\n  };\r\n  // Update the prepareVariationsForSubmit function\r\n  const prepareVariationsForSubmit = (): (string | VariationOption)[] => {\r\n    return formVariations\r\n      .map((variation) => {\r\n        if (variation.id) {\r\n          return variation.id;\r\n        }\r\n        // Filter out options with empty value\r\n        const filteredOptions = variation.options.filter(\r\n          (option) => option.value && option.value.trim() !== \"\"\r\n        );\r\n        return {\r\n          type: variation.type,\r\n          options: filteredOptions.map((option) => ({\r\n            value: option.value,\r\n            price: option.price,\r\n            stockCount: option.stockCount,\r\n          })),\r\n          isActive: filteredOptions.every((opt) => opt.isActive !== false),\r\n          imageURL: filteredOptions[0]?.imageURL,\r\n        };\r\n      })\r\n      .filter(\r\n        (variation) =>\r\n          typeof variation === \"string\" ||\r\n          (variation.options && variation.options.length > 0)\r\n      );\r\n  };\r\n\r\n  // Update the onSubmit handler\r\n  const onSubmit = async (data: ProductFormData) => {\r\n    try {\r\n      setIsSubmitting(true);\r\n\r\n      // Clean and prepare the data\r\n      const submissionData: ProductData = {\r\n        name: data.name.trim(),\r\n        description: data.description.trim(),\r\n        price: Number(data.price),\r\n        isActive: data.isActive,\r\n        stockCount: Number(data.stockCount),\r\n        // Filter empty strings from arrays\r\n        imageURLs: data.imageURLs.filter((url) => url.trim() !== \"\"),\r\n        categories: data.categories.filter((cat) => cat.trim() !== \"\"),\r\n        variations: prepareVariationsForSubmit(),\r\n        specifications: prepareSpecificationsForSubmit(),\r\n      };\r\n\r\n      // Call createProduct from the store\r\n      await createProduct(submissionData);\r\n\r\n      toast({\r\n        title: \"Product created\",\r\n        description: `${data.name} has been created successfully.`,\r\n        variant: \"success\",\r\n      });\r\n\r\n      resetProduct();\r\n      form.reset(); // Reset the form\r\n      router.push(\"/dashboard/products\");\r\n    } catch (error) {\r\n      console.error(\"Error creating product:\", error);\r\n      toast({\r\n        title: \"Error\",\r\n        description:\r\n          error instanceof Error\r\n            ? error.message\r\n            : \"Failed to create product. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const { data: storedVariants, isLoading: variantsLoading } =\r\n    useProductVariations();\r\n\r\n  // Handlers for dynamic fields (imageURLs and categories)\r\n  const addImageURL = () => {\r\n    const currentURLs = form.getValues(\"imageURLs\");\r\n    form.setValue(\"imageURLs\", [...currentURLs, \"\"]);\r\n  };\r\n\r\n  const removeImageURL = (index: number) => {\r\n    const currentURLs = form.getValues(\"imageURLs\");\r\n    if (currentURLs.length > 1) {\r\n      form.setValue(\r\n        \"imageURLs\",\r\n        currentURLs.filter((_, i) => i !== index)\r\n      );\r\n    }\r\n  };\r\n\r\n  const addCategory = () => {\r\n    const currentCategories = form.getValues(\"categories\");\r\n    form.setValue(\"categories\", [...currentCategories, \"\"]);\r\n  };\r\n\r\n  const removeCategory = (index: number) => {\r\n    const currentCategories = form.getValues(\"categories\");\r\n    if (currentCategories.length > 1) {\r\n      form.setValue(\r\n        \"categories\",\r\n        currentCategories.filter((_, i) => i !== index)\r\n      );\r\n    }\r\n  };\r\n\r\n  // Handlers for variations\r\n  const addVariationType = (type: string) => {\r\n    if (!type.trim()) return;\r\n\r\n    // Check if variation type already exists\r\n    const existingType = formVariations.find(\r\n      (v) => v.type.toLowerCase() === type.toLowerCase()\r\n    );\r\n    if (existingType) {\r\n      toast({\r\n        title: \"Variation already exists\",\r\n        description: `A variation named \"${type}\" already exists.`,\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Add new variation type\r\n    setFormVariations([\r\n      ...formVariations,\r\n      {\r\n        type,\r\n        options: [{ value: \"\", stockCount: 0 }],\r\n      },\r\n    ]);\r\n\r\n    // Clear the input\r\n    form.setValue(\"newVariationType\", \"\");\r\n  };\r\n\r\n  const removeVariationType = (index: number) => {\r\n    setFormVariations(formVariations.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const addVariationOption = (variationIndex: number) => {\r\n    const updatedVariations = [...formVariations];\r\n\r\n    updatedVariations[variationIndex].options.push({\r\n      value: \"\",\r\n      stockCount: 0,\r\n    });\r\n\r\n    setFormVariations(updatedVariations);\r\n  };\r\n\r\n  const removeVariationOption = (\r\n    variationIndex: number,\r\n    optionIndex: number\r\n  ) => {\r\n    const updatedVariations = [...formVariations];\r\n\r\n    if (updatedVariations[variationIndex].options.length > 1) {\r\n      updatedVariations[variationIndex].options = updatedVariations[\r\n        variationIndex\r\n      ].options.filter((_, i) => i !== optionIndex);\r\n\r\n      setFormVariations(updatedVariations);\r\n    }\r\n  };\r\n\r\n  const updateVariationOption = (\r\n    variationIndex: number,\r\n    optionIndex: number,\r\n    field: keyof VariationOption | \"id\" | \"value\" | \"price\" | \"stockCount\",\r\n    value: VariationOption[keyof VariationOption] | string | number | undefined\r\n  ) => {\r\n    const updatedVariations = [...formVariations];\r\n    updatedVariations[variationIndex].options[optionIndex] = {\r\n      ...updatedVariations[variationIndex].options[optionIndex],\r\n      [field]: value,\r\n    };\r\n    setFormVariations(updatedVariations);\r\n  };\r\n\r\n  // Common variation types for quick selection\r\n  const commonVariationTypes = [\"Size\", \"Color\", \"Material\", \"Style\", \"Weight\"];\r\n\r\n  // Apply a variation set to the product\r\n  const applyVariationSet = (set: any) => {\r\n    // Convert the variation set to the format expected by our form\r\n    const newFormVariations = set.variations.map((variation: any) => ({\r\n      type: variation.name,\r\n      options: variation.options.map((option: any) => ({\r\n        value: option.value,\r\n        price: option.priceAdjustment\r\n          ? form.getValues(\"price\") + option.priceAdjustment\r\n          : undefined,\r\n        stockCount: option.stockCount || 0,\r\n        isActive: true,\r\n      })),\r\n    }));\r\n\r\n    // Update the form variations\r\n    setFormVariations(newFormVariations);\r\n\r\n    // Close the dialog\r\n    setIsVariationDialogOpen(false);\r\n\r\n    // Show success toast\r\n    toast({\r\n      title: \"Variation set applied\",\r\n      description: `${set.name} has been applied to this product.`,\r\n      variant: \"success\",\r\n    });\r\n  };\r\n\r\n  // Handlers for specifications\r\n  const addSpecification = () => {\r\n    const currentSpecs = form.getValues(\"specifications\") || [];\r\n    form.setValue(\"specifications\", [...currentSpecs, { key: \"\", value: \"\" }]);\r\n  };\r\n\r\n  const removeSpecification = (index: number) => {\r\n    const currentSpecs = form.getValues(\"specifications\") || [];\r\n    if (currentSpecs.length > 1) {\r\n      form.setValue(\r\n        \"specifications\",\r\n        currentSpecs.filter((_, i) => i !== index)\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 md:p-8\">\r\n      <div className=\"flex items-center gap-4 mb-6\">\r\n        <Button variant=\"outline\" size=\"icon\" onClick={() => router.back()}>\r\n          <ArrowLeft className=\"h-4 w-4\" />\r\n        </Button>\r\n        <h1 className=\"text-2xl font-bold\">Add New Product</h1>\r\n      </div>\r\n\r\n      <Form {...form}>\r\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\r\n          <div className=\"grid grid-cols-1 gap-8 md:grid-cols-2\">\r\n            {/* Basic Information */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Basic Information</CardTitle>\r\n                <CardDescription>\r\n                  Enter the basic details about your product.\r\n                </CardDescription>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"name\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel>Product Name</FormLabel>\r\n                      <FormControl>\r\n                        <Input placeholder=\"Enter product name\" {...field} />\r\n                      </FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"description\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel>Description</FormLabel>\r\n                      <FormControl>\r\n                        <Textarea\r\n                          placeholder=\"Enter product description\"\r\n                          className=\"min-h-32\"\r\n                          {...field}\r\n                        />\r\n                      </FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <FormField\r\n                    control={form.control}\r\n                    name=\"price\"\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel>Price ($)</FormLabel>\r\n                        <FormControl>\r\n                          <Input\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            placeholder=\"0.00\"\r\n                            {...field}\r\n                            onChange={(e) => {\r\n                              // Ensure we're working with numbers, not strings\r\n                              field.onChange(parseFloat(e.target.value) || 0);\r\n                            }}\r\n                          />\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n\r\n                  <FormField\r\n                    control={form.control}\r\n                    name=\"stockCount\"\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel>Stock Count</FormLabel>\r\n                        <FormControl>\r\n                          <Input\r\n                            type=\"number\"\r\n                            min=\"0\"\r\n                            step=\"1\"\r\n                            placeholder=\"0\"\r\n                            {...field}\r\n                            onChange={(e) =>\r\n                              field.onChange(parseInt(e.target.value, 10) || 0)\r\n                            }\r\n                          />\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n                </div>\r\n\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"isActive\"\r\n                  render={({ field }) => (\r\n                    <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\r\n                      <div className=\"space-y-0.5\">\r\n                        <FormLabel className=\"text-base\">\r\n                          Active Status\r\n                        </FormLabel>\r\n                        <FormDescription>\r\n                          Make this product visible to customers\r\n                        </FormDescription>\r\n                      </div>\r\n                      <FormControl>\r\n                        <Switch\r\n                          checked={field.value}\r\n                          onCheckedChange={field.onChange}\r\n                        />\r\n                      </FormControl>\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Images and Categories */}\r\n            <div className=\"space-y-8\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Product Images</CardTitle>\r\n                  <CardDescription>\r\n                    Add image URLs for your product. The first image will be\r\n                    used as the main image.\r\n                  </CardDescription>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <MultiImageDropzoneUsage\r\n                    onUpload={(url: string) => {\r\n                      // Add the new URL to the form's imageURLs array\r\n                      const current = form.getValues(\"imageURLs\") || [];\r\n                      form.setValue(\"imageURLs\", [\r\n                        ...current.filter(Boolean),\r\n                        url,\r\n                      ]);\r\n                    }}\r\n                  />\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Categories</CardTitle>\r\n                  <CardDescription>\r\n                    Assign categories to help customers find your product.\r\n                  </CardDescription>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  {(form.watch(\"categories\") || [\"\"]).map((cat, index) => (\r\n                    <div key={index} className=\"flex items-end gap-2\">\r\n                      <FormField\r\n                        control={form.control}\r\n                        name={`categories.${index}`}\r\n                        render={({ field }) => (\r\n                          <FormItem className=\"flex-1\">\r\n                            <FormLabel\r\n                              className={index !== 0 ? \"sr-only\" : undefined}\r\n                            >\r\n                              Category\r\n                            </FormLabel>\r\n                            <FormControl>\r\n                              <Input placeholder=\"Enter category\" {...field} />\r\n                            </FormControl>\r\n                            <FormMessage />\r\n                          </FormItem>\r\n                        )}\r\n                      />\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline\"\r\n                        size=\"icon\"\r\n                        onClick={() => removeCategory(index)}\r\n                        disabled={(form.watch(\"categories\")?.length || 0) <= 1}\r\n                      >\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n                  ))}\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    className=\"mt-2\"\r\n                    onClick={addCategory}\r\n                  >\r\n                    <Plus className=\"mr-2 h-4 w-4\" />\r\n                    Add Category\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            {/* Specifications Card */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Specifications</CardTitle>\r\n                <CardDescription>\r\n                  Add key-value specifications for your product (e.g., Material,\r\n                  Dimensions).\r\n                </CardDescription>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                {(form.watch(\"specifications\") || [{ key: \"\", value: \"\" }]).map(\r\n                  (spec, index) => (\r\n                    <div key={index} className=\"flex items-end gap-2\">\r\n                      <FormField\r\n                        control={form.control}\r\n                        name={`specifications.${index}.key`}\r\n                        render={({ field }) => (\r\n                          <FormItem className=\"flex-1\">\r\n                            <FormLabel\r\n                              className={index !== 0 ? \"sr-only\" : undefined}\r\n                            >\r\n                              Key\r\n                            </FormLabel>\r\n                            <FormControl>\r\n                              <Input placeholder=\"e.g., Material\" {...field} />\r\n                            </FormControl>\r\n                            <FormMessage />\r\n                          </FormItem>\r\n                        )}\r\n                      />\r\n                      <FormField\r\n                        control={form.control}\r\n                        name={`specifications.${index}.value`}\r\n                        render={({ field }) => (\r\n                          <FormItem className=\"flex-1\">\r\n                            <FormLabel\r\n                              className={index !== 0 ? \"sr-only\" : undefined}\r\n                            >\r\n                              Value\r\n                            </FormLabel>\r\n                            <FormControl>\r\n                              <Input placeholder=\"e.g., Bamboo\" {...field} />\r\n                            </FormControl>\r\n                            <FormMessage />\r\n                          </FormItem>\r\n                        )}\r\n                      />\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline\"\r\n                        size=\"icon\"\r\n                        onClick={() => removeSpecification(index)}\r\n                        disabled={\r\n                          (form.watch(\"specifications\")?.length || 1) <= 1\r\n                        }\r\n                      >\r\n                        <TrashIcon className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n                  )\r\n                )}\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  className=\"mt-2\"\r\n                  onClick={addSpecification}\r\n                >\r\n                  <PlusIcon className=\"mr-2 h-4 w-4\" />\r\n                  Add Specification\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Product Variations */}\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0\">\r\n              <div>\r\n                <CardTitle>Product Variations</CardTitle>\r\n                <CardDescription>\r\n                  Add variations like size, color, or material to your product.\r\n                </CardDescription>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-6\">\r\n              {/* Add new variation type */}\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex flex-wrap gap-2 mb-2\">\r\n                  {commonVariationTypes.map((type) => (\r\n                    <Badge\r\n                      key={type}\r\n                      variant=\"outline\"\r\n                      className=\"cursor-pointer hover:bg-accent\"\r\n                      onClick={() => addVariationType(type)}\r\n                    >\r\n                      {type}\r\n                    </Badge>\r\n                  ))}\r\n                </div>\r\n\r\n                <div className=\"flex items-end gap-2\">\r\n                  <div className=\"flex-1\">\r\n                    <FormLabel>New Variation Type</FormLabel>\r\n                    <FormField\r\n                      control={form.control}\r\n                      name=\"newVariationType\"\r\n                      render={({ field }) => (\r\n                        <FormItem>\r\n                          <FormControl>\r\n                            <Input\r\n                              placeholder=\"e.g., Size, Color, Material\"\r\n                              {...field}\r\n                            />\r\n                          </FormControl>\r\n                          <FormMessage />\r\n                        </FormItem>\r\n                      )}\r\n                    />\r\n                  </div>\r\n                  <Button\r\n                    type=\"button\"\r\n                    onClick={() =>\r\n                      addVariationType(form.watch(\"newVariationType\") || \"\")\r\n                    }\r\n                    disabled={!form.watch(\"newVariationType\")?.trim()}\r\n                  >\r\n                    <Plus className=\"mr-2 h-4 w-4\" />\r\n                    Add\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Existing variations */}\r\n              {formVariations.length > 0 ? (\r\n                <div className=\"space-y-6\">\r\n                  {formVariations.map((variation, variationIndex) => (\r\n                    <div\r\n                      key={variationIndex}\r\n                      className=\"border rounded-lg p-4 space-y-4\"\r\n                    >\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <h3 className=\"text-lg font-medium\">\r\n                          {variation.type}\r\n                        </h3>\r\n                        <Button\r\n                          type=\"button\"\r\n                          variant=\"outline\"\r\n                          size=\"sm\"\r\n                          onClick={() => removeVariationType(variationIndex)}\r\n                          className=\"h-8 px-2 text-destructive hover:bg-destructive/10 hover:text-destructive\"\r\n                        >\r\n                          <X className=\"h-4 w-4 mr-1\" />\r\n                          Remove\r\n                        </Button>\r\n                      </div>\r\n                      <div className=\"space-y-3\">\r\n                        {variation.options.map((option, optionIndex) => (\r\n                          <div\r\n                            key={optionIndex}\r\n                            className=\"grid grid-cols-1 md:grid-cols-3 gap-3 items-end\"\r\n                          >\r\n                            <div className=\"flex-1\">\r\n                              <FormLabel\r\n                                className={\r\n                                  optionIndex !== 0 ? \"sr-only\" : undefined\r\n                                }\r\n                              >\r\n                                Option Value\r\n                              </FormLabel>\r\n                              <Input\r\n                                placeholder={`Enter ${variation.type}`}\r\n                                value={option.value}\r\n                                onChange={(e) =>\r\n                                  updateVariationOption(\r\n                                    variationIndex,\r\n                                    optionIndex,\r\n                                    \"value\",\r\n                                    e.target.value\r\n                                  )\r\n                                }\r\n                              />\r\n                            </div>\r\n                            <div className=\"flex-1\">\r\n                              <FormLabel\r\n                                className={\r\n                                  optionIndex !== 0 ? \"sr-only\" : undefined\r\n                                }\r\n                              >\r\n                                Price Adjustment ($)\r\n                              </FormLabel>\r\n                              <Input\r\n                                type=\"number\"\r\n                                step=\"0.01\"\r\n                                placeholder=\"0.00\"\r\n                                value={option.price ?? 0}\r\n                                onChange={(e) =>\r\n                                  updateVariationOption(\r\n                                    variationIndex,\r\n                                    optionIndex,\r\n                                    \"price\",\r\n                                    parseFloat(e.target.value) || 0\r\n                                  )\r\n                                }\r\n                              />\r\n                            </div>\r\n                            <div className=\"flex gap-2\">\r\n                              <div className=\"flex-1\">\r\n                                <FormLabel\r\n                                  className={\r\n                                    optionIndex !== 0 ? \"sr-only\" : undefined\r\n                                  }\r\n                                >\r\n                                  Stock\r\n                                </FormLabel>\r\n                                <Input\r\n                                  type=\"number\"\r\n                                  min=\"0\"\r\n                                  step=\"1\"\r\n                                  placeholder=\"0\"\r\n                                  value={option.stockCount}\r\n                                  onChange={(e) =>\r\n                                    updateVariationOption(\r\n                                      variationIndex,\r\n                                      optionIndex,\r\n                                      \"stockCount\",\r\n                                      parseInt(e.target.value, 10) || 0\r\n                                    )\r\n                                  }\r\n                                />\r\n                              </div>\r\n                              <Button\r\n                                type=\"button\"\r\n                                variant=\"outline\"\r\n                                size=\"icon\"\r\n                                className=\"self-end\"\r\n                                onClick={() =>\r\n                                  removeVariationOption(\r\n                                    variationIndex,\r\n                                    optionIndex\r\n                                  )\r\n                                }\r\n                                disabled={variation.options.length <= 1}\r\n                              >\r\n                                <Trash2 className=\"h-4 w-4\" />\r\n                              </Button>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"outline\"\r\n                        size=\"sm\"\r\n                        onClick={() => addVariationOption(variationIndex)}\r\n                      >\r\n                        <Plus className=\"mr-2 h-4 w-4\" />\r\n                        Add Option\r\n                      </Button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center py-6 border border-dashed rounded-lg\">\r\n                  <p className=\"text-muted-foreground\">\r\n                    No variations added yet. Add a variation type to get\r\n                    started.\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Separator />\r\n\r\n          <div className=\"flex justify-end gap-4\">\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outline\"\r\n              onClick={() => router.push(\"/dashboard/products\")}\r\n              disabled={isSubmitting}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"submit\" disabled={isSubmitting}>\r\n              {isSubmitting ? (\r\n                <>\r\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                  Creating...\r\n                </>\r\n              ) : (\r\n                \"Create Product\"\r\n              )}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}