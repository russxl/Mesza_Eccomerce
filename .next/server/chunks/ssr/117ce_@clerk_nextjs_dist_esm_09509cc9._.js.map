{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/utils/mergeNextClerkPropsWithEnv.ts"],"sourcesContent":["/* eslint-disable turbo/no-undeclared-env-vars */\nimport type { NextClerkProviderProps } from '../types';\n\nexport const mergeNextClerkPropsWithEnv = (props: Omit<NextClerkProviderProps, 'children'>) => {\n  return {\n    ...props,\n    frontendApi: props.frontendApi || process.env.NEXT_PUBLIC_CLERK_FRONTEND_API || '',\n    publishableKey: props.publishableKey || process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY || '',\n    clerkJSUrl: props.clerkJSUrl || process.env.NEXT_PUBLIC_CLERK_JS,\n    clerkJSVersion: props.clerkJSVersion || process.env.NEXT_PUBLIC_CLERK_JS_VERSION,\n    proxyUrl: props.proxyUrl || process.env.NEXT_PUBLIC_CLERK_PROXY_URL || '',\n    domain: props.domain || process.env.NEXT_PUBLIC_CLERK_DOMAIN || '',\n    isSatellite: props.isSatellite || process.env.NEXT_PUBLIC_CLERK_IS_SATELLITE === 'true',\n    signInUrl: props.signInUrl || process.env.NEXT_PUBLIC_CLERK_SIGN_IN_URL || '',\n    signUpUrl: props.signUpUrl || process.env.NEXT_PUBLIC_CLERK_SIGN_UP_URL || '',\n    afterSignInUrl: props.afterSignInUrl || process.env.NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL || '',\n    afterSignUpUrl: props.afterSignUpUrl || process.env.NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL || '',\n    sdkMetadata: {\n      name: PACKAGE_NAME,\n      version: PACKAGE_VERSION,\n    },\n  };\n};\n"],"names":[],"mappings":";;;AAGO,MAAM,6BAA6B,CAAC,UAAoD;IAC7F,OAAO;QACL,GAAG,KAAA;QACH,aAAa,MAAM,WAAA,IAAe,QAAQ,GAAA,CAAI,8BAAA,IAAkC;QAChF,gBAAgB,MAAM,cAAA,IAAkB,QAAQ,IAAI,uFAAqC;QACzF,YAAY,MAAM,UAAA,IAAc,QAAQ,GAAA,CAAI,oBAAA;QAC5C,gBAAgB,MAAM,cAAA,IAAkB,QAAQ,GAAA,CAAI,4BAAA;QACpD,UAAU,MAAM,QAAA,IAAY,QAAQ,GAAA,CAAI,2BAAA,IAA+B;QACvE,QAAQ,MAAM,MAAA,IAAU,QAAQ,GAAA,CAAI,wBAAA,IAA4B;QAChE,aAAa,MAAM,WAAA,IAAe,QAAQ,GAAA,CAAI,8BAAA,KAAmC;QACjF,WAAW,MAAM,SAAA,IAAa,QAAQ,GAAA,CAAI,6BAAA,IAAiC;QAC3E,WAAW,MAAM,SAAA,IAAa,QAAQ,GAAA,CAAI,6BAAA,IAAiC;QAC3E,gBAAgB,MAAM,cAAA,IAAkB,QAAQ,GAAA,CAAI,mCAAA,IAAuC;QAC3F,gBAAgB,MAAM,cAAA,IAAkB,QAAQ,GAAA,CAAI,mCAAA,IAAuC;QAC3F,aAAa;YACX,MAAM;YACN,SAAS;QACX;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/dist/esm/app-router/client/ClerkProvider.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ClientClerkProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ClientClerkProvider() from the server but ClientClerkProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@clerk+nextjs@4.30.0_next@1_7aaa14a908b8d3e821791800a016e828/node_modules/@clerk/nextjs/dist/esm/app-router/client/ClerkProvider.js <module evaluation>\",\n    \"ClientClerkProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,sBAAsB,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,wLACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/dist/esm/app-router/client/ClerkProvider.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ClientClerkProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ClientClerkProvider() from the server but ClientClerkProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@clerk+nextjs@4.30.0_next@1_7aaa14a908b8d3e821791800a016e828/node_modules/@clerk/nextjs/dist/esm/app-router/client/ClerkProvider.js\",\n    \"ClientClerkProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,sBAAsB,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,oKACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/app-router/client/ClerkProvider.tsx"],"sourcesContent":["'use client';\nimport { ClerkProvider as ReactClerkProvider } from '@clerk/clerk-react';\nimport { useRouter } from 'next/navigation';\nimport React from 'react';\n\nimport { ClerkNextOptionsProvider } from '../../client-boundary/NextOptionsContext';\nimport { useSafeLayoutEffect } from '../../client-boundary/useSafeLayoutEffect';\nimport type { NextClerkProviderProps } from '../../types';\nimport { mergeNextClerkPropsWithEnv } from '../../utils/mergeNextClerkPropsWithEnv';\nimport { useAwaitableNavigate } from './useAwaitableNavigate';\n\ndeclare global {\n  export interface Window {\n    __clerk_nav_await: Array<(value: void) => void>;\n    __clerk_nav: (to: string) => Promise<void>;\n  }\n}\n\nexport const ClientClerkProvider = (props: NextClerkProviderProps) => {\n  const { __unstable_invokeMiddlewareOnAuthStateChange = true } = props;\n  const router = useRouter();\n  const navigate = useAwaitableNavigate();\n\n  useSafeLayoutEffect(() => {\n    window.__unstable__onBeforeSetActive = () => {\n      if (__unstable_invokeMiddlewareOnAuthStateChange) {\n        router.refresh();\n        router.push(window.location.href);\n      }\n    };\n\n    window.__unstable__onAfterSetActive = () => {\n      router.refresh();\n    };\n  }, []);\n\n  const mergedProps = mergeNextClerkPropsWithEnv({ ...props, navigate });\n  return (\n    <ClerkNextOptionsProvider options={mergedProps}>\n      {/*// @ts-ignore*/}\n      <ReactClerkProvider {...mergedProps} />\n    </ClerkNextOptionsProvider>\n  );\n};\n"],"names":[],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/server/constants.ts"],"sourcesContent":["import { deprecated } from '@clerk/shared/deprecated';\n\n/**\n * @deprecated Use `CLERK_JS_VERSION` instead.\n */\nexport const JS_VERSION = process.env.CLERK_JS_VERSION || '';\nif (JS_VERSION) {\n  deprecated('CLERK_JS_VERSION', 'Use `NEXT_PUBLIC_CLERK_JS_VERSION` environment variable instead.');\n}\nexport const CLERK_JS_VERSION = process.env.NEXT_PUBLIC_CLERK_JS_VERSION || '';\nexport const CLERK_JS_URL = process.env.NEXT_PUBLIC_CLERK_JS || '';\nexport const API_URL = process.env.CLERK_API_URL || 'https://api.clerk.dev';\nexport const API_VERSION = process.env.CLERK_API_VERSION || 'v1';\n/**\n * @deprecated Use `CLERK_SECRET_KEY` instead.\n */\nexport const API_KEY = process.env.CLERK_API_KEY || '';\nif (API_KEY) {\n  deprecated('CLERK_API_KEY', 'Use `CLERK_SECRET_KEY` environment variable instead.');\n}\nexport const SECRET_KEY = process.env.CLERK_SECRET_KEY || '';\n/**\n * @deprecated Use `PUBLISHABLE_KEY` instead.\n */\nexport const FRONTEND_API = process.env.NEXT_PUBLIC_CLERK_FRONTEND_API || '';\nif (FRONTEND_API) {\n  deprecated('NEXT_PUBLIC_CLERK_FRONTEND_API', 'Use `NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY` environment variable instead.');\n}\nexport const PUBLISHABLE_KEY = process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY || '';\nexport const DOMAIN = process.env.NEXT_PUBLIC_CLERK_DOMAIN || '';\nexport const PROXY_URL = process.env.NEXT_PUBLIC_CLERK_PROXY_URL || '';\nexport const IS_SATELLITE = process.env.NEXT_PUBLIC_CLERK_IS_SATELLITE === 'true' || false;\nexport const SIGN_IN_URL = process.env.NEXT_PUBLIC_CLERK_SIGN_IN_URL || '';\nexport const SIGN_UP_URL = process.env.NEXT_PUBLIC_CLERK_SIGN_UP_URL || '';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,SAAS,kBAAkB;;;AAKpB,MAAM,aAAa,QAAQ,GAAA,CAAI,gBAAA,IAAoB;AAC1D,IAAI,YAAY;IACd,CAAA,GAAA,mPAAA,CAAA,aAAA,EAAW,oBAAoB,kEAAkE;AACnG;AACO,MAAM,mBAAmB,QAAQ,GAAA,CAAI,4BAAA,IAAgC;AACrE,MAAM,eAAe,QAAQ,GAAA,CAAI,oBAAA,IAAwB;AACzD,MAAM,UAAU,QAAQ,GAAA,CAAI,aAAA,IAAiB;AAC7C,MAAM,cAAc,QAAQ,GAAA,CAAI,iBAAA,IAAqB;AAIrD,MAAM,UAAU,QAAQ,GAAA,CAAI,aAAA,IAAiB;AACpD,IAAI,SAAS;IACX,CAAA,GAAA,mPAAA,CAAA,aAAA,EAAW,iBAAiB,sDAAsD;AACpF;AACO,MAAM,aAAa,QAAQ,GAAA,CAAI,gBAAA,IAAoB;AAInD,MAAM,eAAe,QAAQ,GAAA,CAAI,8BAAA,IAAkC;AAC1E,IAAI,cAAc;IAChB,CAAA,GAAA,mPAAA,CAAA,aAAA,EAAW,kCAAkC,uEAAuE;AACtH;AACO,MAAM,kBAAkB,QAAQ,IAAI,uFAAqC;AACzE,MAAM,SAAS,QAAQ,GAAA,CAAI,wBAAA,IAA4B;AACvD,MAAM,YAAY,QAAQ,GAAA,CAAI,2BAAA,IAA+B;AAC7D,MAAM,eAAe,QAAQ,GAAA,CAAI,8BAAA,KAAmC,UAAU;AAC9E,MAAM,cAAc,QAAQ,GAAA,CAAI,6BAAA,IAAiC;AACjE,MAAM,cAAc,QAAQ,GAAA,CAAI,6BAAA,IAAiC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/constants.ts"],"sourcesContent":["const Headers = {\n  NextRewrite: 'x-middleware-rewrite',\n  NextResume: 'x-middleware-next',\n  NextRedirect: 'Location',\n} as const;\n\nexport const constants = {\n  Headers,\n} as const;\n"],"names":[],"mappings":";;;AAAA,MAAM,UAAU;IACd,aAAa;IACb,YAAY;IACZ,cAAc;AAChB;AAEO,MAAM,YAAY;IACvB;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/server/errors.ts"],"sourcesContent":["export const missingDomainAndProxy = `\nMissing domain and proxyUrl. A satellite application needs to specify a domain or a proxyUrl.\n\n1) With middleware\n   e.g. export default withClerkMiddleware(req => {...}, {domain:'YOUR_DOMAIN',isSatellite:true});\n2) With environment variables e.g.\n   NEXT_PUBLIC_CLERK_DOMAIN='YOUR_DOMAIN'\n   NEXT_PUBLIC_CLERK_IS_SATELLITE='true'\n   `;\n\nexport const missingSignInUrlInDev = `\nInvalid signInUrl. A satellite application requires a signInUrl for development instances.\nCheck if signInUrl is missing from your configuration or if it is not an absolute URL\n\n1) With middleware\n   e.g. export default withClerkMiddleware(req => {...}, {signInUrl:'SOME_URL',isSatellite:true});\n2) With environment variables e.g.\n   NEXT_PUBLIC_CLERK_SIGN_IN_URL='SOME_URL'\n   NEXT_PUBLIC_CLERK_IS_SATELLITE='true'`;\n\nexport const receivedRequestForIgnoredRoute = (url: string, matcher: string) =>\n  `Clerk: The middleware was skipped for this request URL: ${url}. For performance reasons, it's recommended to your middleware matcher to:\nexport const config = {\n  matcher: ${matcher},\n};\n\nAlternatively, you can set your own ignoredRoutes. See https://clerk.com/docs/nextjs/middleware\n(This log only appears in development mode)\n`;\n\nexport const getAuthAuthHeaderMissing = () => authAuthHeaderMissing('getAuth');\n\nexport const authAuthHeaderMissing = (helperName = 'auth') =>\n  `Clerk: ${helperName}() was called but Clerk can't detect usage of authMiddleware(). Please ensure the following:\n- authMiddleware() is used in your Next.js Middleware.\n- Your Middleware matcher is configured to match this route or page.\n- If you are using the src directory, make sure the Middleware file is inside of it.\n\nFor more details, see https://clerk.com/docs/quickstarts/nextjs\n`;\n\nexport const clockSkewDetected = (verifyMessage: string) =>\n  `Clerk: Clock skew detected. This usually means that your system clock is inaccurate. Clerk will continuously try to issue new tokens, as the existing ones will be treated as \"expired\" due to clock skew.\n\nTo resolve this issue, make sure your system's clock is set to the correct time (e.g. turn off and on automatic time synchronization).\n\n---\n\n${verifyMessage}`;\n\nexport const infiniteRedirectLoopDetected = () =>\n  `Clerk: Infinite redirect loop detected. That usually means that we were not able to determine the auth state for this request. A list of common causes and solutions follows.\n\nReason 1:\nYour Clerk instance keys are incorrect, or you recently changed keys (Publishable Key, Secret Key).\nHow to resolve:\n-> Make sure you're using the correct keys from the Clerk Dashboard. If you changed keys recently, make sure to clear your browser application data and cookies.\n\nReason 2:\nA bug that may have already been fixed in the latest version of Clerk NextJS package.\nHow to resolve:\n-> Make sure you are using the latest version of '@clerk/nextjs' and 'next'.\n`;\n\nexport const informAboutProtectedRouteInfo = (\n  path: string,\n  hasPublicRoutes: boolean,\n  hasIgnoredRoutes: boolean,\n  isApiRoute: boolean,\n  defaultIgnoredRoutes: string[],\n) => {\n  const infoText = isApiRoute\n    ? `INFO: Clerk: The request to ${path} is being protected (401) because there is no signed-in user, and the path is included in \\`apiRoutes\\`. To prevent this behavior, choose one of:`\n    : `INFO: Clerk: The request to ${path} is being redirected because there is no signed-in user, and the path is not included in \\`ignoredRoutes\\` or \\`publicRoutes\\`. To prevent this behavior, choose one of:`;\n  const apiRoutesText = isApiRoute\n    ? `To prevent Clerk authentication from protecting (401) the api route, remove the rule matching \"${path}\" from the \\`apiRoutes\\` array passed to authMiddleware`\n    : undefined;\n  const publicRoutesText = hasPublicRoutes\n    ? `To make the route accessible to both signed in and signed out users, add \"${path}\" to the \\`publicRoutes\\` array passed to authMiddleware`\n    : `To make the route accessible to both signed in and signed out users, pass \\`publicRoutes: [\"${path}\"]\\` to authMiddleware`;\n  const ignoredRoutes = [...defaultIgnoredRoutes, path].map(r => `\"${r}\"`).join(', ');\n  const ignoredRoutesText = hasIgnoredRoutes\n    ? `To prevent Clerk authentication from running at all, add \"${path}\" to the \\`ignoredRoutes\\` array passed to authMiddleware`\n    : `To prevent Clerk authentication from running at all, pass \\`ignoredRoutes: [${ignoredRoutes}]\\` to authMiddleware`;\n  const afterAuthText =\n    \"Pass a custom `afterAuth` to authMiddleware, and replace Clerk's default behavior of redirecting unless a route is included in publicRoutes\";\n\n  return `${infoText}\n\n${[apiRoutesText, publicRoutesText, ignoredRoutesText, afterAuthText]\n  .filter(Boolean)\n  .map((text, index) => `${index + 1}. ${text}`)\n  .join('\\n')}\n\nFor additional information about middleware, please visit https://clerk.com/docs/nextjs/middleware\n(This log only appears in development mode, or if \\`debug: true\\` is passed to authMiddleware)`;\n};\n"],"names":[],"mappings":";;;;;;;;;;AAAO,MAAM,wBAAwB,CAAA;;;;;;;;GAAA,CAAA;AAU9B,MAAM,wBAAwB,CAAA;;;;;;;;wCAAA,CAAA;AAU9B,MAAM,iCAAiC,CAAC,KAAa,UAC1D,CAAA,wDAAA,EAA2D,GAAG,CAAA;;WAAA,EAEnD,OAAO,CAAA;;;;;AAAA,CAAA;AAOb,MAAM,2BAA2B,IAAM,sBAAsB,SAAS;AAEtE,MAAM,wBAAwB,CAAC,aAAa,MAAA,GACjD,CAAA,OAAA,EAAU,UAAU,CAAA;;;;;;AAAA,CAAA;AAQf,MAAM,oBAAoB,CAAC,gBAChC,CAAA;;;;;;AAAA,EAMA,aAAa,EAAA;AAER,MAAM,+BAA+B,IAC1C,CAAA;;;;;;;;;;;AAAA,CAAA;AAaK,MAAM,gCAAgC,CAC3C,MACA,iBACA,kBACA,YACA,yBACG;IACH,MAAM,WAAW,aACb,CAAA,4BAAA,EAA+B,IAAI,CAAA,iJAAA,CAAA,GACnC,CAAA,4BAAA,EAA+B,IAAI,CAAA,wKAAA,CAAA;IACvC,MAAM,gBAAgB,aAClB,CAAA,+FAAA,EAAkG,IAAI,CAAA,uDAAA,CAAA,GACtG,KAAA;IACJ,MAAM,mBAAmB,kBACrB,CAAA,0EAAA,EAA6E,IAAI,CAAA,wDAAA,CAAA,GACjF,CAAA,4FAAA,EAA+F,IAAI,CAAA,sBAAA,CAAA;IACvG,MAAM,gBAAgB,CAAC;WAAG;QAAsB,IAAI;KAAA,CAAE,GAAA,CAAI,CAAA,IAAK,CAAA,CAAA,EAAI,CAAC,CAAA,CAAA,CAAG,EAAE,IAAA,CAAK,IAAI;IAClF,MAAM,oBAAoB,mBACtB,CAAA,0DAAA,EAA6D,IAAI,CAAA,yDAAA,CAAA,GACjE,CAAA,4EAAA,EAA+E,aAAa,CAAA,qBAAA,CAAA;IAChG,MAAM,gBACJ;IAEF,OAAO,GAAG,QAAQ,CAAA;;AAAA,EAElB;QAAC;QAAe;QAAkB;QAAmB,aAAa;KAAA,CACjE,MAAA,CAAO,OAAO,EACd,GAAA,CAAI,CAAC,MAAM,QAAU,GAAG,QAAQ,CAAC,CAAA,EAAA,EAAK,IAAI,EAAE,EAC5C,IAAA,CAAK,IAAI,CAAC,CAAA;;;8FAAA,CAAA;AAIb","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/server/utils.ts"],"sourcesContent":["import type { RequestState } from '@clerk/backend';\nimport { buildRequestUrl, constants } from '@clerk/backend';\nimport { handleValueOrFn } from '@clerk/shared/handleValueOrFn';\nimport { isHttpOrHttps } from '@clerk/shared/proxy';\nimport type { NextRequest } from 'next/server';\nimport { NextResponse } from 'next/server';\n\nimport { constants as nextConstants } from '../constants';\nimport { API_KEY, DOMAIN, IS_SATELLITE, PROXY_URL, SECRET_KEY, SIGN_IN_URL } from './clerkClient';\nimport { missingDomainAndProxy, missingSignInUrlInDev } from './errors';\nimport type { NextMiddlewareResult, RequestLike, WithAuthOptions } from './types';\n\nexport function setCustomAttributeOnRequest(req: RequestLike, key: string, value: string): void {\n  Object.assign(req, { [key]: value });\n}\n\nexport function getCustomAttributeFromRequest(req: RequestLike, key: string): string | null | undefined {\n  // @ts-expect-error\n  return key in req ? req[key] : undefined;\n}\n\nexport function getAuthKeyFromRequest(\n  req: RequestLike,\n  key: keyof typeof constants.Attributes,\n): string | null | undefined {\n  const val = getCustomAttributeFromRequest(req, constants.Attributes[key]) || getHeader(req, constants.Headers[key]);\n  if (val) {\n    return val;\n  }\n  // alternatively, check whether the value exists as a query param\n  // this is only required for specific nextjs versions that don't support overriding request headers\n  // and is no longer needed in v5\n  if (key === 'AuthStatus' || key === 'AuthToken') {\n    return getQueryParam(req, key) || undefined;\n  }\n  return undefined;\n}\n\n// Tries to extract auth status from the request using several strategies\n// TODO: Rename Auth status and align the naming across media\nexport function getAuthStatusFromRequest(req: RequestLike): string | null | undefined {\n  return (\n    getCustomAttributeFromRequest(req, constants.Attributes.AuthStatus) ||\n    getHeader(req, constants.Headers.AuthStatus) ||\n    getQueryParam(req, constants.SearchParams.AuthStatus)\n  );\n}\n\nfunction getQueryParam(req: RequestLike, name: string): string | null | undefined {\n  if (isNextRequest(req)) {\n    return req.nextUrl.searchParams.get(name);\n  }\n\n  // Check if the request contains a parsed query object\n  // NextApiRequest does, but the IncomingMessage in the GetServerSidePropsContext case does not\n  let queryParam: string | null | undefined;\n  if ('query' in req) {\n    queryParam = req.query[name] as string | undefined;\n  }\n\n  // Fall back to query string\n  if (!queryParam) {\n    const qs = (req.url || '').split('?')[1];\n    queryParam = new URLSearchParams(qs).get(name);\n  }\n  return queryParam;\n}\n\nexport function getHeader(req: RequestLike, name: string): string | null | undefined {\n  if (isNextRequest(req)) {\n    return req.headers.get(name);\n  }\n\n  // If no header has been determined for IncomingMessage case, check if available within private `socket` headers\n  // When deployed to vercel, req.headers for API routes is a `IncomingHttpHeaders` key-val object which does not follow\n  // the Headers spec so the name is no longer case-insensitive.\n  return req.headers[name] || req.headers[name.toLowerCase()] || (req.socket as any)?._httpMessage?.getHeader(name);\n}\n\nexport function getCookie(req: RequestLike, name: string): string | undefined {\n  if (isNextRequest(req)) {\n    // Nextjs broke semver in the 13.0.0 -> 13.0.1 release, so even though\n    // this should be RequestCookie in all updated apps. In order to support apps\n    // using v13.0.0 still, we explicitly add the string type\n    // https://github.com/vercel/next.js/pull/41526\n    const reqCookieOrString = req.cookies.get(name) as ReturnType<NextRequest['cookies']['get']> | string | undefined;\n    if (!reqCookieOrString) {\n      return undefined;\n    }\n    return typeof reqCookieOrString === 'string' ? reqCookieOrString : reqCookieOrString.value;\n  }\n  return req.cookies[name];\n}\n\nfunction isNextRequest(val: unknown): val is NextRequest {\n  try {\n    const { headers, nextUrl, cookies } = (val || {}) as NextRequest;\n    return (\n      typeof headers?.get === 'function' &&\n      typeof nextUrl?.searchParams.get === 'function' &&\n      typeof cookies?.get === 'function'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\nconst OVERRIDE_HEADERS = 'x-middleware-override-headers';\nconst MIDDLEWARE_HEADER_PREFIX = 'x-middleware-request' as string;\n\nexport const setRequestHeadersOnNextResponse = (\n  res: NextResponse | Response,\n  req: NextRequest,\n  newHeaders: Record<string, string>,\n) => {\n  if (!res.headers.get(OVERRIDE_HEADERS)) {\n    // Emulate a user setting overrides by explicitly adding the required nextjs headers\n    // https://github.com/vercel/next.js/pull/41380\n    // @ts-expect-error\n    res.headers.set(OVERRIDE_HEADERS, [...req.headers.keys()]);\n    req.headers.forEach((val, key) => {\n      res.headers.set(`${MIDDLEWARE_HEADER_PREFIX}-${key}`, val);\n    });\n  }\n\n  // Now that we have normalised res to include overrides, just append the new header\n  Object.entries(newHeaders).forEach(([key, val]) => {\n    res.headers.set(OVERRIDE_HEADERS, `${res.headers.get(OVERRIDE_HEADERS)},${key}`);\n    res.headers.set(`${MIDDLEWARE_HEADER_PREFIX}-${key}`, val);\n  });\n};\n\n/**\n * Test whether the currently installed nextjs version supports overriding the request headers.\n * This feature was added in nextjs v13.0.1\n * https://github.com/vercel/next.js/pull/41380\n */\nexport const nextJsVersionCanOverrideRequestHeaders = () => {\n  try {\n    const headerKey = 'clerkTest';\n    const headerKeyInRes = `${MIDDLEWARE_HEADER_PREFIX}-${headerKey}`;\n    const res = NextResponse.next({ request: { headers: new Headers({ [headerKey]: 'true' }) } });\n    return res.headers.has(headerKeyInRes);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const injectSSRStateIntoObject = <O, T>(obj: O, authObject: T) => {\n  // Serializing the state on dev env is a temp workaround for the following issue:\n  // https://github.com/vercel/next.js/discussions/11209|Next.js\n  const __clerk_ssr_state = (\n    process.env.NODE_ENV !== 'production' ? JSON.parse(JSON.stringify({ ...authObject })) : { ...authObject }\n  ) as T;\n  return { ...obj, __clerk_ssr_state };\n};\n\nexport function isDevelopmentFromApiKey(apiKey: string): boolean {\n  return apiKey.startsWith('test_') || apiKey.startsWith('sk_test_');\n}\n\n// Auth result will be set as both a query param & header when applicable\nexport function decorateRequest(\n  req: NextRequest,\n  res: NextMiddlewareResult,\n  requestState: RequestState,\n): NextMiddlewareResult {\n  const { reason, message, status, token } = requestState;\n  // pass-through case, convert to next()\n  if (!res) {\n    res = NextResponse.next();\n  }\n\n  // redirect() case, return early\n  if (res.headers.get(nextConstants.Headers.NextRedirect)) {\n    return res;\n  }\n\n  let rewriteURL;\n\n  // next() case, convert to a rewrite\n  if (res.headers.get(nextConstants.Headers.NextResume) === '1') {\n    res.headers.delete(nextConstants.Headers.NextResume);\n    rewriteURL = new URL(req.url);\n  }\n\n  // rewrite() case, set auth result only if origin remains the same\n  const rewriteURLHeader = res.headers.get(nextConstants.Headers.NextRewrite);\n\n  if (rewriteURLHeader) {\n    const reqURL = new URL(req.url);\n    rewriteURL = new URL(rewriteURLHeader);\n\n    // if the origin has changed, return early\n    if (rewriteURL.origin !== reqURL.origin) {\n      return res;\n    }\n  }\n\n  if (rewriteURL) {\n    if (nextJsVersionCanOverrideRequestHeaders()) {\n      // If we detect that the host app is using a nextjs installation that reliably sets the\n      // request headers, we don't need to fall back to the searchParams strategy.\n      // In this case, we won't set them at all in order to avoid having them visible in the req.url\n      setRequestHeadersOnNextResponse(res, req, {\n        [constants.Headers.AuthStatus]: status,\n        [constants.Headers.AuthToken]: token || '',\n        [constants.Headers.AuthMessage]: message || '',\n        [constants.Headers.AuthReason]: reason || '',\n      });\n    } else {\n      res.headers.set(constants.Headers.AuthStatus, status);\n      res.headers.set(constants.Headers.AuthToken, token || '');\n      res.headers.set(constants.Headers.AuthMessage, message || '');\n      res.headers.set(constants.Headers.AuthReason, reason || '');\n      rewriteURL.searchParams.set(constants.SearchParams.AuthStatus, status);\n      rewriteURL.searchParams.set(constants.SearchParams.AuthToken, token || '');\n      rewriteURL.searchParams.set(constants.Headers.AuthMessage, message || '');\n      rewriteURL.searchParams.set(constants.Headers.AuthReason, reason || '');\n    }\n    res.headers.set(nextConstants.Headers.NextRewrite, rewriteURL.href);\n  }\n\n  return res;\n}\n\nexport const apiEndpointUnauthorizedNextResponse = () => {\n  return NextResponse.json(null, { status: 401, statusText: 'Unauthorized' });\n};\n\nexport const isCrossOrigin = (from: string | URL, to: string | URL) => {\n  const fromUrl = new URL(from);\n  const toUrl = new URL(to);\n  return fromUrl.origin !== toUrl.origin;\n};\n\nexport const handleMultiDomainAndProxy = (req: NextRequest, opts: WithAuthOptions) => {\n  const requestURL = buildRequestUrl(req);\n  const relativeOrAbsoluteProxyUrl = handleValueOrFn(opts?.proxyUrl, requestURL, PROXY_URL);\n  let proxyUrl;\n  if (!!relativeOrAbsoluteProxyUrl && !isHttpOrHttps(relativeOrAbsoluteProxyUrl)) {\n    proxyUrl = new URL(relativeOrAbsoluteProxyUrl, requestURL).toString();\n  } else {\n    proxyUrl = relativeOrAbsoluteProxyUrl;\n  }\n\n  const isSatellite = handleValueOrFn(opts.isSatellite, new URL(req.url), IS_SATELLITE);\n  const domain = handleValueOrFn(opts.domain, new URL(req.url), DOMAIN);\n  const signInUrl = opts?.signInUrl || SIGN_IN_URL;\n\n  if (isSatellite && !proxyUrl && !domain) {\n    throw new Error(missingDomainAndProxy);\n  }\n\n  if (isSatellite && !isHttpOrHttps(signInUrl) && isDevelopmentFromApiKey(SECRET_KEY || API_KEY)) {\n    throw new Error(missingSignInUrlInDev);\n  }\n\n  return {\n    proxyUrl,\n    isSatellite,\n    domain,\n    signInUrl,\n  };\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/server/buildClerkProps.ts"],"sourcesContent":["import type { Organization, Session, User } from '@clerk/backend';\nimport {\n  AuthStatus,\n  decodeJwt,\n  makeAuthObjectSerializable,\n  sanitizeAuthObject,\n  signedInAuthObject,\n  signedOutAuthObject,\n} from '@clerk/backend';\n\nimport { API_KEY, API_URL, API_VERSION, SECRET_KEY } from './clerkClient';\nimport type { RequestLike } from './types';\nimport { getAuthKeyFromRequest, injectSSRStateIntoObject } from './utils';\n\ntype BuildClerkPropsInitState = { user?: User | null; session?: Session | null; organization?: Organization | null };\n\n/**\n * To enable Clerk SSR support, include this object to the `props`\n * returned from `getServerSideProps`. This will automatically make the auth state available to\n * the Clerk components and hooks during SSR, the hydration phase and CSR.\n * @example\n * import { getAuth } from '@clerk/nextjs/server';\n *\n * export const getServerSideProps = ({ req }) => {\n *   const { authServerSideProps } = getAuth(req);\n *   const myData = getMyData();\n *\n *   return {\n *     props: { myData, authServerSideProps },\n *   };\n * };\n */\ntype BuildClerkProps = (req: RequestLike, authState?: BuildClerkPropsInitState) => Record<string, unknown>;\n\nexport const buildClerkProps: BuildClerkProps = (req, initState = {}) => {\n  const authToken = getAuthKeyFromRequest(req, 'AuthToken');\n  const authStatus = getAuthKeyFromRequest(req, 'AuthStatus') as AuthStatus;\n  const authMessage = getAuthKeyFromRequest(req, 'AuthMessage');\n  const authReason = getAuthKeyFromRequest(req, 'AuthReason');\n\n  const options = {\n    apiKey: API_KEY,\n    secretKey: SECRET_KEY,\n    apiUrl: API_URL,\n    apiVersion: API_VERSION,\n    authStatus,\n    authMessage,\n    authReason,\n  };\n\n  let authObject;\n  if (!authStatus || authStatus !== AuthStatus.SignedIn) {\n    authObject = signedOutAuthObject(options);\n  } else {\n    const { payload, raw } = decodeJwt(authToken as string);\n    authObject = signedInAuthObject(payload, { ...options, token: raw.text });\n  }\n\n  const sanitizedAuthObject = makeAuthObjectSerializable(sanitizeAuthObject({ ...authObject, ...initState }));\n  return injectSSRStateIntoObject({}, sanitizedAuthObject);\n};\n"],"names":[],"mappings":";;;AACA;AASA,SAAS,SAAS,SAAS,aAAa,kBAAkB;AAE1D,SAAS,uBAAuB,gCAAgC;;;;AAsBzD,MAAM,kBAAmC,CAAC,KAAK,YAAY,CAAC,CAAA,KAAM;IACvE,MAAM,8RAAY,wBAAA,EAAsB,KAAK,WAAW;IACxD,MAAM,aAAa,0SAAA,EAAsB,KAAK,YAAY;IAC1D,MAAM,gSAAc,wBAAA,EAAsB,KAAK,aAAa;IAC5D,MAAM,+RAAa,wBAAA,EAAsB,KAAK,YAAY;IAE1D,MAAM,UAAU;QACd,0RAAQ,UAAA;QACR,6RAAW,aAAA;QACX,0RAAQ,UAAA;QACR,YAAY,gSAAA;QACZ;QACA;QACA;IACF;IAEA,IAAI;IACJ,IAAI,CAAC,cAAc,gQAAe,aAAA,CAAW,QAAA,EAAU;QACrD,cAAa,0QAAA,EAAoB,OAAO;IAC1C,OAAO;QACL,MAAM,EAAE,OAAA,EAAS,GAAA,CAAI,CAAA,wPAAI,YAAA,EAAU,SAAmB;QACtD,kQAAa,qBAAA,EAAmB,SAAS;YAAE,GAAG,OAAA;YAAS,OAAO,IAAI,IAAA;QAAK,CAAC;IAC1E;IAEA,MAAM,sBAAsB,kRAAA,uPAA2B,qBAAA,EAAmB;QAAE,GAAG,UAAA;QAAY,GAAG,SAAA;IAAU,CAAC,CAAC;IAC1G,yRAAO,2BAAA,EAAyB,CAAC,GAAG,mBAAmB;AACzD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 508, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/utils/logFormatter.ts"],"sourcesContent":["import type { LogEntry } from './debugLogger';\n\n// Move to shared once clerk/shared is used in clerk/nextjs\nconst maskSecretKey = (str: any) => {\n  if (!str || typeof str !== 'string') {\n    return str;\n  }\n\n  try {\n    return (str || '').replace(/^(sk_(live|test)_)(.+?)(.{3})$/, '$1*********$4');\n  } catch (e) {\n    return '';\n  }\n};\n\nexport const logFormatter = (entry: LogEntry) => {\n  return (Array.isArray(entry) ? entry : [entry])\n    .map(entry => {\n      if (typeof entry === 'string') {\n        return maskSecretKey(entry);\n      }\n\n      const masked = Object.fromEntries(Object.entries(entry).map(([k, v]) => [k, maskSecretKey(v)]));\n      return JSON.stringify(masked, null, 2);\n    })\n    .join(', ');\n};\n"],"names":["entry"],"mappings":";;;AAGA,MAAM,gBAAgB,CAAC,QAAa;IAClC,IAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;QACnC,OAAO;IACT;IAEA,IAAI;QACF,OAAA,CAAQ,OAAO,EAAA,EAAI,OAAA,CAAQ,kCAAkC,eAAe;IAC9E,EAAA,OAAS,GAAG;QACV,OAAO;IACT;AACF;AAEO,MAAM,eAAe,CAAC,UAAoB;IAC/C,OAAA,CAAQ,MAAM,OAAA,CAAQ,KAAK,IAAI,QAAQ;QAAC,KAAK;KAAA,EAC1C,GAAA,CAAI,CAAAA,WAAS;QACZ,IAAI,OAAOA,WAAU,UAAU;YAC7B,OAAO,cAAcA,MAAK;QAC5B;QAEA,MAAM,SAAS,OAAO,WAAA,CAAY,OAAO,OAAA,CAAQA,MAAK,EAAE,GAAA,CAAI,CAAC,CAAC,GAAG,CAAC,CAAA,GAAM;gBAAC;gBAAG,cAAc,CAAC,CAAC;aAAC,CAAC;QAC9F,OAAO,KAAK,SAAA,CAAU,QAAQ,MAAM,CAAC;IACvC,CAAC,EACA,IAAA,CAAK,IAAI;AACd","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/utils/debugLogger.ts"],"sourcesContent":["// TODO: Replace with a more sophisticated logging solution\n\nimport nextPkg from 'next/package.json';\n\nimport { logFormatter } from './logFormatter';\n\nexport type Log = string | Record<string, unknown>;\nexport type LogEntry = Log | Log[];\nexport type Logger<L = Log> = {\n  commit: () => void;\n  debug: (...args: Array<L | (() => L)>) => void;\n  enable: () => void;\n};\n\nexport const createDebugLogger = (name: string, formatter: (val: LogEntry) => string) => (): Logger => {\n  const entries: LogEntry[] = [];\n  let isEnabled = false;\n\n  return {\n    enable: () => {\n      isEnabled = true;\n    },\n    debug: (...args) => {\n      if (isEnabled) {\n        entries.push(args.map(arg => (typeof arg === 'function' ? arg() : arg)));\n      }\n    },\n    commit: () => {\n      if (isEnabled) {\n        console.log(debugLogHeader(name));\n\n        /**\n         * We buffer each collected log entry so we can format them and log them all at once.\n         * Individual console.log calls are used to ensure we don't hit platform-specific log limits (Vercel and Netlify are 4kb).\n         */\n        for (const log of entries) {\n          let output = formatter(log);\n\n          output = output\n            .split('\\n')\n            .map(l => `  ${l}`)\n            .join('\\n');\n\n          // Vercel errors if the output is > 4kb, so we truncate it\n          if (process.env.VERCEL) {\n            output = truncate(output, 4096);\n          }\n\n          console.log(output);\n        }\n\n        console.log(debugLogFooter(name));\n      }\n    },\n  };\n};\n\ntype WithLogger = <L extends Logger, H extends (...args: any[]) => any>(\n  loggerFactoryOrName: string | (() => L),\n  handlerCtor: (logger: Omit<L, 'commit'>) => H,\n) => H;\n\nexport const withLogger: WithLogger = (loggerFactoryOrName, handlerCtor) => {\n  return ((...args: any) => {\n    const factory =\n      typeof loggerFactoryOrName === 'string'\n        ? createDebugLogger(loggerFactoryOrName, logFormatter)\n        : loggerFactoryOrName;\n\n    const logger = factory();\n    const handler = handlerCtor(logger as any);\n\n    try {\n      const res = handler(...args);\n      if (typeof res === 'object' && 'then' in res && typeof res.then === 'function') {\n        return res\n          .then((val: any) => {\n            logger.commit();\n            return val;\n          })\n          .catch((err: any) => {\n            logger.commit();\n            throw err;\n          });\n      }\n      // handle sync methods\n      logger.commit();\n      return res;\n    } catch (err: any) {\n      logger.commit();\n      throw err;\n    }\n  }) as ReturnType<typeof handlerCtor>;\n};\n\nfunction debugLogHeader(name: string) {\n  return `[clerk debug start: ${name}]`;\n}\n\nfunction debugLogFooter(name: string) {\n  return `[clerk debug end: ${name}] (@clerk/nextjs=${PACKAGE_VERSION},next=${nextPkg.version})`;\n}\n\n// ref: https://stackoverflow.com/questions/57769465/javascript-truncate-text-by-bytes-length\nfunction truncate(str: string, maxLength: number) {\n  const encoder = new TextEncoder();\n  const decoder = new TextDecoder('utf-8');\n\n  const encodedString = encoder.encode(str);\n  const truncatedString = encodedString.slice(0, maxLength);\n\n  // return the truncated string, removing any replacement characters that result from partially truncated characters\n  return decoder.decode(truncatedString).replace(/\\uFFFD/g, '');\n}\n"],"names":[],"mappings":";;;;AAEA,OAAO,aAAa;AAEpB,SAAS,oBAAoB;;;AAUtB,MAAM,oBAAoB,CAAC,MAAc,YAAyC,MAAc;QACrG,MAAM,UAAsB,CAAC,CAAA;QAC7B,IAAI,YAAY;QAEhB,OAAO;YACL,QAAQ,MAAM;gBACZ,YAAY;YACd;YACA,OAAO,CAAA,GAAI,SAAS;gBAClB,IAAI,WAAW;oBACb,QAAQ,IAAA,CAAK,KAAK,GAAA,CAAI,CAAA,MAAQ,OAAO,QAAQ,aAAa,IAAI,IAAI,GAAI,CAAC;gBACzE;YACF;YACA,QAAQ,MAAM;gBACZ,IAAI,WAAW;oBACb,QAAQ,GAAA,CAAI,eAAe,IAAI,CAAC;oBAMhC,KAAA,MAAW,OAAO,QAAS;wBACzB,IAAI,SAAS,UAAU,GAAG;wBAE1B,SAAS,OACN,KAAA,CAAM,IAAI,EACV,GAAA,CAAI,CAAA,IAAK,CAAA,EAAA,EAAK,CAAC,EAAE,EACjB,IAAA,CAAK,IAAI;wBAGZ,IAAI,QAAQ,GAAA,CAAI,MAAA,EAAQ;4BACtB,SAAS,SAAS,QAAQ,IAAI;wBAChC;wBAEA,QAAQ,GAAA,CAAI,MAAM;oBACpB;oBAEA,QAAQ,GAAA,CAAI,eAAe,IAAI,CAAC;gBAClC;YACF;QACF;IACF;AAOO,MAAM,aAAyB,CAAC,qBAAqB,gBAAgB;IAC1E,OAAQ,CAAA,GAAI,SAAc;QACxB,MAAM,UACJ,OAAO,wBAAwB,WAC3B,kBAAkB,ySAAqB,eAAY,IACnD;QAEN,MAAM,SAAS,QAAQ;QACvB,MAAM,UAAU,YAAY,MAAa;QAEzC,IAAI;YACF,MAAM,MAAM,QAAQ,GAAG,IAAI;YAC3B,IAAI,OAAO,QAAQ,YAAY,UAAU,OAAO,OAAO,IAAI,IAAA,KAAS,YAAY;gBAC9E,OAAO,IACJ,IAAA,CAAK,CAAC,QAAa;oBAClB,OAAO,MAAA,CAAO;oBACd,OAAO;gBACT,CAAC,EACA,KAAA,CAAM,CAAC,QAAa;oBACnB,OAAO,MAAA,CAAO;oBACd,MAAM;gBACR,CAAC;YACL;YAEA,OAAO,MAAA,CAAO;YACd,OAAO;QACT,EAAA,OAAS,KAAU;YACjB,OAAO,MAAA,CAAO;YACd,MAAM;QACR;IACF;AACF;AAEA,SAAS,eAAe,IAAA,EAAc;IACpC,OAAO,CAAA,oBAAA,EAAuB,IAAI,CAAA,CAAA,CAAA;AACpC;AAEA,SAAS,eAAe,IAAA,EAAc;IACpC,OAAO,CAAA,kBAAA,EAAqB,IAAI,CAAA,iBAAA,EAAoB,QAAe,CAAA,MAAA,yOAAS,UAAA,CAAQ,OAAO,CAAA,CAAA,CAAA;AAC7F;AAGA,SAAS,SAAS,GAAA,EAAa,SAAA,EAAmB;IAChD,MAAM,UAAU,IAAI,YAAY;IAChC,MAAM,UAAU,IAAI,YAAY,OAAO;IAEvC,MAAM,gBAAgB,QAAQ,MAAA,CAAO,GAAG;IACxC,MAAM,kBAAkB,cAAc,KAAA,CAAM,GAAG,SAAS;IAGxD,OAAO,QAAQ,MAAA,CAAO,eAAe,EAAE,OAAA,CAAQ,WAAW,EAAE;AAC9D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 624, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/server/createGetAuth.ts"],"sourcesContent":["import type { SignedInAuthObject, SignedOutAuthObject } from '@clerk/backend';\nimport { AuthStatus, constants, decodeJwt, signedInAuthObject, signedOutAuthObject } from '@clerk/backend';\nimport { deprecatedObjectProperty } from '@clerk/shared/deprecated';\nimport type { SecretKeyOrApiKey } from '@clerk/types';\n\nimport { withLogger } from '../utils/debugLogger';\nimport { API_KEY, API_URL, API_VERSION, SECRET_KEY } from './clerkClient';\nimport { getAuthAuthHeaderMissing } from './errors';\nimport type { AuthObjectWithDeprecatedResources, RequestLike } from './types';\nimport { getAuthKeyFromRequest, getCookie, getHeader } from './utils';\n\ntype GetAuthOpts = Partial<SecretKeyOrApiKey>;\n\nexport const createGetAuth = ({\n  debugLoggerName,\n  noAuthStatusMessage,\n}: {\n  noAuthStatusMessage: string;\n  debugLoggerName: string;\n}) =>\n  withLogger(debugLoggerName, logger => {\n    return (\n      req: RequestLike,\n      opts?: GetAuthOpts,\n    ):\n      | AuthObjectWithDeprecatedResources<SignedInAuthObject>\n      | AuthObjectWithDeprecatedResources<SignedOutAuthObject> => {\n      if (getHeader(req, constants.Headers.EnableDebug) === 'true') {\n        logger.enable();\n      }\n\n      // When the auth status is set, we trust that the middleware has already run\n      // Then, we don't have to re-verify the JWT here,\n      // we can just strip out the claims manually.\n      const authToken = getAuthKeyFromRequest(req, 'AuthToken') as string;\n      const authStatus = getAuthKeyFromRequest(req, 'AuthStatus') as AuthStatus;\n      const authMessage = getAuthKeyFromRequest(req, 'AuthMessage');\n      const authReason = getAuthKeyFromRequest(req, 'AuthReason');\n\n      logger.debug('Debug', {\n        authReason,\n        authMessage,\n        authStatus,\n        authToken,\n      });\n\n      if (!authStatus) {\n        throw new Error(noAuthStatusMessage);\n      }\n\n      const options = {\n        apiKey: opts?.apiKey || API_KEY,\n        authStatus,\n        authMessage,\n        secretKey: opts?.secretKey || SECRET_KEY,\n        authReason,\n        authToken,\n        apiUrl: API_URL,\n        apiVersion: API_VERSION,\n      };\n      logger.debug('Options debug', options);\n\n      if (authStatus !== AuthStatus.SignedIn) {\n        return signedOutAuthObject(options);\n      }\n\n      const jwt = decodeJwt(authToken);\n      logger.debug('JWT debug', jwt.raw.text);\n\n      const signedIn = signedInAuthObject(jwt.payload, {\n        ...options,\n        token: jwt.raw.text,\n      });\n\n      if (signedIn) {\n        if (signedIn.user) {\n          deprecatedObjectProperty(signedIn, 'user', 'Use `clerkClient.users.getUser` instead.');\n        }\n\n        if (signedIn.organization) {\n          deprecatedObjectProperty(\n            signedIn,\n            'organization',\n            'Use `clerkClient.organizations.getOrganization` instead.',\n          );\n        }\n\n        if (signedIn.session) {\n          deprecatedObjectProperty(signedIn, 'session', 'Use `clerkClient.sessions.getSession` instead.');\n        }\n      }\n\n      return signedIn;\n    };\n  });\n\nexport const parseJwt = (req: RequestLike) => {\n  const cookieToken = getCookie(req, constants.Cookies.Session);\n  const headerToken = getHeader(req, 'authorization')?.replace('Bearer ', '');\n  return decodeJwt(cookieToken || headerToken || '');\n};\n\nexport const getAuth = createGetAuth({\n  debugLoggerName: 'getAuth()',\n  noAuthStatusMessage: getAuthAuthHeaderMissing(),\n});\n"],"names":[],"mappings":";;;;;AACA,SAAS,YAAY,WAAW,WAAW,oBAAoB,2BAA2B;AAC1F,SAAS,gCAAgC;;AAGzC,SAAS,kBAAkB;AAC3B,SAAS,SAAS,SAAS,aAAa,kBAAkB;AAC1D,SAAS,gCAAgC;AAEzC,SAAS,uBAAuB,WAAW,iBAAiB;;;;;;;AAIrD,MAAM,gBAAgB,CAAC,EAC5B,eAAA,EACA,mBAAA,EACF,0RAIE,aAAA,EAAW,iBAAiB,CAAA,WAAU;QACpC,OAAO,CACL,KACA,SAG4D;YAC5D,sRAAI,YAAA,EAAU,sPAAK,YAAA,CAAU,OAAA,CAAQ,WAAW,MAAM,QAAQ;gBAC5D,OAAO,MAAA,CAAO;YAChB;YAKA,MAAM,gBAAY,sSAAA,EAAsB,KAAK,WAAW;YACxD,MAAM,+RAAa,wBAAA,EAAsB,KAAK,YAAY;YAC1D,MAAM,gSAAc,wBAAA,EAAsB,KAAK,aAAa;YAC5D,MAAM,+RAAa,wBAAA,EAAsB,KAAK,YAAY;YAE1D,OAAO,KAAA,CAAM,SAAS;gBACpB;gBACA;gBACA;gBACA;YACF,CAAC;YAED,IAAI,CAAC,YAAY;gBACf,MAAM,IAAI,MAAM,mBAAmB;YACrC;YAEA,MAAM,UAAU;gBACd,QAAA,CAAQ,QAAA,OAAA,KAAA,IAAA,KAAM,MAAA,uRAAU,UAAA;gBACxB;gBACA;gBACA,WAAA,CAAW,QAAA,OAAA,KAAA,IAAA,KAAM,SAAA,uRAAa,aAAA;gBAC9B;gBACA;gBACA,0RAAQ,UAAA;gBACR,6RAAY,eAAA;YACd;YACA,OAAO,KAAA,CAAM,iBAAiB,OAAO;YAErC,IAAI,gQAAe,aAAA,CAAW,QAAA,EAAU;gBACtC,QAAO,0QAAA,EAAoB,OAAO;YACpC;YAEA,MAAM,2PAAM,YAAA,EAAU,SAAS;YAC/B,OAAO,KAAA,CAAM,aAAa,IAAI,GAAA,CAAI,IAAI;YAEtC,MAAM,gQAAW,qBAAA,EAAmB,IAAI,OAAA,EAAS;gBAC/C,GAAG,OAAA;gBACH,OAAO,IAAI,GAAA,CAAI,IAAA;YACjB,CAAC;YAED,IAAI,UAAU;gBACZ,IAAI,SAAS,IAAA,EAAM;oBACjB,CAAA,GAAA,mPAAA,CAAA,2BAAA,EAAyB,UAAU,QAAQ,0CAA0C;gBACvF;gBAEA,IAAI,SAAS,YAAA,EAAc;oBACzB,CAAA,GAAA,mPAAA,CAAA,2BAAA,EACE,UACA,gBACA;gBAEJ;gBAEA,IAAI,SAAS,OAAA,EAAS;oBACpB,CAAA,GAAA,mPAAA,CAAA,2BAAA,EAAyB,UAAU,WAAW,gDAAgD;gBAChG;YACF;YAEA,OAAO;QACT;IACF,CAAC;AAEI,MAAM,WAAW,CAAC,QAAqB;IAhG9C,IAAA;IAiGE,MAAM,gSAAc,YAAA,EAAU,sPAAK,YAAA,CAAU,OAAA,CAAQ,OAAO;IAC5D,MAAM,cAAA,CAAc,KAAA,CAAA,GAAA,6QAAA,CAAA,YAAA,EAAU,KAAK,eAAe,CAAA,KAA9B,OAAA,KAAA,IAAA,GAAiC,OAAA,CAAQ,WAAW;IACxE,4PAAO,YAAA,EAAU,eAAe,eAAe,EAAE;AACnD;AAEO,MAAM,UAAU,cAAc;IACnC,iBAAiB;IACjB,wSAAqB,2BAAA,CAAyB;AAChD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 712, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/app-router/server/utils.ts"],"sourcesContent":["// import { headers } from 'next/headers';\nimport { NextRequest } from 'next/server';\n\nexport const buildRequestLike = () => {\n  try {\n    // Dynamically import next/headers, otherwise Next12 apps will break\n    // because next/headers was introduced in next@13\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { headers } = require('next/headers');\n    return new NextRequest('https://placeholder.com', { headers: headers() });\n  } catch (e: any) {\n    if (\n      e &&\n      'message' in e &&\n      typeof e.message === 'string' &&\n      e.message.toLowerCase().includes('Dynamic server usage'.toLowerCase())\n    ) {\n      throw e;\n    }\n\n    throw new Error(\n      `Clerk: auth() and currentUser() are only supported in App Router (/app directory).\\nIf you're using /pages, try getAuth() instead.\\nOriginal error: ${e}`,\n    );\n  }\n};\n"],"names":[],"mappings":";;;AACA,SAAS,mBAAmB;;AAErB,MAAM,mBAAmB,MAAM;IACpC,IAAI;QAIF,MAAM,EAAE,OAAA,CAAQ,CAAA,GAAI,QAAQ,cAAc;QAC1C,OAAO,kQAAI,cAAA,CAAY,2BAA2B;YAAE,SAAS,QAAQ;QAAE,CAAC;IAC1E,EAAA,OAAS,GAAQ;QACf,IACE,KACA,aAAa,KACb,OAAO,EAAE,OAAA,KAAY,YACrB,EAAE,OAAA,CAAQ,WAAA,CAAY,EAAE,QAAA,CAAS,uBAAuB,WAAA,CAAY,CAAC,GACrE;YACA,MAAM;QACR;QAEA,MAAM,IAAI,MACR,CAAA;;gBAAA,EAAuJ,CAAC,EAAA;IAE5J;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 740, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/app-router/server/auth.ts"],"sourcesContent":["import type { SignedInAuthObject, SignedOutAuthObject } from '@clerk/backend';\nimport type {\n  CheckAuthorizationParamsWithCustomPermissions,\n  CheckAuthorizationWithCustomPermissions,\n} from '@clerk/types';\n\nimport { buildClerkProps } from '../../server/buildClerkProps';\nimport { createGetAuth } from '../../server/createGetAuth';\nimport { authAuthHeaderMissing } from '../../server/errors';\nimport type { AuthObjectWithDeprecatedResources } from '../../server/types';\nimport { buildRequestLike } from './utils';\n\ntype AuthSignedIn = AuthObjectWithDeprecatedResources<\n  SignedInAuthObject & {\n    /**\n     * @experimental\n     * This function is experimental as it throws a Nextjs notFound error if user is not authenticated or authorized.\n     * In the future we would investigate a way to throw a more appropriate error that clearly describes the not authorized of authenticated status.\n     */\n    protect: {\n      (\n        params?:\n          | CheckAuthorizationParamsWithCustomPermissions\n          | ((has: CheckAuthorizationWithCustomPermissions) => boolean),\n        options?: { redirectUrl: string },\n      ): AuthObjectWithDeprecatedResources<SignedInAuthObject>;\n\n      (params?: { redirectUrl: string }): AuthObjectWithDeprecatedResources<SignedInAuthObject>;\n    };\n  }\n>;\n\ntype ProtectGeneric = {\n  protect: (params?: unknown, options?: unknown) => AuthObjectWithDeprecatedResources<SignedInAuthObject>;\n};\n\ntype AuthSignedOut = AuthObjectWithDeprecatedResources<\n  SignedOutAuthObject & {\n    /**\n     * @experimental\n     * This function is experimental as it throws a Nextjs notFound error if user is not authenticated or authorized.\n     * In the future we would investigate a way to throw a more appropriate error that clearly describes the not authorized of authenticated status.\n     */\n    protect: never;\n  }\n>;\n\nexport const auth = () => {\n  const authObject = createGetAuth({\n    debugLoggerName: 'auth()',\n    noAuthStatusMessage: authAuthHeaderMissing(),\n  })(buildRequestLike());\n\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const { notFound, redirect } = require('next/navigation');\n\n  (authObject as unknown as ProtectGeneric).protect = (params: any, options: any) => {\n    const paramsOrFunction = params?.redirectUrl\n      ? undefined\n      : (params as\n          | CheckAuthorizationParamsWithCustomPermissions\n          | ((has: CheckAuthorizationWithCustomPermissions) => boolean));\n    const redirectUrl = (params?.redirectUrl || options?.redirectUrl) as string | undefined;\n\n    const handleUnauthorized = (): any => {\n      if (redirectUrl) {\n        redirect(redirectUrl);\n      }\n      notFound();\n    };\n\n    /**\n     * User is not authenticated\n     */\n    if (!authObject.userId) {\n      return handleUnauthorized();\n    }\n\n    /**\n     * User is authenticated\n     */\n    if (!paramsOrFunction) {\n      return { ...authObject };\n    }\n\n    /**\n     * if a function is passed and returns false then throw not found\n     */\n    if (typeof paramsOrFunction === 'function') {\n      if (paramsOrFunction(authObject.has)) {\n        return { ...authObject };\n      }\n      return handleUnauthorized();\n    }\n\n    /**\n     * Checking if user is authorized when permission or role is passed\n     */\n    if (authObject.has(paramsOrFunction)) {\n      return { ...authObject };\n    }\n\n    return handleUnauthorized();\n  };\n\n  return authObject as AuthSignedIn | AuthSignedOut;\n};\n\nexport const initialState = () => {\n  return buildClerkProps(buildRequestLike());\n};\n"],"names":[],"mappings":";;;;AAMA,SAAS,uBAAuB;AAChC,SAAS,qBAAqB;AAC9B,SAAS,6BAA6B;AAEtC,SAAS,wBAAwB;;;;;AAqC1B,MAAM,OAAO,MAAM;IACxB,MAAM,uSAAa,gBAAA,EAAc;QAC/B,iBAAiB;QACjB,wSAAqB,wBAAA,CAAsB;IAC7C,CAAC,qSAAE,mBAAA,CAAiB,CAAC;IAGrB,MAAM,EAAE,QAAA,EAAU,QAAA,CAAS,CAAA,GAAI,QAAQ,iBAAiB;IAEvD,WAAyC,OAAA,GAAU,CAAC,QAAa,YAAiB;QACjF,MAAM,mBAAA,CAAmB,UAAA,OAAA,KAAA,IAAA,OAAQ,WAAA,IAC7B,KAAA,IACC;QAGL,MAAM,cAAA,CAAe,UAAA,OAAA,KAAA,IAAA,OAAQ,WAAA,KAAA,CAAe,WAAA,OAAA,KAAA,IAAA,QAAS,WAAA;QAErD,MAAM,qBAAqB,MAAW;YACpC,IAAI,aAAa;gBACf,SAAS,WAAW;YACtB;YACA,SAAS;QACX;QAKA,IAAI,CAAC,WAAW,MAAA,EAAQ;YACtB,OAAO,mBAAmB;QAC5B;QAKA,IAAI,CAAC,kBAAkB;YACrB,OAAO;gBAAE,GAAG,UAAA;YAAW;QACzB;QAKA,IAAI,OAAO,qBAAqB,YAAY;YAC1C,IAAI,iBAAiB,WAAW,GAAG,GAAG;gBACpC,OAAO;oBAAE,GAAG,UAAA;gBAAW;YACzB;YACA,OAAO,mBAAmB;QAC5B;QAKA,IAAI,WAAW,GAAA,CAAI,gBAAgB,GAAG;YACpC,OAAO;gBAAE,GAAG,UAAA;YAAW;QACzB;QAEA,OAAO,mBAAmB;IAC5B;IAEA,OAAO;AACT;AAEO,MAAM,eAAe,MAAM;IAChC,mSAAO,kBAAA,qSAAgB,mBAAA,CAAiB,CAAC;AAC3C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 803, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/app-router/server/ClerkProvider.tsx"],"sourcesContent":["import type { IsomorphicClerkOptions } from '@clerk/clerk-react';\nimport type { InitialState, PublishableKeyOrFrontendApi } from '@clerk/types';\nimport React from 'react';\n\nimport { mergeNextClerkPropsWithEnv } from '../../utils/mergeNextClerkPropsWithEnv';\nimport { ClientClerkProvider } from '../client/ClerkProvider';\nimport { initialState } from './auth';\n\ntype NextAppClerkProviderProps = React.PropsWithChildren<\n  Omit<IsomorphicClerkOptions, keyof PublishableKeyOrFrontendApi> & Partial<PublishableKeyOrFrontendApi>\n>;\n\nexport function ClerkProvider(props: NextAppClerkProviderProps) {\n  const { children, ...rest } = props;\n  const state = initialState()?.__clerk_ssr_state as InitialState;\n\n  return (\n    <ClientClerkProvider\n      {...mergeNextClerkPropsWithEnv(rest)}\n      // @ts-ignore\n      initialState={state}\n    >\n      {children}\n    </ClientClerkProvider>\n  );\n}\n"],"names":[],"mappings":";;;AAEA,OAAO,WAAW;AAElB,SAAS,kCAAkC;AAC3C,SAAS,2BAA2B;AACpC,SAAS,oBAAoB;;;;;AAMtB,SAAS,cAAc,KAAA,EAAkC;IAZhE,IAAA;IAaE,MAAM,EAAE,QAAA,EAAU,GAAG,KAAK,CAAA,GAAI;IAC9B,MAAM,QAAA,CAAQ,KAAA,CAAA,GAAA,6RAAA,CAAA,eAAA,CAAa,EAAA,KAAb,OAAA,KAAA,IAAA,GAAgB,iBAAA;IAE9B,OACE,aAAA,GAAA,oUAAA,CAAA,UAAA,CAAA,aAAA,wSAAC,sBAAA,EAAA;QACE,ySAAG,6BAAA,EAA2B,IAAI,CAAA;QAEnC,cAAc;IAAA,GAEb;AAGP","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 831, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/app-router/server/controlComponents.tsx"],"sourcesContent":["import type { Protect as ProtectClientComponent } from '@clerk/clerk-react';\nimport React from 'react';\n\nimport { auth } from './auth';\n\nexport function SignedIn(props: React.PropsWithChildren) {\n  const { children } = props;\n  const { userId } = auth();\n  return userId ? <>{children}</> : null;\n}\n\nexport function SignedOut(props: React.PropsWithChildren) {\n  const { children } = props;\n  const { userId } = auth();\n  return userId ? null : <>{children}</>;\n}\n\ntype ProtectServerComponentProps = React.ComponentProps<typeof ProtectClientComponent>;\n\n/**\n * Use `<Protect/>` in order to prevent unauthenticated or unauthorized users from accessing the children passed to the component.\n *\n * Examples:\n * ```\n * <Protect permission=\"a_permission_key\" />\n * <Protect role=\"a_role_key\" />\n * <Protect condition={(has) => has({permission:\"a_permission_key\"})} />\n * <Protect condition={(has) => has({role:\"a_role_key\"})} />\n * <Protect fallback={<p>Unauthorized</p>} />\n * ```\n */\nexport function Protect(props: ProtectServerComponentProps) {\n  const { children, fallback, ...restAuthorizedParams } = props;\n  const { has, userId } = auth();\n\n  /**\n   * Fallback to UI provided by user or `null` if authorization checks failed\n   */\n  const unauthorized = <>{fallback ?? null}</>;\n\n  const authorized = <>{children}</>;\n\n  if (!userId) {\n    return unauthorized;\n  }\n\n  /**\n   * Check against the results of `has` called inside the callback\n   */\n  if (typeof restAuthorizedParams.condition === 'function') {\n    if (restAuthorizedParams.condition(has)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n\n  if (restAuthorizedParams.role || restAuthorizedParams.permission) {\n    if (has(restAuthorizedParams)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n\n  /**\n   * If neither of the authorization params are passed behave as the `<SignedIn/>`.\n   * If fallback is present render that instead of rendering nothing.\n   */\n  return authorized;\n}\n"],"names":[],"mappings":";;;;;AACA,OAAO,WAAW;AAElB,SAAS,YAAY;;;AAEd,SAAS,SAAS,KAAA,EAAgC;IACvD,MAAM,EAAE,QAAA,CAAS,CAAA,GAAI;IACrB,MAAM,EAAE,MAAA,CAAO,CAAA,qSAAI,OAAA,CAAK;IACxB,OAAO,SAAS,aAAA,GAAA,oUAAA,CAAA,UAAA,CAAA,aAAA,CAAA,oUAAA,CAAA,UAAA,CAAA,QAAA,EAAA,MAAG,QAAS,IAAM;AACpC;AAEO,SAAS,UAAU,KAAA,EAAgC;IACxD,MAAM,EAAE,QAAA,CAAS,CAAA,GAAI;IACrB,MAAM,EAAE,MAAA,CAAO,CAAA,IAAI,wSAAA,CAAK;IACxB,OAAO,SAAS,OAAO,aAAA,GAAA,oUAAA,CAAA,UAAA,CAAA,aAAA,CAAA,oUAAA,CAAA,UAAA,CAAA,QAAA,EAAA,MAAG,QAAS;AACrC;AAgBO,SAAS,QAAQ,KAAA,EAAoC;IAC1D,MAAM,EAAE,QAAA,EAAU,QAAA,EAAU,GAAG,qBAAqB,CAAA,GAAI;IACxD,MAAM,EAAE,GAAA,EAAK,MAAA,CAAO,CAAA,qSAAI,OAAA,CAAK;IAK7B,MAAM,eAAe,aAAA,GAAA,oUAAA,CAAA,UAAA,CAAA,aAAA,CAAA,oUAAA,CAAA,UAAA,CAAA,QAAA,EAAA,MAAG,YAAA,OAAA,WAAY,IAAK;IAEzC,MAAM,aAAa,aAAA,GAAA,oUAAA,CAAA,UAAA,CAAA,aAAA,CAAA,oUAAA,CAAA,UAAA,CAAA,QAAA,EAAA,MAAG,QAAS;IAE/B,IAAI,CAAC,QAAQ;QACX,OAAO;IACT;IAKA,IAAI,OAAO,qBAAqB,SAAA,KAAc,YAAY;QACxD,IAAI,qBAAqB,SAAA,CAAU,GAAG,GAAG;YACvC,OAAO;QACT;QACA,OAAO;IACT;IAEA,IAAI,qBAAqB,IAAA,IAAQ,qBAAqB,UAAA,EAAY;QAChE,IAAI,IAAI,oBAAoB,GAAG;YAC7B,OAAO;QACT;QACA,OAAO;IACT;IAMA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 880, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/server/clerkClient.ts"],"sourcesContent":["/* eslint-disable turbo/no-undeclared-env-vars */\nimport { Clerk } from '@clerk/backend';\n\nimport { API_KEY, API_URL, API_VERSION, DOMAIN, IS_SATELLITE, PROXY_URL, SECRET_KEY } from './constants';\n\nconst clerkClient = Clerk({\n  apiKey: API_KEY,\n  secretKey: SECRET_KEY,\n  apiUrl: API_URL,\n  apiVersion: API_VERSION,\n  userAgent: `${PACKAGE_NAME}@${PACKAGE_VERSION}`,\n  proxyUrl: PROXY_URL,\n  domain: DOMAIN,\n  isSatellite: IS_SATELLITE,\n});\n\nconst createClerkClient = Clerk;\n\nexport { clerkClient, createClerkClient, Clerk };\n\nexport * from '@clerk/backend';\n\n/**\n * @deprecated Don't export the constants. Should be marked as internal\n */\nexport * from './constants';\n"],"names":[],"mappings":";;;;AACA,SAAS,aAAa;AAEtB,SAAS,SAAS,SAAS,aAAa,QAAQ,cAAc,WAAW,kBAAkB;;;AAE3F,MAAM,mQAAc,QAAA,EAAM;IACxB,0RAAQ,UAAA;IACR,6RAAW,aAAA;IACX,0RAAQ,UAAA;IACR,6RAAY,eAAA;IACZ,WAAW,GAAG,eAAY,CAAA,CAAA,EAAI,QAAe,EAAA;IAC7C,4RAAU,YAAA;IACV,0RAAQ,SAAA;IACR,+RAAa,eAAA;AACf,CAAC;AAED,MAAM,qQAAoB,QAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 909, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/app-router/server/currentUser.ts"],"sourcesContent":["import type { User } from '@clerk/backend';\n\nimport { clerkClient } from '../../server/clerkClient';\nimport { auth } from './auth';\n\n// eslint-disable-next-line @typescript-eslint/require-await\nexport async function currentUser(): Promise<User | null> {\n  const { userId } = auth();\n  return userId ? clerkClient.users.getUser(userId) : null;\n}\n"],"names":[],"mappings":";;;AAEA,SAAS,mBAAmB;AAC5B,SAAS,YAAY;;;AAGrB,eAAsB,cAAoC;IACxD,MAAM,EAAE,MAAA,CAAO,CAAA,qSAAI,OAAA,CAAK;IACxB,OAAO,6SAAS,cAAA,CAAY,KAAA,CAAM,OAAA,CAAQ,MAAM,IAAI;AACtD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 928, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/utils/response.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\n\nimport { constants as nextConstants } from '../constants';\n\n/**\n * A function that merges two Response objects into a single response.\n * The final response respects the body and the status of the last response,\n * but the cookies and headers of all responses are merged.\n */\nexport const mergeResponses = (...responses: (NextResponse | Response | null | undefined | void)[]) => {\n  const normalisedResponses = responses.filter(Boolean).map(res => {\n    // If the response is a NextResponse, we can just return it\n    if (res instanceof NextResponse) {\n      return res;\n    }\n\n    return new NextResponse(res!.body, res!);\n  });\n\n  if (normalisedResponses.length === 0) {\n    return;\n  }\n\n  const lastResponse = normalisedResponses[normalisedResponses.length - 1];\n  const finalResponse = new NextResponse(lastResponse.body, lastResponse);\n\n  for (const response of normalisedResponses) {\n    response.headers.forEach((value: string, name: string) => {\n      finalResponse.headers.set(name, value);\n    });\n\n    response.cookies.getAll().forEach(cookie => {\n      const { name, value, ...options } = cookie;\n\n      finalResponse.cookies.set(name, value, options);\n    });\n  }\n\n  return finalResponse;\n};\n\nexport const isRedirect = (res: Response) => {\n  return res.headers.get(nextConstants.Headers.NextRedirect);\n};\n\nexport const setHeader = (res: Response, name: string, val: string) => {\n  res.headers.set(name, val);\n  return res;\n};\n\nexport const stringifyHeaders = (headers: { forEach: Headers['forEach'] }) => {\n  if (!headers) {\n    return JSON.stringify({});\n  }\n\n  const obj: Record<string, string> = {};\n  headers.forEach((value, name) => {\n    obj[name] = value;\n  });\n  return JSON.stringify(obj);\n};\n"],"names":[],"mappings":";;;;;;AAAA,SAAS,oBAAoB;AAE7B,SAAS,aAAa,qBAAqB;;;AAOpC,MAAM,iBAAiB,CAAA,GAAI,cAAqE;IACrG,MAAM,sBAAsB,UAAU,MAAA,CAAO,OAAO,EAAE,GAAA,CAAI,CAAA,QAAO;QAE/D,IAAI,6QAAe,eAAA,EAAc;YAC/B,OAAO;QACT;QAEA,OAAO,kQAAI,eAAA,CAAa,IAAK,IAAA,EAAM,GAAI;IACzC,CAAC;IAED,IAAI,oBAAoB,MAAA,KAAW,GAAG;QACpC;IACF;IAEA,MAAM,eAAe,mBAAA,CAAoB,oBAAoB,MAAA,GAAS,CAAC,CAAA;IACvE,MAAM,gBAAgB,kQAAI,eAAA,CAAa,aAAa,IAAA,EAAM,YAAY;IAEtE,KAAA,MAAW,YAAY,oBAAqB;QAC1C,SAAS,OAAA,CAAQ,OAAA,CAAQ,CAAC,OAAe,SAAiB;YACxD,cAAc,OAAA,CAAQ,GAAA,CAAI,MAAM,KAAK;QACvC,CAAC;QAED,SAAS,OAAA,CAAQ,MAAA,CAAO,EAAE,OAAA,CAAQ,CAAA,WAAU;YAC1C,MAAM,EAAE,IAAA,EAAM,KAAA,EAAO,GAAG,QAAQ,CAAA,GAAI;YAEpC,cAAc,OAAA,CAAQ,GAAA,CAAI,MAAM,OAAO,OAAO;QAChD,CAAC;IACH;IAEA,OAAO;AACT;AAEO,MAAM,aAAa,CAAC,QAAkB;IAC3C,OAAO,IAAI,OAAA,CAAQ,GAAA,yQAAI,YAAA,CAAc,OAAA,CAAQ,YAAY;AAC3D;AAEO,MAAM,YAAY,CAAC,KAAe,MAAc,QAAgB;IACrE,IAAI,OAAA,CAAQ,GAAA,CAAI,MAAM,GAAG;IACzB,OAAO;AACT;AAEO,MAAM,mBAAmB,CAAC,YAA6C;IAC5E,IAAI,CAAC,SAAS;QACZ,OAAO,KAAK,SAAA,CAAU,CAAC,CAAC;IAC1B;IAEA,MAAM,MAA8B,CAAC;IACrC,QAAQ,OAAA,CAAQ,CAAC,OAAO,SAAS;QAC/B,GAAA,CAAI,IAAI,CAAA,GAAI;IACd,CAAC;IACD,OAAO,KAAK,SAAA,CAAU,GAAG;AAC3B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 986, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/utils/pathMatchers.ts"],"sourcesContent":["import { pathToRegexp } from 'path-to-regexp';\n\nexport const paths = {\n  toRegexp: (path: string) => {\n    try {\n      return pathToRegexp(path);\n    } catch (e: any) {\n      throw new Error(\n        `Invalid path: ${path}.\\nConsult the documentation of path-to-regexp here: https://github.com/pillarjs/path-to-regexp\\n${e.message}`,\n      );\n    }\n  },\n};\n"],"names":[],"mappings":";;;AAAA,SAAS,oBAAoB;;AAEtB,MAAM,QAAQ;IACnB,UAAU,CAAC,SAAiB;QAC1B,IAAI;YACF,4OAAO,eAAA,EAAa,IAAI;QAC1B,EAAA,OAAS,GAAQ;YACf,MAAM,IAAI,MACR,CAAA,cAAA,EAAiB,IAAI,CAAA;;AAAA,EAAoG,EAAE,OAAO,EAAA;QAEtI;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1010, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/server/withClerkMiddleware.ts"],"sourcesContent":["import type { RequestState } from '@clerk/backend';\nimport { constants, debugRequestState } from '@clerk/backend';\nimport { deprecated } from '@clerk/shared/deprecated';\nimport type { NextFetchEvent, NextMiddleware, NextRequest } from 'next/server';\nimport { NextResponse } from 'next/server';\n\nimport {\n  API_KEY,\n  API_URL,\n  CLERK_JS_URL,\n  CLERK_JS_VERSION,\n  clerkClient,\n  FRONTEND_API,\n  PUBLISHABLE_KEY,\n  SECRET_KEY,\n} from './clerkClient';\nimport type { WithAuthOptions } from './types';\nimport { decorateRequest, handleMultiDomainAndProxy, setCustomAttributeOnRequest } from './utils';\n\nexport interface WithClerkMiddleware {\n  (handler: NextMiddleware, opts?: WithAuthOptions): NextMiddleware;\n\n  (): NextMiddleware;\n}\n\nexport const decorateResponseWithObservabilityHeaders = (res: NextResponse, requestState: RequestState) => {\n  requestState.message && res.headers.set(constants.Headers.AuthMessage, encodeURIComponent(requestState.message));\n  requestState.reason && res.headers.set(constants.Headers.AuthReason, encodeURIComponent(requestState.reason));\n  requestState.status && res.headers.set(constants.Headers.AuthStatus, encodeURIComponent(requestState.status));\n};\n\n/**\n * @deprecated withClerkMiddleware has been deprecated in favor of `authMiddleware`.\n * For more details, consult the middleware documentation: https://clerk.com/docs/nextjs/middleware\n */\nexport const withClerkMiddleware: WithClerkMiddleware = (...args: unknown[]) => {\n  const noop = () => undefined;\n  const [handler = noop, opts = {}] = args as [NextMiddleware, WithAuthOptions] | [];\n\n  deprecated(\n    'withClerkMiddleware',\n    'Use `authMiddleware` instead.\\nFor more details, consult the middleware documentation: https://clerk.com/docs/nextjs/middleware',\n  );\n\n  return async (req: NextRequest, event: NextFetchEvent) => {\n    const { isSatellite, domain, signInUrl, proxyUrl } = handleMultiDomainAndProxy(req, opts);\n\n    // get auth state, check if we need to return an interstitial\n    const requestState = await clerkClient.authenticateRequest({\n      ...opts,\n      apiKey: opts.apiKey || API_KEY,\n      secretKey: opts.secretKey || SECRET_KEY,\n      frontendApi: opts.frontendApi || FRONTEND_API,\n      publishableKey: opts.publishableKey || PUBLISHABLE_KEY,\n      isSatellite,\n      domain,\n      signInUrl,\n      proxyUrl,\n      request: req,\n    });\n\n    // Interstitial case\n    // Note: there is currently no way to rewrite to a protected endpoint\n    // Therefore we have to resort to a public interstitial endpoint\n    if (requestState.isUnknown) {\n      const response = new NextResponse(null, { status: 401, headers: { 'Content-Type': 'text/html' } });\n      decorateResponseWithObservabilityHeaders(response, requestState);\n      return response;\n    }\n    if (requestState.isInterstitial) {\n      const response = NextResponse.rewrite(\n        clerkClient.remotePublicInterstitialUrl({\n          apiUrl: API_URL,\n          frontendApi: opts.frontendApi || FRONTEND_API,\n          publishableKey: opts.publishableKey || PUBLISHABLE_KEY,\n          clerkJSUrl: CLERK_JS_URL,\n          clerkJSVersion: CLERK_JS_VERSION,\n          proxyUrl: requestState.proxyUrl as any,\n          isSatellite: requestState.isSatellite,\n          domain: requestState.domain as any,\n          debugData: debugRequestState(requestState),\n          signInUrl: requestState.signInUrl,\n        }),\n        { status: 401 },\n      );\n      decorateResponseWithObservabilityHeaders(response, requestState);\n      return response;\n    }\n\n    // Set auth result on request in a private property so that middleware can read it too\n    setCustomAttributeOnRequest(req, constants.Attributes.AuthStatus, requestState.status);\n    setCustomAttributeOnRequest(req, constants.Attributes.AuthToken, requestState.token || '');\n    setCustomAttributeOnRequest(req, constants.Attributes.AuthMessage, requestState.message || '');\n    setCustomAttributeOnRequest(req, constants.Attributes.AuthReason, requestState.reason || '');\n\n    // get result from provided handler\n    const res = await handler(req, event);\n    return decorateRequest(req, res, requestState);\n  };\n};\n"],"names":[],"mappings":";;;;AACA,SAAS,WAAW,yBAAyB;AAC7C,SAAS,kBAAkB;;AAE3B,SAAS,oBAAoB;;AAE7B;AAWA,SAAS,iBAAiB,2BAA2B,mCAAmC;;;;;;AAQjF,MAAM,2CAA2C,CAAC,KAAmB,iBAA+B;IACzG,aAAa,OAAA,IAAW,IAAI,OAAA,CAAQ,GAAA,kPAAI,YAAA,CAAU,OAAA,CAAQ,WAAA,EAAa,mBAAmB,aAAa,OAAO,CAAC;IAC/G,aAAa,MAAA,IAAU,IAAI,OAAA,CAAQ,GAAA,kPAAI,YAAA,CAAU,OAAA,CAAQ,UAAA,EAAY,mBAAmB,aAAa,MAAM,CAAC;IAC5G,aAAa,MAAA,IAAU,IAAI,OAAA,CAAQ,GAAA,CAAI,6PAAA,CAAU,OAAA,CAAQ,UAAA,EAAY,mBAAmB,aAAa,MAAM,CAAC;AAC9G;AAMO,MAAM,sBAA2C,CAAA,GAAI,SAAoB;IAC9E,MAAM,OAAO,IAAM,KAAA;IACnB,MAAM,CAAC,UAAU,IAAA,EAAM,OAAO,CAAC,CAAC,CAAA,GAAI;IAEpC,CAAA,GAAA,mPAAA,CAAA,aAAA,EACE,uBACA;IAGF,OAAO,OAAO,KAAkB,UAA0B;QACxD,MAAM,EAAE,WAAA,EAAa,MAAA,EAAQ,SAAA,EAAW,QAAA,CAAS,CAAA,IAAI,6SAAA,EAA0B,KAAK,IAAI;QAGxF,MAAM,eAAe,0SAAM,cAAA,CAAY,mBAAA,CAAoB;YACzD,GAAG,IAAA;YACH,QAAQ,KAAK,MAAA,sRAAU,UAAA;YACvB,WAAW,KAAK,SAAA,sRAAa,aAAA;YAC7B,aAAa,KAAK,WAAA,sRAAe,eAAA;YACjC,gBAAgB,KAAK,cAAA,sRAAkB,kBAAA;YACvC;YACA;YACA;YACA;YACA,SAAS;QACX,CAAC;QAKD,IAAI,aAAa,SAAA,EAAW;YAC1B,MAAM,WAAW,kQAAI,eAAA,CAAa,MAAM;gBAAE,QAAQ;gBAAK,SAAS;oBAAE,gBAAgB;gBAAY;YAAE,CAAC;YACjG,yCAAyC,UAAU,YAAY;YAC/D,OAAO;QACT;QACA,IAAI,aAAa,cAAA,EAAgB;YAC/B,MAAM,yQAAW,eAAA,CAAa,OAAA,oSAC5B,eAAA,CAAY,2BAAA,CAA4B;gBACtC,0RAAQ,UAAA;gBACR,aAAa,KAAK,WAAA,sRAAe,eAAA;gBACjC,gBAAgB,KAAK,cAAA,sRAAkB,kBAAA;gBACvC,YAAY,iSAAA;gBACZ,kSAAgB,mBAAA;gBAChB,UAAU,aAAa,QAAA;gBACvB,aAAa,aAAa,WAAA;gBAC1B,QAAQ,aAAa,MAAA;gBACrB,WAAW,yQAAA,EAAkB,YAAY;gBACzC,WAAW,aAAa,SAAA;YAC1B,CAAC,GACD;gBAAE,QAAQ;YAAI;YAEhB,yCAAyC,UAAU,YAAY;YAC/D,OAAO;QACT;QAGA,CAAA,GAAA,6QAAA,CAAA,8BAAA,EAA4B,sPAAK,YAAA,CAAU,UAAA,CAAW,UAAA,EAAY,aAAa,MAAM;QACrF,CAAA,GAAA,6QAAA,CAAA,8BAAA,EAA4B,sPAAK,YAAA,CAAU,UAAA,CAAW,SAAA,EAAW,aAAa,KAAA,IAAS,EAAE;QACzF,CAAA,GAAA,6QAAA,CAAA,8BAAA,EAA4B,sPAAK,YAAA,CAAU,UAAA,CAAW,WAAA,EAAa,aAAa,OAAA,IAAW,EAAE;QAC7F,CAAA,GAAA,6QAAA,CAAA,8BAAA,EAA4B,sPAAK,YAAA,CAAU,UAAA,CAAW,UAAA,EAAY,aAAa,MAAA,IAAU,EAAE;QAG3F,MAAM,MAAM,MAAM,QAAQ,KAAK,KAAK;QACpC,yRAAO,kBAAA,EAAgB,KAAK,KAAK,YAAY;IAC/C;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1093, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/server/authenticateRequest.ts"],"sourcesContent":["import type { NextRequest } from 'next/server';\nimport { NextResponse } from 'next/server';\n\nimport type { RequestState } from './clerkClient';\nimport {\n  API_KEY,\n  CLERK_JS_URL,\n  CLERK_JS_VERSION,\n  clerkClient,\n  debugRequestState,\n  FRONTEND_API,\n  PUBLISHABLE_KEY,\n  SECRET_KEY,\n} from './clerkClient';\nimport type { WithAuthOptions } from './types';\nimport { apiEndpointUnauthorizedNextResponse, handleMultiDomainAndProxy } from './utils';\nimport { decorateResponseWithObservabilityHeaders } from './withClerkMiddleware';\n\nexport const authenticateRequest = async (req: NextRequest, opts: WithAuthOptions) => {\n  const { isSatellite, domain, signInUrl, proxyUrl } = handleMultiDomainAndProxy(req, opts);\n  return await clerkClient.authenticateRequest({\n    ...opts,\n    apiKey: opts.apiKey || API_KEY,\n    secretKey: opts.secretKey || SECRET_KEY,\n    frontendApi: opts.frontendApi || FRONTEND_API,\n    publishableKey: opts.publishableKey || PUBLISHABLE_KEY,\n    isSatellite,\n    domain,\n    signInUrl,\n    proxyUrl,\n    request: req,\n  });\n};\n\nexport const handleUnknownState = (requestState: RequestState) => {\n  const response = apiEndpointUnauthorizedNextResponse();\n  decorateResponseWithObservabilityHeaders(response, requestState);\n  return response;\n};\n\nexport const handleInterstitialState = (requestState: RequestState, opts: WithAuthOptions) => {\n  const response = new NextResponse(\n    clerkClient.localInterstitial({\n      frontendApi: opts.frontendApi || FRONTEND_API,\n      publishableKey: opts.publishableKey || PUBLISHABLE_KEY,\n      clerkJSUrl: CLERK_JS_URL,\n      clerkJSVersion: CLERK_JS_VERSION,\n      proxyUrl: requestState.proxyUrl,\n      isSatellite: requestState.isSatellite,\n      domain: requestState.domain,\n      debugData: debugRequestState(requestState),\n      signInUrl: requestState.signInUrl,\n    }),\n    {\n      status: 401,\n      headers: {\n        'content-type': 'text/html',\n      },\n    },\n  );\n  decorateResponseWithObservabilityHeaders(response, requestState);\n  return response;\n};\n"],"names":[],"mappings":";;;;;AACA,SAAS,oBAAoB;AAG7B;;;AAWA,SAAS,qCAAqC,iCAAiC;AAC/E,SAAS,gDAAgD;;;;;AAElD,MAAM,sBAAsB,OAAO,KAAkB,SAA0B;IACpF,MAAM,EAAE,WAAA,EAAa,MAAA,EAAQ,SAAA,EAAW,QAAA,CAAS,CAAA,qRAAI,4BAAA,EAA0B,KAAK,IAAI;IACxF,OAAO,0SAAM,cAAA,CAAY,mBAAA,CAAoB;QAC3C,GAAG,IAAA;QACH,QAAQ,KAAK,MAAA,sRAAU,UAAA;QACvB,WAAW,KAAK,SAAA,sRAAa,aAAA;QAC7B,aAAa,KAAK,WAAA,IAAe,iSAAA;QACjC,gBAAgB,KAAK,cAAA,sRAAkB,kBAAA;QACvC;QACA;QACA;QACA;QACA,SAAS;IACX,CAAC;AACH;AAEO,MAAM,qBAAqB,CAAC,iBAA+B;IAChE,MAAM,6RAAW,sCAAA,CAAoC;IACrD,CAAA,GAAA,2RAAA,CAAA,2CAAA,EAAyC,UAAU,YAAY;IAC/D,OAAO;AACT;AAEO,MAAM,0BAA0B,CAAC,cAA4B,SAA0B;IAC5F,MAAM,WAAW,kQAAI,eAAA,qSACnB,cAAA,CAAY,iBAAA,CAAkB;QAC5B,aAAa,KAAK,WAAA,sRAAe,eAAA;QACjC,gBAAgB,KAAK,cAAA,IAAkB,oSAAA;QACvC,8RAAY,eAAA;QACZ,kSAAgB,mBAAA;QAChB,UAAU,aAAa,QAAA;QACvB,aAAa,aAAa,WAAA;QAC1B,QAAQ,aAAa,MAAA;QACrB,gQAAW,oBAAA,EAAkB,YAAY;QACzC,WAAW,aAAa,SAAA;IAC1B,CAAC,GACD;QACE,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;IACF;IAEF,CAAA,GAAA,2RAAA,CAAA,2CAAA,EAAyC,UAAU,YAAY;IAC/D,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1156, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/server/redirect.ts"],"sourcesContent":["import { constants, redirect } from '@clerk/backend';\nimport { NextResponse } from 'next/server';\n\nimport { setHeader } from '../utils';\nimport { FRONTEND_API, PUBLISHABLE_KEY, SIGN_IN_URL, SIGN_UP_URL } from './clerkClient';\n\nconst redirectAdapter = (url: string) => {\n  const res = NextResponse.redirect(url);\n  return setHeader(res, constants.Headers.ClerkRedirectTo, 'true');\n};\n\nexport const { redirectToSignIn, redirectToSignUp } = redirect({\n  redirectAdapter,\n  signInUrl: SIGN_IN_URL,\n  signUpUrl: SIGN_UP_URL,\n  publishableKey: PUBLISHABLE_KEY,\n  frontendApi: FRONTEND_API,\n});\n"],"names":[],"mappings":";;;;AAAA,SAAS,WAAW,gBAAgB;AACpC,SAAS,oBAAoB;AAE7B,SAAS,iBAAiB;AAC1B,SAAS,cAAc,iBAAiB,aAAa,mBAAmB;;;;;AAExE,MAAM,kBAAkB,CAAC,QAAgB;IACvC,MAAM,oQAAM,eAAA,CAAa,QAAA,CAAS,GAAG;IACrC,QAAO,+RAAA,EAAU,sPAAK,YAAA,CAAU,OAAA,CAAQ,eAAA,EAAiB,MAAM;AACjE;AAEO,MAAM,EAAE,gBAAA,EAAkB,gBAAA,CAAiB,CAAA,wPAAI,WAAA,EAAS;IAC7D;IACA,6RAAW,cAAA;IACX,6RAAW,cAAA;IACX,kSAAgB,kBAAA;IAChB,+RAAa,eAAA;AACf,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1187, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/server/authMiddleware.ts"],"sourcesContent":["/* eslint-disable turbo/no-undeclared-env-vars */\nimport type { AuthObject, RequestState } from '@clerk/backend';\nimport { buildRequestUrl, constants } from '@clerk/backend';\nimport { DEV_BROWSER_JWT_MARKER, setDevBrowserJWTInURL } from '@clerk/shared/devBrowser';\nimport type Link from 'next/link';\nimport type { NextFetchEvent, NextMiddleware, NextRequest } from 'next/server';\nimport { NextResponse } from 'next/server';\n\nimport { isRedirect, mergeResponses, paths, setHeader, stringifyHeaders } from '../utils';\nimport { withLogger } from '../utils/debugLogger';\nimport { authenticateRequest, handleInterstitialState, handleUnknownState } from './authenticateRequest';\nimport { SECRET_KEY } from './clerkClient';\nimport {\n  clockSkewDetected,\n  infiniteRedirectLoopDetected,\n  informAboutProtectedRouteInfo,\n  receivedRequestForIgnoredRoute,\n} from './errors';\nimport { redirectToSignIn } from './redirect';\nimport type { NextMiddlewareResult, WithAuthOptions } from './types';\nimport {\n  apiEndpointUnauthorizedNextResponse,\n  decorateRequest,\n  isCrossOrigin,\n  isDevelopmentFromApiKey,\n  setRequestHeadersOnNextResponse,\n} from './utils';\n\ntype WithPathPatternWildcard<T> = `${T & string}(.*)`;\ntype NextTypedRoute<T = Parameters<typeof Link>['0']['href']> = T extends string ? T : never;\n\n// For extra safety, we won't recommend using a `/(.*)` route matcher.\ntype ExcludeRootPath<T> = T extends '/' ? never : T;\n\n// We want to show suggestions but also allow for free-text input\n// the (string & {}) type prevents the TS compiler from merging the typed union with the string type\n// https://github.com/Microsoft/TypeScript/issues/29729#issuecomment-505826972\ntype RouteMatcherWithNextTypedRoutes =\n  | WithPathPatternWildcard<ExcludeRootPath<NextTypedRoute>>\n  | NextTypedRoute\n  // This is necessary to allow all string, using something other than `{}` here WILL break types!\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  | (string & {});\n\nconst INFINITE_REDIRECTION_LOOP_COOKIE = '__clerk_redirection_loop';\n\n/**\n * The default ideal matcher that excludes the _next directory (internals) and all static files,\n * but it will match the root route (/) and any routes that start with /api or /trpc.\n */\nexport const DEFAULT_CONFIG_MATCHER = ['/((?!.+\\\\.[\\\\w]+$|_next).*)', '/', '/(api|trpc)(.*)'];\n\n/**\n * Any routes matching this path will be ignored by the middleware.\n * This is the inverted version of DEFAULT_CONFIG_MATCHER.\n */\nexport const DEFAULT_IGNORED_ROUTES = [`/((?!api|trpc))(_next.*|.+\\\\.[\\\\w]+$)`];\n/**\n * Any routes matching this path will be treated as API endpoints by the middleware.\n */\nexport const DEFAULT_API_ROUTES = ['/api/(.*)', '/trpc/(.*)'];\n\ntype RouteMatcherParam =\n  | Array<RegExp | RouteMatcherWithNextTypedRoutes>\n  | RegExp\n  | RouteMatcherWithNextTypedRoutes\n  | ((req: NextRequest) => boolean);\n\ntype IgnoredRoutesParam = Array<RegExp | string> | RegExp | string | ((req: NextRequest) => boolean);\ntype ApiRoutesParam = IgnoredRoutesParam;\n\ntype WithClerkUrl<T> = T & {\n  /**\n   * When a NextJs app is hosted on a platform different from Vercel\n   * or inside a container (Netlify, Fly.io, AWS Amplify, docker etc),\n   * req.url is always set to `localhost:3000` instead of the actual host of the app.\n   *\n   * The `authMiddleware` uses the value of the available req.headers in order to construct\n   * and use the correct url internally. This url is then exposed as `experimental_clerkUrl`,\n   * intended to be used within `beforeAuth` and `afterAuth` if needed.\n   */\n  experimental_clerkUrl: NextRequest['nextUrl'];\n};\n\ntype BeforeAuthHandler = (\n  req: WithClerkUrl<NextRequest>,\n  evt: NextFetchEvent,\n) => NextMiddlewareResult | Promise<NextMiddlewareResult> | false | Promise<false>;\n\ntype AfterAuthHandler = (\n  auth: AuthObject & { isPublicRoute: boolean; isApiRoute: boolean },\n  req: WithClerkUrl<NextRequest>,\n  evt: NextFetchEvent,\n) => NextMiddlewareResult | Promise<NextMiddlewareResult>;\n\ntype AuthMiddlewareParams = WithAuthOptions & {\n  /**\n   * A function that is called before the authentication middleware is executed.\n   * If a redirect response is returned, the middleware will respect it and redirect the user.\n   * If false is returned, the auth middleware will not execute and the request will be handled as if the auth middleware was not present.\n   */\n  beforeAuth?: BeforeAuthHandler;\n  /**\n   * A function that is called after the authentication middleware is executed.\n   * This function has access to the auth object and can be used to execute logic based on the auth state.\n   */\n  afterAuth?: AfterAuthHandler;\n  /**\n   * A list of routes that should be accessible without authentication.\n   * You can use glob patterns to match multiple routes or a function to match against the request object.\n   * Path patterns and regular expressions are supported, for example: `['/foo', '/bar(.*)'] or `[/^\\/foo\\/.*$/]`\n   * The sign in and sign up URLs are included by default, unless a function is provided.\n   * For more information, see: https://clerk.com/docs\n   */\n  publicRoutes?: RouteMatcherParam;\n  /**\n   * A list of routes that should be ignored by the middleware.\n   * This list typically includes routes for static files or Next.js internals.\n   * For improved performance, these routes should be skipped using the default config.matcher instead.\n   */\n  ignoredRoutes?: IgnoredRoutesParam;\n  /**\n   * A list of routes that should be treated as API endpoints.\n   * When user is signed out, the middleware will return a 401 response for these routes, instead of redirecting the user.\n   *\n   * If omitted, the following heuristics will be used to determine an API endpoint:\n   * - The route path is ['/api/(.*)', '/trpc/(.*)'],\n   * - or the request has `Content-Type` set to `application/json`,\n   * - or the request method is not one of: `GET`, `OPTIONS` ,` HEAD`\n   *\n   * @default undefined\n   */\n  apiRoutes?: ApiRoutesParam;\n  /**\n   * Enables extra debug logging.\n   */\n  debug?: boolean;\n};\n\nexport interface AuthMiddleware {\n  (params?: AuthMiddlewareParams): NextMiddleware;\n}\n\nconst authMiddleware: AuthMiddleware = (...args: unknown[]) => {\n  const [params = {}] = args as [AuthMiddlewareParams?];\n  const { beforeAuth, afterAuth, publicRoutes, ignoredRoutes, apiRoutes, ...options } = params;\n\n  const isIgnoredRoute = createRouteMatcher(ignoredRoutes || DEFAULT_IGNORED_ROUTES);\n  const isPublicRoute = createRouteMatcher(withDefaultPublicRoutes(publicRoutes));\n  const isApiRoute = createApiRoutes(apiRoutes);\n  const defaultAfterAuth = createDefaultAfterAuth(isPublicRoute, isApiRoute, params);\n\n  return withLogger('authMiddleware', logger => async (_req: NextRequest, evt: NextFetchEvent) => {\n    if (options.debug) {\n      logger.enable();\n    }\n    const req = withNormalizedClerkUrl(_req);\n\n    logger.debug('URL debug', {\n      url: req.nextUrl.href,\n      method: req.method,\n      headers: stringifyHeaders(req.headers),\n      nextUrl: req.nextUrl.href,\n      clerkUrl: req.experimental_clerkUrl.href,\n    });\n    logger.debug('Options debug', { ...options, beforeAuth: !!beforeAuth, afterAuth: !!afterAuth });\n\n    if (isIgnoredRoute(req)) {\n      logger.debug({ isIgnoredRoute: true });\n      if (isDevelopmentFromApiKey(options.secretKey || SECRET_KEY) && !params.ignoredRoutes) {\n        console.warn(\n          receivedRequestForIgnoredRoute(req.experimental_clerkUrl.href, JSON.stringify(DEFAULT_CONFIG_MATCHER)),\n        );\n      }\n      return setHeader(NextResponse.next(), constants.Headers.AuthReason, 'ignored-route');\n    }\n\n    const beforeAuthRes = await (beforeAuth && beforeAuth(req, evt));\n\n    if (beforeAuthRes === false) {\n      logger.debug('Before auth returned false, skipping');\n      return setHeader(NextResponse.next(), constants.Headers.AuthReason, 'skip');\n    } else if (beforeAuthRes && isRedirect(beforeAuthRes)) {\n      logger.debug('Before auth returned redirect, following redirect');\n      return setHeader(beforeAuthRes, constants.Headers.AuthReason, 'redirect');\n    }\n\n    const requestState = await authenticateRequest(req, options);\n    if (requestState.isUnknown) {\n      logger.debug('authenticateRequest state is unknown', requestState);\n      return handleUnknownState(requestState);\n    } else if (requestState.isInterstitial && isApiRoute(req)) {\n      logger.debug('authenticateRequest state is interstitial in an API route', requestState);\n      return handleUnknownState(requestState);\n    } else if (requestState.isInterstitial) {\n      logger.debug('authenticateRequest state is interstitial', requestState);\n\n      assertClockSkew(requestState, options);\n\n      const res = handleInterstitialState(requestState, options);\n      return assertInfiniteRedirectionLoop(req, res, options, requestState);\n    }\n\n    const auth = Object.assign(requestState.toAuth(), {\n      isPublicRoute: isPublicRoute(req),\n      isApiRoute: isApiRoute(req),\n    });\n    logger.debug(() => ({ auth: JSON.stringify(auth), debug: auth.debug() }));\n    const afterAuthRes = await (afterAuth || defaultAfterAuth)(auth, req, evt);\n    const finalRes = mergeResponses(beforeAuthRes, afterAuthRes) || NextResponse.next();\n    logger.debug(() => ({ mergedHeaders: stringifyHeaders(finalRes.headers) }));\n\n    if (isRedirect(finalRes)) {\n      logger.debug('Final response is redirect, following redirect');\n      const res = setHeader(finalRes, constants.Headers.AuthReason, 'redirect');\n      return appendDevBrowserOnCrossOrigin(req, res, options);\n    }\n\n    if (options.debug) {\n      setRequestHeadersOnNextResponse(finalRes, req, { [constants.Headers.EnableDebug]: 'true' });\n      logger.debug(`Added ${constants.Headers.EnableDebug} on request`);\n    }\n\n    return decorateRequest(req, finalRes, requestState);\n  });\n};\n\nexport { authMiddleware };\n\n/**\n * Create a function that matches a request against the specified routes.\n * Precomputes the glob matchers for the public routes, so we don't have to\n * recompile the regular expressions on every request.\n */\nexport const createRouteMatcher = (routes: RouteMatcherParam) => {\n  if (typeof routes === 'function') {\n    return (req: NextRequest) => routes(req);\n  }\n\n  const routePatterns = [routes || ''].flat().filter(Boolean);\n  const matchers = precomputePathRegex(routePatterns);\n  return (req: NextRequest) => matchers.some(matcher => matcher.test(req.nextUrl.pathname));\n};\n\nconst createDefaultAfterAuth = (\n  isPublicRoute: ReturnType<typeof createRouteMatcher>,\n  isApiRoute: ReturnType<typeof createApiRoutes>,\n  params: AuthMiddlewareParams,\n) => {\n  return (auth: AuthObject, req: WithClerkUrl<NextRequest>) => {\n    if (!auth.userId && !isPublicRoute(req)) {\n      if (isApiRoute(req)) {\n        informAboutProtectedRoute(req.experimental_clerkUrl.pathname, params, true);\n        return apiEndpointUnauthorizedNextResponse();\n      } else {\n        informAboutProtectedRoute(req.experimental_clerkUrl.pathname, params, false);\n      }\n      return redirectToSignIn({ returnBackUrl: req.experimental_clerkUrl.href });\n    }\n    return NextResponse.next();\n  };\n};\n\nconst precomputePathRegex = (patterns: Array<string | RegExp>) => {\n  return patterns.map(pattern => (pattern instanceof RegExp ? pattern : paths.toRegexp(pattern)));\n};\n\nconst matchRoutesStartingWith = (path: string) => {\n  path = path.replace(/\\/$/, '');\n  return new RegExp(`^${path}(/.*)?$`);\n};\n\nconst withDefaultPublicRoutes = (publicRoutes: RouteMatcherParam | undefined) => {\n  if (typeof publicRoutes === 'function') {\n    return publicRoutes;\n  }\n\n  const routes = [publicRoutes || ''].flat().filter(Boolean);\n  // TODO: refactor it to use common config file eg SIGN_IN_URL from ./clerkClient\n  // we use process.env for now to support testing\n  const signInUrl = process.env.NEXT_PUBLIC_CLERK_SIGN_IN_URL || '';\n  if (signInUrl) {\n    routes.push(matchRoutesStartingWith(signInUrl));\n  }\n  // TODO: refactor it to use common config file eg SIGN_UP_URL from ./clerkClient\n  // we use process.env for now to support testing\n  const signUpUrl = process.env.NEXT_PUBLIC_CLERK_SIGN_UP_URL || '';\n  if (signUpUrl) {\n    routes.push(matchRoutesStartingWith(signUpUrl));\n  }\n  return routes;\n};\n\n// Grabs the dev browser JWT from cookies and appends it to the redirect URL when redirecting to cross-origin.\n// Middleware runs on the server side, before clerk-js is loaded, that's why we need Cookies.\nconst appendDevBrowserOnCrossOrigin = (req: WithClerkUrl<NextRequest>, res: Response, opts: AuthMiddlewareParams) => {\n  const location = res.headers.get('location');\n\n  const shouldAppendDevBrowser = res.headers.get(constants.Headers.ClerkRedirectTo) === 'true';\n\n  if (\n    shouldAppendDevBrowser &&\n    !!location &&\n    isDevelopmentFromApiKey(opts.secretKey || SECRET_KEY) &&\n    isCrossOrigin(req.experimental_clerkUrl, location)\n  ) {\n    const dbJwt = req.cookies.get(DEV_BROWSER_JWT_MARKER)?.value || '';\n\n    // Next.js 12.1+ allows redirects only to absolute URLs\n    const url = new URL(location);\n    const urlWithDevBrowser = setDevBrowserJWTInURL(url, dbJwt, { hash: false });\n\n    return NextResponse.redirect(urlWithDevBrowser.href, res);\n  }\n  return res;\n};\n\n// - Default behavior:\n//    If the route path is `['/api/(.*)*', '*/trpc/(.*)']`\n//    or Request has `Content-Type: application/json`\n//    or Request method is not-GET,OPTIONS,HEAD,\n//    then this is considered an API route.\n//\n// - If the user has provided a specific `apiRoutes` prop in `authMiddleware` then all the above are discarded,\n//   and only routes that match the user’s provided paths are considered API routes.\nconst createApiRoutes = (apiRoutes: RouteMatcherParam | undefined): ((req: WithClerkUrl<NextRequest>) => boolean) => {\n  if (apiRoutes) {\n    return createRouteMatcher(apiRoutes);\n  }\n  const isDefaultApiRoute = createRouteMatcher(DEFAULT_API_ROUTES);\n  return (req: WithClerkUrl<NextRequest>) =>\n    isDefaultApiRoute(req) || isRequestMethodIndicatingApiRoute(req) || isRequestContentTypeJson(req);\n};\n\nconst isRequestContentTypeJson = (req: NextRequest): boolean => {\n  const requestContentType = req.headers.get(constants.Headers.ContentType);\n  return requestContentType === constants.ContentTypes.Json;\n};\n\nconst isRequestMethodIndicatingApiRoute = (req: NextRequest): boolean => {\n  const requestMethod = req.method.toLowerCase();\n  return !['get', 'head', 'options'].includes(requestMethod);\n};\n\n/**\n * In development, attempt to detect clock skew based on the requestState. This check should run when requestState.isInterstitial is true. If detected, we throw an error.\n */\nconst assertClockSkew = (requestState: RequestState, opts: AuthMiddlewareParams): void => {\n  if (!isDevelopmentFromApiKey(opts.secretKey || SECRET_KEY)) {\n    return;\n  }\n\n  if (requestState.reason === 'token-not-active-yet') {\n    throw new Error(clockSkewDetected(requestState.message));\n  }\n};\n\n// When in development, we want to prevent infinite interstitial redirection loops.\n// We incrementally set a `__clerk_redirection_loop` cookie, and when it loops 6 times, we throw an error.\n// We also utilize the `referer` header to skip the prefetch requests.\nconst assertInfiniteRedirectionLoop = (\n  req: NextRequest,\n  res: NextResponse,\n  opts: AuthMiddlewareParams,\n  requestState: RequestState,\n): NextResponse => {\n  if (!isDevelopmentFromApiKey(opts.secretKey || SECRET_KEY)) {\n    return res;\n  }\n\n  const infiniteRedirectsCounter = Number(req.cookies.get(INFINITE_REDIRECTION_LOOP_COOKIE)?.value) || 0;\n  if (infiniteRedirectsCounter === 6) {\n    // Infinite redirect detected, is it clock skew?\n    // We check for token-expired here because it can be a valid, recoverable scenario, but in a redirect loop a token-expired error likely indicates clock skew.\n    if (requestState.reason === 'token-expired') {\n      throw new Error(clockSkewDetected(requestState.message));\n    }\n\n    // Not clock skew, return general error\n    throw new Error(infiniteRedirectLoopDetected());\n  }\n\n  // Skip the prefetch requests (when hovering a Next Link element)\n  if (req.headers.get('referer') === req.url) {\n    res.cookies.set({\n      name: INFINITE_REDIRECTION_LOOP_COOKIE,\n      value: `${infiniteRedirectsCounter + 1}`,\n      maxAge: 3,\n    });\n  }\n  return res;\n};\n\nconst withNormalizedClerkUrl = (req: NextRequest): WithClerkUrl<NextRequest> => {\n  const clerkUrl = req.nextUrl.clone();\n\n  const originUrl = buildRequestUrl(req);\n\n  clerkUrl.port = originUrl.port;\n  clerkUrl.protocol = originUrl.protocol;\n  clerkUrl.host = originUrl.host;\n\n  return Object.assign(req, { experimental_clerkUrl: clerkUrl });\n};\n\nconst informAboutProtectedRoute = (path: string, params: AuthMiddlewareParams, isApiRoute: boolean) => {\n  if (params.debug || isDevelopmentFromApiKey(params.secretKey || SECRET_KEY)) {\n    console.warn(\n      informAboutProtectedRouteInfo(\n        path,\n        !!params.publicRoutes,\n        !!params.ignoredRoutes,\n        isApiRoute,\n        DEFAULT_IGNORED_ROUTES,\n      ),\n    );\n  }\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1445, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/%40clerk%2Bnextjs%404.30.0_next%401_7aaa14a908b8d3e821791800a016e828/node_modules/%40clerk/nextjs/src/index.ts"],"sourcesContent":["/**\n * These need to be explicitly listed. Do not use an * here.\n * If you do, app router will break.\n */\nexport {\n  RedirectToUserProfile,\n  RedirectToSignUp,\n  RedirectToSignIn,\n  RedirectToOrganizationProfile,\n  RedirectToCreateOrganization,\n  MultisessionAppSupport,\n  ClerkLoading,\n  ClerkLoaded,\n  AuthenticateWithRedirectCallback,\n} from './client-boundary/controlComponents';\n\n/**\n * These need to be explicitly listed. Do not use an * here.\n * If you do, app router will break.\n */\nexport {\n  UserButton,\n  UserProfile,\n  SignUpButton,\n  SignIn,\n  SignUp,\n  OrganizationSwitcher,\n  OrganizationProfile,\n  CreateOrganization,\n  SignInButton,\n  SignOutButton,\n  SignInWithMetamaskButton,\n  OrganizationList,\n  __experimental_GoogleOneTap,\n} from './client-boundary/uiComponents';\n\n/**\n * These need to be explicitly listed. Do not use an * here.\n * If you do, app router will break.\n */\nexport {\n  useUser,\n  useAuth,\n  useSession,\n  useClerk,\n  useSignIn,\n  useSignUp,\n  useSessionList,\n  useOrganization,\n  useOrganizationList,\n  useOrganizations,\n  useEmailLink,\n  useMagicLink,\n  EmailLinkErrorCode,\n  MagicLinkErrorCode,\n  isEmailLinkError,\n  isMagicLinkError,\n  isClerkAPIResponseError,\n  isMetamaskError,\n  isKnownError,\n  withUser,\n  withSession,\n  withClerk,\n  WithUser,\n  WithSession,\n  WithClerk,\n} from './client-boundary/hooks';\n\nexport type { WithUserProp, WithSessionProp, WithClerkProp } from './client-boundary/hooks';\n\n/**\n * Conditionally export components that exhibit different behavior\n * when used in /app vs /pages.\n * We defined the runtime and the type values explicitly,\n * because TS will not recognize the subpath import unless the HOST\n * application sets moduleResolution to 'NodeNext'.\n */\n// @ts-ignore\nimport * as ComponentsModule from '#components';\n/**\n * Conditionally export server-side helpers.\n * This allows to import server-side helpers from the top-level path.\n * We defined the runtime and the type values explicitly,\n * because TS will not recognize the subpath import unless the HOST\n * application sets moduleResolution to 'NodeNext'.\n */\n// @ts-ignore\nimport * as ServerHelperModule from '#server';\n\nimport type { ServerComponentsServerModuleTypes } from './components.server';\nimport type { ServerHelpersServerModuleTypes } from './server-helpers.server';\n\nexport const ClerkProvider = ComponentsModule.ClerkProvider as ServerComponentsServerModuleTypes['ClerkProvider'];\nexport const SignedIn = ComponentsModule.SignedIn as ServerComponentsServerModuleTypes['SignedIn'];\nexport const SignedOut = ComponentsModule.SignedOut as ServerComponentsServerModuleTypes['SignedOut'];\n\nexport const Protect = ComponentsModule.Protect as ServerComponentsServerModuleTypes['Protect'];\n\nexport const auth = ServerHelperModule.auth as ServerHelpersServerModuleTypes['auth'];\nexport const currentUser = ServerHelperModule.currentUser as ServerHelpersServerModuleTypes['currentUser'];\n// export const getAuth = ServerHelperModule.getAuth as ServerHelpersServerModuleTypes['getAuth'];\nexport const clerkClient = ServerHelperModule.clerkClient as ServerHelpersServerModuleTypes['clerkClient'];\nexport const authMiddleware = ServerHelperModule.authMiddleware as ServerHelpersServerModuleTypes['authMiddleware'];\nexport const redirectToSignIn =\n  ServerHelperModule.redirectToSignIn as ServerHelpersServerModuleTypes['redirectToSignIn'];\nexport const redirectToSignUp =\n  ServerHelperModule.redirectToSignUp as ServerHelpersServerModuleTypes['redirectToSignUp'];\nexport const withClerkMiddleware =\n  ServerHelperModule.withClerkMiddleware as ServerHelpersServerModuleTypes['withClerkMiddleware'];\n"],"names":[],"mappings":";;;;;;;;;;;;;;AA8EA,YAAY,sBAAsB;;;;;;AASlC,YAAY,wBAAwB;;;;;;AAK7B,MAAM,uTAAgB,gBAAiB,CAAA;AACvC,MAAM,sTAAW,WAAiB,MAAA;AAClC,MAAM,uTAAY,YAAiB,KAAA;AAEnC,MAAM,qTAAU,UAAiB,OAAA;AAEjC,MAAM,qSAAO,OAAmB,YAAA;AAChC,MAAM,mTAAc,cAAmB,KAAA;AAEvC,MAAM,kTAAc,cAAmB,KAAA;AACvC,MAAM,wSAAiB,iBAAmB,EAAA;AAC1C,MAAM,oSACX,mBAAmB;AACd,MAAM,oSACX,mBAAmB;AACd,MAAM,kTACX,mBAAmB,GAAA","ignoreList":[0],"debugId":null}}]
}