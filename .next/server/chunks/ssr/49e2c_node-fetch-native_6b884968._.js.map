{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/node-fetch-native%401.0.1/node_modules/node-fetch-native/dist/shared/node-fetch-native.8afd3fea.cjs"],"sourcesContent":["'use strict';\n\nconst http = require('node:http');\nconst https = require('node:https');\nconst zlib = require('node:zlib');\nconst Stream = require('node:stream');\nconst node_buffer = require('node:buffer');\nconst node_util = require('node:util');\nconst node_url = require('node:url');\nconst node_net = require('node:net');\nrequire('node:fs');\nrequire('node:path');\n\n/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @returns {Buffer} Buffer instance from Data URI\n * @api public\n */\nfunction dataUriToBuffer(uri) {\n    if (!/^data:/i.test(uri)) {\n        throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n    }\n    // strip newlines\n    uri = uri.replace(/\\r?\\n/g, '');\n    // split the URI up into the \"metadata\" and the \"data\" portions\n    const firstComma = uri.indexOf(',');\n    if (firstComma === -1 || firstComma <= 4) {\n        throw new TypeError('malformed data: URI');\n    }\n    // remove the \"data:\" scheme and parse the metadata\n    const meta = uri.substring(5, firstComma).split(';');\n    let charset = '';\n    let base64 = false;\n    const type = meta[0] || 'text/plain';\n    let typeFull = type;\n    for (let i = 1; i < meta.length; i++) {\n        if (meta[i] === 'base64') {\n            base64 = true;\n        }\n        else {\n            typeFull += `;${meta[i]}`;\n            if (meta[i].indexOf('charset=') === 0) {\n                charset = meta[i].substring(8);\n            }\n        }\n    }\n    // defaults to US-ASCII only if type is not provided\n    if (!meta[0] && !charset.length) {\n        typeFull += ';charset=US-ASCII';\n        charset = 'US-ASCII';\n    }\n    // get the encoded data portion and decode URI-encoded chars\n    const encoding = base64 ? 'base64' : 'ascii';\n    const data = unescape(uri.substring(firstComma + 1));\n    const buffer = Buffer.from(data, encoding);\n    // set `.type` and `.typeFull` properties to MIME type\n    buffer.type = type;\n    buffer.typeFull = typeFull;\n    // set the `.charset` property\n    buffer.charset = charset;\n    return buffer;\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nvar ponyfill_es2018 = {exports: {}};\n\n/**\n * web-streams-polyfill v3.2.1\n */\n\nvar hasRequiredPonyfill_es2018;\n\nfunction requirePonyfill_es2018 () {\n\tif (hasRequiredPonyfill_es2018) return ponyfill_es2018.exports;\n\thasRequiredPonyfill_es2018 = 1;\n\t(function (module, exports) {\n\t\t(function (global, factory) {\n\t\t    factory(exports) ;\n\t\t}(commonjsGlobal, (function (exports) {\n\t\t    /// <reference lib=\"es2015.symbol\" />\n\t\t    const SymbolPolyfill = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n\t\t        Symbol :\n\t\t        description => `Symbol(${description})`;\n\n\t\t    /// <reference lib=\"dom\" />\n\t\t    function noop() {\n\t\t        return undefined;\n\t\t    }\n\t\t    function getGlobals() {\n\t\t        if (typeof self !== 'undefined') {\n\t\t            return self;\n\t\t        }\n\t\t        else if (typeof window !== 'undefined') {\n\t\t            return window;\n\t\t        }\n\t\t        else if (typeof commonjsGlobal !== 'undefined') {\n\t\t            return commonjsGlobal;\n\t\t        }\n\t\t        return undefined;\n\t\t    }\n\t\t    const globals = getGlobals();\n\n\t\t    function typeIsObject(x) {\n\t\t        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n\t\t    }\n\t\t    const rethrowAssertionErrorRejection = noop;\n\n\t\t    const originalPromise = Promise;\n\t\t    const originalPromiseThen = Promise.prototype.then;\n\t\t    const originalPromiseResolve = Promise.resolve.bind(originalPromise);\n\t\t    const originalPromiseReject = Promise.reject.bind(originalPromise);\n\t\t    function newPromise(executor) {\n\t\t        return new originalPromise(executor);\n\t\t    }\n\t\t    function promiseResolvedWith(value) {\n\t\t        return originalPromiseResolve(value);\n\t\t    }\n\t\t    function promiseRejectedWith(reason) {\n\t\t        return originalPromiseReject(reason);\n\t\t    }\n\t\t    function PerformPromiseThen(promise, onFulfilled, onRejected) {\n\t\t        // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n\t\t        // approximation.\n\t\t        return originalPromiseThen.call(promise, onFulfilled, onRejected);\n\t\t    }\n\t\t    function uponPromise(promise, onFulfilled, onRejected) {\n\t\t        PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), undefined, rethrowAssertionErrorRejection);\n\t\t    }\n\t\t    function uponFulfillment(promise, onFulfilled) {\n\t\t        uponPromise(promise, onFulfilled);\n\t\t    }\n\t\t    function uponRejection(promise, onRejected) {\n\t\t        uponPromise(promise, undefined, onRejected);\n\t\t    }\n\t\t    function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {\n\t\t        return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n\t\t    }\n\t\t    function setPromiseIsHandledToTrue(promise) {\n\t\t        PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n\t\t    }\n\t\t    const queueMicrotask = (() => {\n\t\t        const globalQueueMicrotask = globals && globals.queueMicrotask;\n\t\t        if (typeof globalQueueMicrotask === 'function') {\n\t\t            return globalQueueMicrotask;\n\t\t        }\n\t\t        const resolvedPromise = promiseResolvedWith(undefined);\n\t\t        return (fn) => PerformPromiseThen(resolvedPromise, fn);\n\t\t    })();\n\t\t    function reflectCall(F, V, args) {\n\t\t        if (typeof F !== 'function') {\n\t\t            throw new TypeError('Argument is not a function');\n\t\t        }\n\t\t        return Function.prototype.apply.call(F, V, args);\n\t\t    }\n\t\t    function promiseCall(F, V, args) {\n\t\t        try {\n\t\t            return promiseResolvedWith(reflectCall(F, V, args));\n\t\t        }\n\t\t        catch (value) {\n\t\t            return promiseRejectedWith(value);\n\t\t        }\n\t\t    }\n\n\t\t    // Original from Chromium\n\t\t    // https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\n\t\t    const QUEUE_MAX_ARRAY_SIZE = 16384;\n\t\t    /**\n\t\t     * Simple queue structure.\n\t\t     *\n\t\t     * Avoids scalability issues with using a packed array directly by using\n\t\t     * multiple arrays in a linked list and keeping the array size bounded.\n\t\t     */\n\t\t    class SimpleQueue {\n\t\t        constructor() {\n\t\t            this._cursor = 0;\n\t\t            this._size = 0;\n\t\t            // _front and _back are always defined.\n\t\t            this._front = {\n\t\t                _elements: [],\n\t\t                _next: undefined\n\t\t            };\n\t\t            this._back = this._front;\n\t\t            // The cursor is used to avoid calling Array.shift().\n\t\t            // It contains the index of the front element of the array inside the\n\t\t            // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n\t\t            this._cursor = 0;\n\t\t            // When there is only one node, size === elements.length - cursor.\n\t\t            this._size = 0;\n\t\t        }\n\t\t        get length() {\n\t\t            return this._size;\n\t\t        }\n\t\t        // For exception safety, this method is structured in order:\n\t\t        // 1. Read state\n\t\t        // 2. Calculate required state mutations\n\t\t        // 3. Perform state mutations\n\t\t        push(element) {\n\t\t            const oldBack = this._back;\n\t\t            let newBack = oldBack;\n\t\t            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n\t\t                newBack = {\n\t\t                    _elements: [],\n\t\t                    _next: undefined\n\t\t                };\n\t\t            }\n\t\t            // push() is the mutation most likely to throw an exception, so it\n\t\t            // goes first.\n\t\t            oldBack._elements.push(element);\n\t\t            if (newBack !== oldBack) {\n\t\t                this._back = newBack;\n\t\t                oldBack._next = newBack;\n\t\t            }\n\t\t            ++this._size;\n\t\t        }\n\t\t        // Like push(), shift() follows the read -> calculate -> mutate pattern for\n\t\t        // exception safety.\n\t\t        shift() { // must not be called on an empty queue\n\t\t            const oldFront = this._front;\n\t\t            let newFront = oldFront;\n\t\t            const oldCursor = this._cursor;\n\t\t            let newCursor = oldCursor + 1;\n\t\t            const elements = oldFront._elements;\n\t\t            const element = elements[oldCursor];\n\t\t            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n\t\t                newFront = oldFront._next;\n\t\t                newCursor = 0;\n\t\t            }\n\t\t            // No mutations before this point.\n\t\t            --this._size;\n\t\t            this._cursor = newCursor;\n\t\t            if (oldFront !== newFront) {\n\t\t                this._front = newFront;\n\t\t            }\n\t\t            // Permit shifted element to be garbage collected.\n\t\t            elements[oldCursor] = undefined;\n\t\t            return element;\n\t\t        }\n\t\t        // The tricky thing about forEach() is that it can be called\n\t\t        // re-entrantly. The queue may be mutated inside the callback. It is easy to\n\t\t        // see that push() within the callback has no negative effects since the end\n\t\t        // of the queue is checked for on every iteration. If shift() is called\n\t\t        // repeatedly within the callback then the next iteration may return an\n\t\t        // element that has been removed. In this case the callback will be called\n\t\t        // with undefined values until we either \"catch up\" with elements that still\n\t\t        // exist or reach the back of the queue.\n\t\t        forEach(callback) {\n\t\t            let i = this._cursor;\n\t\t            let node = this._front;\n\t\t            let elements = node._elements;\n\t\t            while (i !== elements.length || node._next !== undefined) {\n\t\t                if (i === elements.length) {\n\t\t                    node = node._next;\n\t\t                    elements = node._elements;\n\t\t                    i = 0;\n\t\t                    if (elements.length === 0) {\n\t\t                        break;\n\t\t                    }\n\t\t                }\n\t\t                callback(elements[i]);\n\t\t                ++i;\n\t\t            }\n\t\t        }\n\t\t        // Return the element that would be returned if shift() was called now,\n\t\t        // without modifying the queue.\n\t\t        peek() { // must not be called on an empty queue\n\t\t            const front = this._front;\n\t\t            const cursor = this._cursor;\n\t\t            return front._elements[cursor];\n\t\t        }\n\t\t    }\n\n\t\t    function ReadableStreamReaderGenericInitialize(reader, stream) {\n\t\t        reader._ownerReadableStream = stream;\n\t\t        stream._reader = reader;\n\t\t        if (stream._state === 'readable') {\n\t\t            defaultReaderClosedPromiseInitialize(reader);\n\t\t        }\n\t\t        else if (stream._state === 'closed') {\n\t\t            defaultReaderClosedPromiseInitializeAsResolved(reader);\n\t\t        }\n\t\t        else {\n\t\t            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n\t\t        }\n\t\t    }\n\t\t    // A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n\t\t    // check.\n\t\t    function ReadableStreamReaderGenericCancel(reader, reason) {\n\t\t        const stream = reader._ownerReadableStream;\n\t\t        return ReadableStreamCancel(stream, reason);\n\t\t    }\n\t\t    function ReadableStreamReaderGenericRelease(reader) {\n\t\t        if (reader._ownerReadableStream._state === 'readable') {\n\t\t            defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n\t\t        }\n\t\t        else {\n\t\t            defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n\t\t        }\n\t\t        reader._ownerReadableStream._reader = undefined;\n\t\t        reader._ownerReadableStream = undefined;\n\t\t    }\n\t\t    // Helper functions for the readers.\n\t\t    function readerLockException(name) {\n\t\t        return new TypeError('Cannot ' + name + ' a stream using a released reader');\n\t\t    }\n\t\t    // Helper functions for the ReadableStreamDefaultReader.\n\t\t    function defaultReaderClosedPromiseInitialize(reader) {\n\t\t        reader._closedPromise = newPromise((resolve, reject) => {\n\t\t            reader._closedPromise_resolve = resolve;\n\t\t            reader._closedPromise_reject = reject;\n\t\t        });\n\t\t    }\n\t\t    function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n\t\t        defaultReaderClosedPromiseInitialize(reader);\n\t\t        defaultReaderClosedPromiseReject(reader, reason);\n\t\t    }\n\t\t    function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n\t\t        defaultReaderClosedPromiseInitialize(reader);\n\t\t        defaultReaderClosedPromiseResolve(reader);\n\t\t    }\n\t\t    function defaultReaderClosedPromiseReject(reader, reason) {\n\t\t        if (reader._closedPromise_reject === undefined) {\n\t\t            return;\n\t\t        }\n\t\t        setPromiseIsHandledToTrue(reader._closedPromise);\n\t\t        reader._closedPromise_reject(reason);\n\t\t        reader._closedPromise_resolve = undefined;\n\t\t        reader._closedPromise_reject = undefined;\n\t\t    }\n\t\t    function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n\t\t        defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n\t\t    }\n\t\t    function defaultReaderClosedPromiseResolve(reader) {\n\t\t        if (reader._closedPromise_resolve === undefined) {\n\t\t            return;\n\t\t        }\n\t\t        reader._closedPromise_resolve(undefined);\n\t\t        reader._closedPromise_resolve = undefined;\n\t\t        reader._closedPromise_reject = undefined;\n\t\t    }\n\n\t\t    const AbortSteps = SymbolPolyfill('[[AbortSteps]]');\n\t\t    const ErrorSteps = SymbolPolyfill('[[ErrorSteps]]');\n\t\t    const CancelSteps = SymbolPolyfill('[[CancelSteps]]');\n\t\t    const PullSteps = SymbolPolyfill('[[PullSteps]]');\n\n\t\t    /// <reference lib=\"es2015.core\" />\n\t\t    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\n\t\t    const NumberIsFinite = Number.isFinite || function (x) {\n\t\t        return typeof x === 'number' && isFinite(x);\n\t\t    };\n\n\t\t    /// <reference lib=\"es2015.core\" />\n\t\t    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\n\t\t    const MathTrunc = Math.trunc || function (v) {\n\t\t        return v < 0 ? Math.ceil(v) : Math.floor(v);\n\t\t    };\n\n\t\t    // https://heycam.github.io/webidl/#idl-dictionaries\n\t\t    function isDictionary(x) {\n\t\t        return typeof x === 'object' || typeof x === 'function';\n\t\t    }\n\t\t    function assertDictionary(obj, context) {\n\t\t        if (obj !== undefined && !isDictionary(obj)) {\n\t\t            throw new TypeError(`${context} is not an object.`);\n\t\t        }\n\t\t    }\n\t\t    // https://heycam.github.io/webidl/#idl-callback-functions\n\t\t    function assertFunction(x, context) {\n\t\t        if (typeof x !== 'function') {\n\t\t            throw new TypeError(`${context} is not a function.`);\n\t\t        }\n\t\t    }\n\t\t    // https://heycam.github.io/webidl/#idl-object\n\t\t    function isObject(x) {\n\t\t        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n\t\t    }\n\t\t    function assertObject(x, context) {\n\t\t        if (!isObject(x)) {\n\t\t            throw new TypeError(`${context} is not an object.`);\n\t\t        }\n\t\t    }\n\t\t    function assertRequiredArgument(x, position, context) {\n\t\t        if (x === undefined) {\n\t\t            throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n\t\t        }\n\t\t    }\n\t\t    function assertRequiredField(x, field, context) {\n\t\t        if (x === undefined) {\n\t\t            throw new TypeError(`${field} is required in '${context}'.`);\n\t\t        }\n\t\t    }\n\t\t    // https://heycam.github.io/webidl/#idl-unrestricted-double\n\t\t    function convertUnrestrictedDouble(value) {\n\t\t        return Number(value);\n\t\t    }\n\t\t    function censorNegativeZero(x) {\n\t\t        return x === 0 ? 0 : x;\n\t\t    }\n\t\t    function integerPart(x) {\n\t\t        return censorNegativeZero(MathTrunc(x));\n\t\t    }\n\t\t    // https://heycam.github.io/webidl/#idl-unsigned-long-long\n\t\t    function convertUnsignedLongLongWithEnforceRange(value, context) {\n\t\t        const lowerBound = 0;\n\t\t        const upperBound = Number.MAX_SAFE_INTEGER;\n\t\t        let x = Number(value);\n\t\t        x = censorNegativeZero(x);\n\t\t        if (!NumberIsFinite(x)) {\n\t\t            throw new TypeError(`${context} is not a finite number`);\n\t\t        }\n\t\t        x = integerPart(x);\n\t\t        if (x < lowerBound || x > upperBound) {\n\t\t            throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n\t\t        }\n\t\t        if (!NumberIsFinite(x) || x === 0) {\n\t\t            return 0;\n\t\t        }\n\t\t        // TODO Use BigInt if supported?\n\t\t        // let xBigInt = BigInt(integerPart(x));\n\t\t        // xBigInt = BigInt.asUintN(64, xBigInt);\n\t\t        // return Number(xBigInt);\n\t\t        return x;\n\t\t    }\n\n\t\t    function assertReadableStream(x, context) {\n\t\t        if (!IsReadableStream(x)) {\n\t\t            throw new TypeError(`${context} is not a ReadableStream.`);\n\t\t        }\n\t\t    }\n\n\t\t    // Abstract operations for the ReadableStream.\n\t\t    function AcquireReadableStreamDefaultReader(stream) {\n\t\t        return new ReadableStreamDefaultReader(stream);\n\t\t    }\n\t\t    // ReadableStream API exposed for controllers.\n\t\t    function ReadableStreamAddReadRequest(stream, readRequest) {\n\t\t        stream._reader._readRequests.push(readRequest);\n\t\t    }\n\t\t    function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n\t\t        const reader = stream._reader;\n\t\t        const readRequest = reader._readRequests.shift();\n\t\t        if (done) {\n\t\t            readRequest._closeSteps();\n\t\t        }\n\t\t        else {\n\t\t            readRequest._chunkSteps(chunk);\n\t\t        }\n\t\t    }\n\t\t    function ReadableStreamGetNumReadRequests(stream) {\n\t\t        return stream._reader._readRequests.length;\n\t\t    }\n\t\t    function ReadableStreamHasDefaultReader(stream) {\n\t\t        const reader = stream._reader;\n\t\t        if (reader === undefined) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!IsReadableStreamDefaultReader(reader)) {\n\t\t            return false;\n\t\t        }\n\t\t        return true;\n\t\t    }\n\t\t    /**\n\t\t     * A default reader vended by a {@link ReadableStream}.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class ReadableStreamDefaultReader {\n\t\t        constructor(stream) {\n\t\t            assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n\t\t            assertReadableStream(stream, 'First parameter');\n\t\t            if (IsReadableStreamLocked(stream)) {\n\t\t                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n\t\t            }\n\t\t            ReadableStreamReaderGenericInitialize(this, stream);\n\t\t            this._readRequests = new SimpleQueue();\n\t\t        }\n\t\t        /**\n\t\t         * Returns a promise that will be fulfilled when the stream becomes closed,\n\t\t         * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n\t\t         */\n\t\t        get closed() {\n\t\t            if (!IsReadableStreamDefaultReader(this)) {\n\t\t                return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n\t\t            }\n\t\t            return this._closedPromise;\n\t\t        }\n\t\t        /**\n\t\t         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n\t\t         */\n\t\t        cancel(reason = undefined) {\n\t\t            if (!IsReadableStreamDefaultReader(this)) {\n\t\t                return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n\t\t            }\n\t\t            if (this._ownerReadableStream === undefined) {\n\t\t                return promiseRejectedWith(readerLockException('cancel'));\n\t\t            }\n\t\t            return ReadableStreamReaderGenericCancel(this, reason);\n\t\t        }\n\t\t        /**\n\t\t         * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n\t\t         *\n\t\t         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n\t\t         */\n\t\t        read() {\n\t\t            if (!IsReadableStreamDefaultReader(this)) {\n\t\t                return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n\t\t            }\n\t\t            if (this._ownerReadableStream === undefined) {\n\t\t                return promiseRejectedWith(readerLockException('read from'));\n\t\t            }\n\t\t            let resolvePromise;\n\t\t            let rejectPromise;\n\t\t            const promise = newPromise((resolve, reject) => {\n\t\t                resolvePromise = resolve;\n\t\t                rejectPromise = reject;\n\t\t            });\n\t\t            const readRequest = {\n\t\t                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n\t\t                _closeSteps: () => resolvePromise({ value: undefined, done: true }),\n\t\t                _errorSteps: e => rejectPromise(e)\n\t\t            };\n\t\t            ReadableStreamDefaultReaderRead(this, readRequest);\n\t\t            return promise;\n\t\t        }\n\t\t        /**\n\t\t         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n\t\t         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n\t\t         * from now on; otherwise, the reader will appear closed.\n\t\t         *\n\t\t         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n\t\t         * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n\t\t         * do so will throw a `TypeError` and leave the reader locked to the stream.\n\t\t         */\n\t\t        releaseLock() {\n\t\t            if (!IsReadableStreamDefaultReader(this)) {\n\t\t                throw defaultReaderBrandCheckException('releaseLock');\n\t\t            }\n\t\t            if (this._ownerReadableStream === undefined) {\n\t\t                return;\n\t\t            }\n\t\t            if (this._readRequests.length > 0) {\n\t\t                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n\t\t            }\n\t\t            ReadableStreamReaderGenericRelease(this);\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(ReadableStreamDefaultReader.prototype, {\n\t\t        cancel: { enumerable: true },\n\t\t        read: { enumerable: true },\n\t\t        releaseLock: { enumerable: true },\n\t\t        closed: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'ReadableStreamDefaultReader',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Abstract operations for the readers.\n\t\t    function IsReadableStreamDefaultReader(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof ReadableStreamDefaultReader;\n\t\t    }\n\t\t    function ReadableStreamDefaultReaderRead(reader, readRequest) {\n\t\t        const stream = reader._ownerReadableStream;\n\t\t        stream._disturbed = true;\n\t\t        if (stream._state === 'closed') {\n\t\t            readRequest._closeSteps();\n\t\t        }\n\t\t        else if (stream._state === 'errored') {\n\t\t            readRequest._errorSteps(stream._storedError);\n\t\t        }\n\t\t        else {\n\t\t            stream._readableStreamController[PullSteps](readRequest);\n\t\t        }\n\t\t    }\n\t\t    // Helper functions for the ReadableStreamDefaultReader.\n\t\t    function defaultReaderBrandCheckException(name) {\n\t\t        return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n\t\t    }\n\n\t\t    /// <reference lib=\"es2018.asynciterable\" />\n\t\t    /* eslint-disable @typescript-eslint/no-empty-function */\n\t\t    const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () { }).prototype);\n\n\t\t    /// <reference lib=\"es2018.asynciterable\" />\n\t\t    class ReadableStreamAsyncIteratorImpl {\n\t\t        constructor(reader, preventCancel) {\n\t\t            this._ongoingPromise = undefined;\n\t\t            this._isFinished = false;\n\t\t            this._reader = reader;\n\t\t            this._preventCancel = preventCancel;\n\t\t        }\n\t\t        next() {\n\t\t            const nextSteps = () => this._nextSteps();\n\t\t            this._ongoingPromise = this._ongoingPromise ?\n\t\t                transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n\t\t                nextSteps();\n\t\t            return this._ongoingPromise;\n\t\t        }\n\t\t        return(value) {\n\t\t            const returnSteps = () => this._returnSteps(value);\n\t\t            return this._ongoingPromise ?\n\t\t                transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n\t\t                returnSteps();\n\t\t        }\n\t\t        _nextSteps() {\n\t\t            if (this._isFinished) {\n\t\t                return Promise.resolve({ value: undefined, done: true });\n\t\t            }\n\t\t            const reader = this._reader;\n\t\t            if (reader._ownerReadableStream === undefined) {\n\t\t                return promiseRejectedWith(readerLockException('iterate'));\n\t\t            }\n\t\t            let resolvePromise;\n\t\t            let rejectPromise;\n\t\t            const promise = newPromise((resolve, reject) => {\n\t\t                resolvePromise = resolve;\n\t\t                rejectPromise = reject;\n\t\t            });\n\t\t            const readRequest = {\n\t\t                _chunkSteps: chunk => {\n\t\t                    this._ongoingPromise = undefined;\n\t\t                    // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n\t\t                    // FIXME Is this a bug in the specification, or in the test?\n\t\t                    queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n\t\t                },\n\t\t                _closeSteps: () => {\n\t\t                    this._ongoingPromise = undefined;\n\t\t                    this._isFinished = true;\n\t\t                    ReadableStreamReaderGenericRelease(reader);\n\t\t                    resolvePromise({ value: undefined, done: true });\n\t\t                },\n\t\t                _errorSteps: reason => {\n\t\t                    this._ongoingPromise = undefined;\n\t\t                    this._isFinished = true;\n\t\t                    ReadableStreamReaderGenericRelease(reader);\n\t\t                    rejectPromise(reason);\n\t\t                }\n\t\t            };\n\t\t            ReadableStreamDefaultReaderRead(reader, readRequest);\n\t\t            return promise;\n\t\t        }\n\t\t        _returnSteps(value) {\n\t\t            if (this._isFinished) {\n\t\t                return Promise.resolve({ value, done: true });\n\t\t            }\n\t\t            this._isFinished = true;\n\t\t            const reader = this._reader;\n\t\t            if (reader._ownerReadableStream === undefined) {\n\t\t                return promiseRejectedWith(readerLockException('finish iterating'));\n\t\t            }\n\t\t            if (!this._preventCancel) {\n\t\t                const result = ReadableStreamReaderGenericCancel(reader, value);\n\t\t                ReadableStreamReaderGenericRelease(reader);\n\t\t                return transformPromiseWith(result, () => ({ value, done: true }));\n\t\t            }\n\t\t            ReadableStreamReaderGenericRelease(reader);\n\t\t            return promiseResolvedWith({ value, done: true });\n\t\t        }\n\t\t    }\n\t\t    const ReadableStreamAsyncIteratorPrototype = {\n\t\t        next() {\n\t\t            if (!IsReadableStreamAsyncIterator(this)) {\n\t\t                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n\t\t            }\n\t\t            return this._asyncIteratorImpl.next();\n\t\t        },\n\t\t        return(value) {\n\t\t            if (!IsReadableStreamAsyncIterator(this)) {\n\t\t                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n\t\t            }\n\t\t            return this._asyncIteratorImpl.return(value);\n\t\t        }\n\t\t    };\n\t\t    if (AsyncIteratorPrototype !== undefined) {\n\t\t        Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n\t\t    }\n\t\t    // Abstract operations for the ReadableStream.\n\t\t    function AcquireReadableStreamAsyncIterator(stream, preventCancel) {\n\t\t        const reader = AcquireReadableStreamDefaultReader(stream);\n\t\t        const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n\t\t        const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);\n\t\t        iterator._asyncIteratorImpl = impl;\n\t\t        return iterator;\n\t\t    }\n\t\t    function IsReadableStreamAsyncIterator(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n\t\t            return false;\n\t\t        }\n\t\t        try {\n\t\t            // noinspection SuspiciousTypeOfGuard\n\t\t            return x._asyncIteratorImpl instanceof\n\t\t                ReadableStreamAsyncIteratorImpl;\n\t\t        }\n\t\t        catch (_a) {\n\t\t            return false;\n\t\t        }\n\t\t    }\n\t\t    // Helper functions for the ReadableStream.\n\t\t    function streamAsyncIteratorBrandCheckException(name) {\n\t\t        return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n\t\t    }\n\n\t\t    /// <reference lib=\"es2015.core\" />\n\t\t    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\n\t\t    const NumberIsNaN = Number.isNaN || function (x) {\n\t\t        // eslint-disable-next-line no-self-compare\n\t\t        return x !== x;\n\t\t    };\n\n\t\t    function CreateArrayFromList(elements) {\n\t\t        // We use arrays to represent lists, so this is basically a no-op.\n\t\t        // Do a slice though just in case we happen to depend on the unique-ness.\n\t\t        return elements.slice();\n\t\t    }\n\t\t    function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {\n\t\t        new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n\t\t    }\n\t\t    // Not implemented correctly\n\t\t    function TransferArrayBuffer(O) {\n\t\t        return O;\n\t\t    }\n\t\t    // Not implemented correctly\n\t\t    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\t    function IsDetachedBuffer(O) {\n\t\t        return false;\n\t\t    }\n\t\t    function ArrayBufferSlice(buffer, begin, end) {\n\t\t        // ArrayBuffer.prototype.slice is not available on IE10\n\t\t        // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n\t\t        if (buffer.slice) {\n\t\t            return buffer.slice(begin, end);\n\t\t        }\n\t\t        const length = end - begin;\n\t\t        const slice = new ArrayBuffer(length);\n\t\t        CopyDataBlockBytes(slice, 0, buffer, begin, length);\n\t\t        return slice;\n\t\t    }\n\n\t\t    function IsNonNegativeNumber(v) {\n\t\t        if (typeof v !== 'number') {\n\t\t            return false;\n\t\t        }\n\t\t        if (NumberIsNaN(v)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (v < 0) {\n\t\t            return false;\n\t\t        }\n\t\t        return true;\n\t\t    }\n\t\t    function CloneAsUint8Array(O) {\n\t\t        const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n\t\t        return new Uint8Array(buffer);\n\t\t    }\n\n\t\t    function DequeueValue(container) {\n\t\t        const pair = container._queue.shift();\n\t\t        container._queueTotalSize -= pair.size;\n\t\t        if (container._queueTotalSize < 0) {\n\t\t            container._queueTotalSize = 0;\n\t\t        }\n\t\t        return pair.value;\n\t\t    }\n\t\t    function EnqueueValueWithSize(container, value, size) {\n\t\t        if (!IsNonNegativeNumber(size) || size === Infinity) {\n\t\t            throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n\t\t        }\n\t\t        container._queue.push({ value, size });\n\t\t        container._queueTotalSize += size;\n\t\t    }\n\t\t    function PeekQueueValue(container) {\n\t\t        const pair = container._queue.peek();\n\t\t        return pair.value;\n\t\t    }\n\t\t    function ResetQueue(container) {\n\t\t        container._queue = new SimpleQueue();\n\t\t        container._queueTotalSize = 0;\n\t\t    }\n\n\t\t    /**\n\t\t     * A pull-into request in a {@link ReadableByteStreamController}.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class ReadableStreamBYOBRequest {\n\t\t        constructor() {\n\t\t            throw new TypeError('Illegal constructor');\n\t\t        }\n\t\t        /**\n\t\t         * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n\t\t         */\n\t\t        get view() {\n\t\t            if (!IsReadableStreamBYOBRequest(this)) {\n\t\t                throw byobRequestBrandCheckException('view');\n\t\t            }\n\t\t            return this._view;\n\t\t        }\n\t\t        respond(bytesWritten) {\n\t\t            if (!IsReadableStreamBYOBRequest(this)) {\n\t\t                throw byobRequestBrandCheckException('respond');\n\t\t            }\n\t\t            assertRequiredArgument(bytesWritten, 1, 'respond');\n\t\t            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n\t\t            if (this._associatedReadableByteStreamController === undefined) {\n\t\t                throw new TypeError('This BYOB request has been invalidated');\n\t\t            }\n\t\t            if (IsDetachedBuffer(this._view.buffer)) ;\n\t\t            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n\t\t        }\n\t\t        respondWithNewView(view) {\n\t\t            if (!IsReadableStreamBYOBRequest(this)) {\n\t\t                throw byobRequestBrandCheckException('respondWithNewView');\n\t\t            }\n\t\t            assertRequiredArgument(view, 1, 'respondWithNewView');\n\t\t            if (!ArrayBuffer.isView(view)) {\n\t\t                throw new TypeError('You can only respond with array buffer views');\n\t\t            }\n\t\t            if (this._associatedReadableByteStreamController === undefined) {\n\t\t                throw new TypeError('This BYOB request has been invalidated');\n\t\t            }\n\t\t            if (IsDetachedBuffer(view.buffer)) ;\n\t\t            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(ReadableStreamBYOBRequest.prototype, {\n\t\t        respond: { enumerable: true },\n\t\t        respondWithNewView: { enumerable: true },\n\t\t        view: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'ReadableStreamBYOBRequest',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    /**\n\t\t     * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class ReadableByteStreamController {\n\t\t        constructor() {\n\t\t            throw new TypeError('Illegal constructor');\n\t\t        }\n\t\t        /**\n\t\t         * Returns the current BYOB pull request, or `null` if there isn't one.\n\t\t         */\n\t\t        get byobRequest() {\n\t\t            if (!IsReadableByteStreamController(this)) {\n\t\t                throw byteStreamControllerBrandCheckException('byobRequest');\n\t\t            }\n\t\t            return ReadableByteStreamControllerGetBYOBRequest(this);\n\t\t        }\n\t\t        /**\n\t\t         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n\t\t         * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n\t\t         */\n\t\t        get desiredSize() {\n\t\t            if (!IsReadableByteStreamController(this)) {\n\t\t                throw byteStreamControllerBrandCheckException('desiredSize');\n\t\t            }\n\t\t            return ReadableByteStreamControllerGetDesiredSize(this);\n\t\t        }\n\t\t        /**\n\t\t         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n\t\t         * the stream, but once those are read, the stream will become closed.\n\t\t         */\n\t\t        close() {\n\t\t            if (!IsReadableByteStreamController(this)) {\n\t\t                throw byteStreamControllerBrandCheckException('close');\n\t\t            }\n\t\t            if (this._closeRequested) {\n\t\t                throw new TypeError('The stream has already been closed; do not close it again!');\n\t\t            }\n\t\t            const state = this._controlledReadableByteStream._state;\n\t\t            if (state !== 'readable') {\n\t\t                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n\t\t            }\n\t\t            ReadableByteStreamControllerClose(this);\n\t\t        }\n\t\t        enqueue(chunk) {\n\t\t            if (!IsReadableByteStreamController(this)) {\n\t\t                throw byteStreamControllerBrandCheckException('enqueue');\n\t\t            }\n\t\t            assertRequiredArgument(chunk, 1, 'enqueue');\n\t\t            if (!ArrayBuffer.isView(chunk)) {\n\t\t                throw new TypeError('chunk must be an array buffer view');\n\t\t            }\n\t\t            if (chunk.byteLength === 0) {\n\t\t                throw new TypeError('chunk must have non-zero byteLength');\n\t\t            }\n\t\t            if (chunk.buffer.byteLength === 0) {\n\t\t                throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n\t\t            }\n\t\t            if (this._closeRequested) {\n\t\t                throw new TypeError('stream is closed or draining');\n\t\t            }\n\t\t            const state = this._controlledReadableByteStream._state;\n\t\t            if (state !== 'readable') {\n\t\t                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n\t\t            }\n\t\t            ReadableByteStreamControllerEnqueue(this, chunk);\n\t\t        }\n\t\t        /**\n\t\t         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n\t\t         */\n\t\t        error(e = undefined) {\n\t\t            if (!IsReadableByteStreamController(this)) {\n\t\t                throw byteStreamControllerBrandCheckException('error');\n\t\t            }\n\t\t            ReadableByteStreamControllerError(this, e);\n\t\t        }\n\t\t        /** @internal */\n\t\t        [CancelSteps](reason) {\n\t\t            ReadableByteStreamControllerClearPendingPullIntos(this);\n\t\t            ResetQueue(this);\n\t\t            const result = this._cancelAlgorithm(reason);\n\t\t            ReadableByteStreamControllerClearAlgorithms(this);\n\t\t            return result;\n\t\t        }\n\t\t        /** @internal */\n\t\t        [PullSteps](readRequest) {\n\t\t            const stream = this._controlledReadableByteStream;\n\t\t            if (this._queueTotalSize > 0) {\n\t\t                const entry = this._queue.shift();\n\t\t                this._queueTotalSize -= entry.byteLength;\n\t\t                ReadableByteStreamControllerHandleQueueDrain(this);\n\t\t                const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n\t\t                readRequest._chunkSteps(view);\n\t\t                return;\n\t\t            }\n\t\t            const autoAllocateChunkSize = this._autoAllocateChunkSize;\n\t\t            if (autoAllocateChunkSize !== undefined) {\n\t\t                let buffer;\n\t\t                try {\n\t\t                    buffer = new ArrayBuffer(autoAllocateChunkSize);\n\t\t                }\n\t\t                catch (bufferE) {\n\t\t                    readRequest._errorSteps(bufferE);\n\t\t                    return;\n\t\t                }\n\t\t                const pullIntoDescriptor = {\n\t\t                    buffer,\n\t\t                    bufferByteLength: autoAllocateChunkSize,\n\t\t                    byteOffset: 0,\n\t\t                    byteLength: autoAllocateChunkSize,\n\t\t                    bytesFilled: 0,\n\t\t                    elementSize: 1,\n\t\t                    viewConstructor: Uint8Array,\n\t\t                    readerType: 'default'\n\t\t                };\n\t\t                this._pendingPullIntos.push(pullIntoDescriptor);\n\t\t            }\n\t\t            ReadableStreamAddReadRequest(stream, readRequest);\n\t\t            ReadableByteStreamControllerCallPullIfNeeded(this);\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(ReadableByteStreamController.prototype, {\n\t\t        close: { enumerable: true },\n\t\t        enqueue: { enumerable: true },\n\t\t        error: { enumerable: true },\n\t\t        byobRequest: { enumerable: true },\n\t\t        desiredSize: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'ReadableByteStreamController',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Abstract operations for the ReadableByteStreamController.\n\t\t    function IsReadableByteStreamController(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof ReadableByteStreamController;\n\t\t    }\n\t\t    function IsReadableStreamBYOBRequest(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof ReadableStreamBYOBRequest;\n\t\t    }\n\t\t    function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n\t\t        const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n\t\t        if (!shouldPull) {\n\t\t            return;\n\t\t        }\n\t\t        if (controller._pulling) {\n\t\t            controller._pullAgain = true;\n\t\t            return;\n\t\t        }\n\t\t        controller._pulling = true;\n\t\t        // TODO: Test controller argument\n\t\t        const pullPromise = controller._pullAlgorithm();\n\t\t        uponPromise(pullPromise, () => {\n\t\t            controller._pulling = false;\n\t\t            if (controller._pullAgain) {\n\t\t                controller._pullAgain = false;\n\t\t                ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t\t            }\n\t\t        }, e => {\n\t\t            ReadableByteStreamControllerError(controller, e);\n\t\t        });\n\t\t    }\n\t\t    function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n\t\t        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\t\t        controller._pendingPullIntos = new SimpleQueue();\n\t\t    }\n\t\t    function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n\t\t        let done = false;\n\t\t        if (stream._state === 'closed') {\n\t\t            done = true;\n\t\t        }\n\t\t        const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n\t\t        if (pullIntoDescriptor.readerType === 'default') {\n\t\t            ReadableStreamFulfillReadRequest(stream, filledView, done);\n\t\t        }\n\t\t        else {\n\t\t            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n\t\t        }\n\t\t    }\n\t\t    function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n\t\t        const bytesFilled = pullIntoDescriptor.bytesFilled;\n\t\t        const elementSize = pullIntoDescriptor.elementSize;\n\t\t        return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n\t\t    }\n\t\t    function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n\t\t        controller._queue.push({ buffer, byteOffset, byteLength });\n\t\t        controller._queueTotalSize += byteLength;\n\t\t    }\n\t\t    function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n\t\t        const elementSize = pullIntoDescriptor.elementSize;\n\t\t        const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n\t\t        const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n\t\t        const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n\t\t        const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n\t\t        let totalBytesToCopyRemaining = maxBytesToCopy;\n\t\t        let ready = false;\n\t\t        if (maxAlignedBytes > currentAlignedBytes) {\n\t\t            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n\t\t            ready = true;\n\t\t        }\n\t\t        const queue = controller._queue;\n\t\t        while (totalBytesToCopyRemaining > 0) {\n\t\t            const headOfQueue = queue.peek();\n\t\t            const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n\t\t            const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n\t\t            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n\t\t            if (headOfQueue.byteLength === bytesToCopy) {\n\t\t                queue.shift();\n\t\t            }\n\t\t            else {\n\t\t                headOfQueue.byteOffset += bytesToCopy;\n\t\t                headOfQueue.byteLength -= bytesToCopy;\n\t\t            }\n\t\t            controller._queueTotalSize -= bytesToCopy;\n\t\t            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n\t\t            totalBytesToCopyRemaining -= bytesToCopy;\n\t\t        }\n\t\t        return ready;\n\t\t    }\n\t\t    function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n\t\t        pullIntoDescriptor.bytesFilled += size;\n\t\t    }\n\t\t    function ReadableByteStreamControllerHandleQueueDrain(controller) {\n\t\t        if (controller._queueTotalSize === 0 && controller._closeRequested) {\n\t\t            ReadableByteStreamControllerClearAlgorithms(controller);\n\t\t            ReadableStreamClose(controller._controlledReadableByteStream);\n\t\t        }\n\t\t        else {\n\t\t            ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t\t        }\n\t\t    }\n\t\t    function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n\t\t        if (controller._byobRequest === null) {\n\t\t            return;\n\t\t        }\n\t\t        controller._byobRequest._associatedReadableByteStreamController = undefined;\n\t\t        controller._byobRequest._view = null;\n\t\t        controller._byobRequest = null;\n\t\t    }\n\t\t    function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n\t\t        while (controller._pendingPullIntos.length > 0) {\n\t\t            if (controller._queueTotalSize === 0) {\n\t\t                return;\n\t\t            }\n\t\t            const pullIntoDescriptor = controller._pendingPullIntos.peek();\n\t\t            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n\t\t                ReadableByteStreamControllerShiftPendingPullInto(controller);\n\t\t                ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n\t\t            }\n\t\t        }\n\t\t    }\n\t\t    function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {\n\t\t        const stream = controller._controlledReadableByteStream;\n\t\t        let elementSize = 1;\n\t\t        if (view.constructor !== DataView) {\n\t\t            elementSize = view.constructor.BYTES_PER_ELEMENT;\n\t\t        }\n\t\t        const ctor = view.constructor;\n\t\t        // try {\n\t\t        const buffer = TransferArrayBuffer(view.buffer);\n\t\t        // } catch (e) {\n\t\t        //   readIntoRequest._errorSteps(e);\n\t\t        //   return;\n\t\t        // }\n\t\t        const pullIntoDescriptor = {\n\t\t            buffer,\n\t\t            bufferByteLength: buffer.byteLength,\n\t\t            byteOffset: view.byteOffset,\n\t\t            byteLength: view.byteLength,\n\t\t            bytesFilled: 0,\n\t\t            elementSize,\n\t\t            viewConstructor: ctor,\n\t\t            readerType: 'byob'\n\t\t        };\n\t\t        if (controller._pendingPullIntos.length > 0) {\n\t\t            controller._pendingPullIntos.push(pullIntoDescriptor);\n\t\t            // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n\t\t            // - No change happens on desiredSize\n\t\t            // - The source has already been notified of that there's at least 1 pending read(view)\n\t\t            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n\t\t            return;\n\t\t        }\n\t\t        if (stream._state === 'closed') {\n\t\t            const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n\t\t            readIntoRequest._closeSteps(emptyView);\n\t\t            return;\n\t\t        }\n\t\t        if (controller._queueTotalSize > 0) {\n\t\t            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n\t\t                const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n\t\t                ReadableByteStreamControllerHandleQueueDrain(controller);\n\t\t                readIntoRequest._chunkSteps(filledView);\n\t\t                return;\n\t\t            }\n\t\t            if (controller._closeRequested) {\n\t\t                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n\t\t                ReadableByteStreamControllerError(controller, e);\n\t\t                readIntoRequest._errorSteps(e);\n\t\t                return;\n\t\t            }\n\t\t        }\n\t\t        controller._pendingPullIntos.push(pullIntoDescriptor);\n\t\t        ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n\t\t        ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t\t    }\n\t\t    function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n\t\t        const stream = controller._controlledReadableByteStream;\n\t\t        if (ReadableStreamHasBYOBReader(stream)) {\n\t\t            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n\t\t                const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n\t\t                ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n\t\t            }\n\t\t        }\n\t\t    }\n\t\t    function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n\t\t        ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n\t\t        if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n\t\t            return;\n\t\t        }\n\t\t        ReadableByteStreamControllerShiftPendingPullInto(controller);\n\t\t        const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n\t\t        if (remainderSize > 0) {\n\t\t            const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n\t\t            const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);\n\t\t            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n\t\t        }\n\t\t        pullIntoDescriptor.bytesFilled -= remainderSize;\n\t\t        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n\t\t        ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n\t\t    }\n\t\t    function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n\t\t        const firstDescriptor = controller._pendingPullIntos.peek();\n\t\t        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\t\t        const state = controller._controlledReadableByteStream._state;\n\t\t        if (state === 'closed') {\n\t\t            ReadableByteStreamControllerRespondInClosedState(controller);\n\t\t        }\n\t\t        else {\n\t\t            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n\t\t        }\n\t\t        ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t\t    }\n\t\t    function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n\t\t        const descriptor = controller._pendingPullIntos.shift();\n\t\t        return descriptor;\n\t\t    }\n\t\t    function ReadableByteStreamControllerShouldCallPull(controller) {\n\t\t        const stream = controller._controlledReadableByteStream;\n\t\t        if (stream._state !== 'readable') {\n\t\t            return false;\n\t\t        }\n\t\t        if (controller._closeRequested) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!controller._started) {\n\t\t            return false;\n\t\t        }\n\t\t        if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n\t\t            return true;\n\t\t        }\n\t\t        if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n\t\t            return true;\n\t\t        }\n\t\t        const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n\t\t        if (desiredSize > 0) {\n\t\t            return true;\n\t\t        }\n\t\t        return false;\n\t\t    }\n\t\t    function ReadableByteStreamControllerClearAlgorithms(controller) {\n\t\t        controller._pullAlgorithm = undefined;\n\t\t        controller._cancelAlgorithm = undefined;\n\t\t    }\n\t\t    // A client of ReadableByteStreamController may use these functions directly to bypass state check.\n\t\t    function ReadableByteStreamControllerClose(controller) {\n\t\t        const stream = controller._controlledReadableByteStream;\n\t\t        if (controller._closeRequested || stream._state !== 'readable') {\n\t\t            return;\n\t\t        }\n\t\t        if (controller._queueTotalSize > 0) {\n\t\t            controller._closeRequested = true;\n\t\t            return;\n\t\t        }\n\t\t        if (controller._pendingPullIntos.length > 0) {\n\t\t            const firstPendingPullInto = controller._pendingPullIntos.peek();\n\t\t            if (firstPendingPullInto.bytesFilled > 0) {\n\t\t                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n\t\t                ReadableByteStreamControllerError(controller, e);\n\t\t                throw e;\n\t\t            }\n\t\t        }\n\t\t        ReadableByteStreamControllerClearAlgorithms(controller);\n\t\t        ReadableStreamClose(stream);\n\t\t    }\n\t\t    function ReadableByteStreamControllerEnqueue(controller, chunk) {\n\t\t        const stream = controller._controlledReadableByteStream;\n\t\t        if (controller._closeRequested || stream._state !== 'readable') {\n\t\t            return;\n\t\t        }\n\t\t        const buffer = chunk.buffer;\n\t\t        const byteOffset = chunk.byteOffset;\n\t\t        const byteLength = chunk.byteLength;\n\t\t        const transferredBuffer = TransferArrayBuffer(buffer);\n\t\t        if (controller._pendingPullIntos.length > 0) {\n\t\t            const firstPendingPullInto = controller._pendingPullIntos.peek();\n\t\t            if (IsDetachedBuffer(firstPendingPullInto.buffer)) ;\n\t\t            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n\t\t        }\n\t\t        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\t\t        if (ReadableStreamHasDefaultReader(stream)) {\n\t\t            if (ReadableStreamGetNumReadRequests(stream) === 0) {\n\t\t                ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n\t\t            }\n\t\t            else {\n\t\t                if (controller._pendingPullIntos.length > 0) {\n\t\t                    ReadableByteStreamControllerShiftPendingPullInto(controller);\n\t\t                }\n\t\t                const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n\t\t                ReadableStreamFulfillReadRequest(stream, transferredView, false);\n\t\t            }\n\t\t        }\n\t\t        else if (ReadableStreamHasBYOBReader(stream)) {\n\t\t            // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n\t\t            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n\t\t            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n\t\t        }\n\t\t        else {\n\t\t            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n\t\t        }\n\t\t        ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t\t    }\n\t\t    function ReadableByteStreamControllerError(controller, e) {\n\t\t        const stream = controller._controlledReadableByteStream;\n\t\t        if (stream._state !== 'readable') {\n\t\t            return;\n\t\t        }\n\t\t        ReadableByteStreamControllerClearPendingPullIntos(controller);\n\t\t        ResetQueue(controller);\n\t\t        ReadableByteStreamControllerClearAlgorithms(controller);\n\t\t        ReadableStreamError(stream, e);\n\t\t    }\n\t\t    function ReadableByteStreamControllerGetBYOBRequest(controller) {\n\t\t        if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n\t\t            const firstDescriptor = controller._pendingPullIntos.peek();\n\t\t            const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n\t\t            const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n\t\t            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n\t\t            controller._byobRequest = byobRequest;\n\t\t        }\n\t\t        return controller._byobRequest;\n\t\t    }\n\t\t    function ReadableByteStreamControllerGetDesiredSize(controller) {\n\t\t        const state = controller._controlledReadableByteStream._state;\n\t\t        if (state === 'errored') {\n\t\t            return null;\n\t\t        }\n\t\t        if (state === 'closed') {\n\t\t            return 0;\n\t\t        }\n\t\t        return controller._strategyHWM - controller._queueTotalSize;\n\t\t    }\n\t\t    function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n\t\t        const firstDescriptor = controller._pendingPullIntos.peek();\n\t\t        const state = controller._controlledReadableByteStream._state;\n\t\t        if (state === 'closed') {\n\t\t            if (bytesWritten !== 0) {\n\t\t                throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n\t\t            }\n\t\t        }\n\t\t        else {\n\t\t            if (bytesWritten === 0) {\n\t\t                throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n\t\t            }\n\t\t            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n\t\t                throw new RangeError('bytesWritten out of range');\n\t\t            }\n\t\t        }\n\t\t        firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n\t\t        ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n\t\t    }\n\t\t    function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n\t\t        const firstDescriptor = controller._pendingPullIntos.peek();\n\t\t        const state = controller._controlledReadableByteStream._state;\n\t\t        if (state === 'closed') {\n\t\t            if (view.byteLength !== 0) {\n\t\t                throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n\t\t            }\n\t\t        }\n\t\t        else {\n\t\t            if (view.byteLength === 0) {\n\t\t                throw new TypeError('The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream');\n\t\t            }\n\t\t        }\n\t\t        if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n\t\t            throw new RangeError('The region specified by view does not match byobRequest');\n\t\t        }\n\t\t        if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n\t\t            throw new RangeError('The buffer of view has different capacity than byobRequest');\n\t\t        }\n\t\t        if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n\t\t            throw new RangeError('The region specified by view is larger than byobRequest');\n\t\t        }\n\t\t        const viewByteLength = view.byteLength;\n\t\t        firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n\t\t        ReadableByteStreamControllerRespondInternal(controller, viewByteLength);\n\t\t    }\n\t\t    function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {\n\t\t        controller._controlledReadableByteStream = stream;\n\t\t        controller._pullAgain = false;\n\t\t        controller._pulling = false;\n\t\t        controller._byobRequest = null;\n\t\t        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n\t\t        controller._queue = controller._queueTotalSize = undefined;\n\t\t        ResetQueue(controller);\n\t\t        controller._closeRequested = false;\n\t\t        controller._started = false;\n\t\t        controller._strategyHWM = highWaterMark;\n\t\t        controller._pullAlgorithm = pullAlgorithm;\n\t\t        controller._cancelAlgorithm = cancelAlgorithm;\n\t\t        controller._autoAllocateChunkSize = autoAllocateChunkSize;\n\t\t        controller._pendingPullIntos = new SimpleQueue();\n\t\t        stream._readableStreamController = controller;\n\t\t        const startResult = startAlgorithm();\n\t\t        uponPromise(promiseResolvedWith(startResult), () => {\n\t\t            controller._started = true;\n\t\t            ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t\t        }, r => {\n\t\t            ReadableByteStreamControllerError(controller, r);\n\t\t        });\n\t\t    }\n\t\t    function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n\t\t        const controller = Object.create(ReadableByteStreamController.prototype);\n\t\t        let startAlgorithm = () => undefined;\n\t\t        let pullAlgorithm = () => promiseResolvedWith(undefined);\n\t\t        let cancelAlgorithm = () => promiseResolvedWith(undefined);\n\t\t        if (underlyingByteSource.start !== undefined) {\n\t\t            startAlgorithm = () => underlyingByteSource.start(controller);\n\t\t        }\n\t\t        if (underlyingByteSource.pull !== undefined) {\n\t\t            pullAlgorithm = () => underlyingByteSource.pull(controller);\n\t\t        }\n\t\t        if (underlyingByteSource.cancel !== undefined) {\n\t\t            cancelAlgorithm = reason => underlyingByteSource.cancel(reason);\n\t\t        }\n\t\t        const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n\t\t        if (autoAllocateChunkSize === 0) {\n\t\t            throw new TypeError('autoAllocateChunkSize must be greater than 0');\n\t\t        }\n\t\t        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);\n\t\t    }\n\t\t    function SetUpReadableStreamBYOBRequest(request, controller, view) {\n\t\t        request._associatedReadableByteStreamController = controller;\n\t\t        request._view = view;\n\t\t    }\n\t\t    // Helper functions for the ReadableStreamBYOBRequest.\n\t\t    function byobRequestBrandCheckException(name) {\n\t\t        return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n\t\t    }\n\t\t    // Helper functions for the ReadableByteStreamController.\n\t\t    function byteStreamControllerBrandCheckException(name) {\n\t\t        return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n\t\t    }\n\n\t\t    // Abstract operations for the ReadableStream.\n\t\t    function AcquireReadableStreamBYOBReader(stream) {\n\t\t        return new ReadableStreamBYOBReader(stream);\n\t\t    }\n\t\t    // ReadableStream API exposed for controllers.\n\t\t    function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {\n\t\t        stream._reader._readIntoRequests.push(readIntoRequest);\n\t\t    }\n\t\t    function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n\t\t        const reader = stream._reader;\n\t\t        const readIntoRequest = reader._readIntoRequests.shift();\n\t\t        if (done) {\n\t\t            readIntoRequest._closeSteps(chunk);\n\t\t        }\n\t\t        else {\n\t\t            readIntoRequest._chunkSteps(chunk);\n\t\t        }\n\t\t    }\n\t\t    function ReadableStreamGetNumReadIntoRequests(stream) {\n\t\t        return stream._reader._readIntoRequests.length;\n\t\t    }\n\t\t    function ReadableStreamHasBYOBReader(stream) {\n\t\t        const reader = stream._reader;\n\t\t        if (reader === undefined) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!IsReadableStreamBYOBReader(reader)) {\n\t\t            return false;\n\t\t        }\n\t\t        return true;\n\t\t    }\n\t\t    /**\n\t\t     * A BYOB reader vended by a {@link ReadableStream}.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class ReadableStreamBYOBReader {\n\t\t        constructor(stream) {\n\t\t            assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n\t\t            assertReadableStream(stream, 'First parameter');\n\t\t            if (IsReadableStreamLocked(stream)) {\n\t\t                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n\t\t            }\n\t\t            if (!IsReadableByteStreamController(stream._readableStreamController)) {\n\t\t                throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n\t\t                    'source');\n\t\t            }\n\t\t            ReadableStreamReaderGenericInitialize(this, stream);\n\t\t            this._readIntoRequests = new SimpleQueue();\n\t\t        }\n\t\t        /**\n\t\t         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n\t\t         * the reader's lock is released before the stream finishes closing.\n\t\t         */\n\t\t        get closed() {\n\t\t            if (!IsReadableStreamBYOBReader(this)) {\n\t\t                return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n\t\t            }\n\t\t            return this._closedPromise;\n\t\t        }\n\t\t        /**\n\t\t         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n\t\t         */\n\t\t        cancel(reason = undefined) {\n\t\t            if (!IsReadableStreamBYOBReader(this)) {\n\t\t                return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n\t\t            }\n\t\t            if (this._ownerReadableStream === undefined) {\n\t\t                return promiseRejectedWith(readerLockException('cancel'));\n\t\t            }\n\t\t            return ReadableStreamReaderGenericCancel(this, reason);\n\t\t        }\n\t\t        /**\n\t\t         * Attempts to reads bytes into view, and returns a promise resolved with the result.\n\t\t         *\n\t\t         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n\t\t         */\n\t\t        read(view) {\n\t\t            if (!IsReadableStreamBYOBReader(this)) {\n\t\t                return promiseRejectedWith(byobReaderBrandCheckException('read'));\n\t\t            }\n\t\t            if (!ArrayBuffer.isView(view)) {\n\t\t                return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n\t\t            }\n\t\t            if (view.byteLength === 0) {\n\t\t                return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n\t\t            }\n\t\t            if (view.buffer.byteLength === 0) {\n\t\t                return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n\t\t            }\n\t\t            if (IsDetachedBuffer(view.buffer)) ;\n\t\t            if (this._ownerReadableStream === undefined) {\n\t\t                return promiseRejectedWith(readerLockException('read from'));\n\t\t            }\n\t\t            let resolvePromise;\n\t\t            let rejectPromise;\n\t\t            const promise = newPromise((resolve, reject) => {\n\t\t                resolvePromise = resolve;\n\t\t                rejectPromise = reject;\n\t\t            });\n\t\t            const readIntoRequest = {\n\t\t                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n\t\t                _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),\n\t\t                _errorSteps: e => rejectPromise(e)\n\t\t            };\n\t\t            ReadableStreamBYOBReaderRead(this, view, readIntoRequest);\n\t\t            return promise;\n\t\t        }\n\t\t        /**\n\t\t         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n\t\t         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n\t\t         * from now on; otherwise, the reader will appear closed.\n\t\t         *\n\t\t         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n\t\t         * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n\t\t         * do so will throw a `TypeError` and leave the reader locked to the stream.\n\t\t         */\n\t\t        releaseLock() {\n\t\t            if (!IsReadableStreamBYOBReader(this)) {\n\t\t                throw byobReaderBrandCheckException('releaseLock');\n\t\t            }\n\t\t            if (this._ownerReadableStream === undefined) {\n\t\t                return;\n\t\t            }\n\t\t            if (this._readIntoRequests.length > 0) {\n\t\t                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n\t\t            }\n\t\t            ReadableStreamReaderGenericRelease(this);\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(ReadableStreamBYOBReader.prototype, {\n\t\t        cancel: { enumerable: true },\n\t\t        read: { enumerable: true },\n\t\t        releaseLock: { enumerable: true },\n\t\t        closed: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'ReadableStreamBYOBReader',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Abstract operations for the readers.\n\t\t    function IsReadableStreamBYOBReader(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof ReadableStreamBYOBReader;\n\t\t    }\n\t\t    function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {\n\t\t        const stream = reader._ownerReadableStream;\n\t\t        stream._disturbed = true;\n\t\t        if (stream._state === 'errored') {\n\t\t            readIntoRequest._errorSteps(stream._storedError);\n\t\t        }\n\t\t        else {\n\t\t            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);\n\t\t        }\n\t\t    }\n\t\t    // Helper functions for the ReadableStreamBYOBReader.\n\t\t    function byobReaderBrandCheckException(name) {\n\t\t        return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n\t\t    }\n\n\t\t    function ExtractHighWaterMark(strategy, defaultHWM) {\n\t\t        const { highWaterMark } = strategy;\n\t\t        if (highWaterMark === undefined) {\n\t\t            return defaultHWM;\n\t\t        }\n\t\t        if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n\t\t            throw new RangeError('Invalid highWaterMark');\n\t\t        }\n\t\t        return highWaterMark;\n\t\t    }\n\t\t    function ExtractSizeAlgorithm(strategy) {\n\t\t        const { size } = strategy;\n\t\t        if (!size) {\n\t\t            return () => 1;\n\t\t        }\n\t\t        return size;\n\t\t    }\n\n\t\t    function convertQueuingStrategy(init, context) {\n\t\t        assertDictionary(init, context);\n\t\t        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n\t\t        const size = init === null || init === void 0 ? void 0 : init.size;\n\t\t        return {\n\t\t            highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n\t\t            size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n\t\t        };\n\t\t    }\n\t\t    function convertQueuingStrategySize(fn, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return chunk => convertUnrestrictedDouble(fn(chunk));\n\t\t    }\n\n\t\t    function convertUnderlyingSink(original, context) {\n\t\t        assertDictionary(original, context);\n\t\t        const abort = original === null || original === void 0 ? void 0 : original.abort;\n\t\t        const close = original === null || original === void 0 ? void 0 : original.close;\n\t\t        const start = original === null || original === void 0 ? void 0 : original.start;\n\t\t        const type = original === null || original === void 0 ? void 0 : original.type;\n\t\t        const write = original === null || original === void 0 ? void 0 : original.write;\n\t\t        return {\n\t\t            abort: abort === undefined ?\n\t\t                undefined :\n\t\t                convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),\n\t\t            close: close === undefined ?\n\t\t                undefined :\n\t\t                convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),\n\t\t            start: start === undefined ?\n\t\t                undefined :\n\t\t                convertUnderlyingSinkStartCallback(start, original, `${context} has member 'start' that`),\n\t\t            write: write === undefined ?\n\t\t                undefined :\n\t\t                convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),\n\t\t            type\n\t\t        };\n\t\t    }\n\t\t    function convertUnderlyingSinkAbortCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return (reason) => promiseCall(fn, original, [reason]);\n\t\t    }\n\t\t    function convertUnderlyingSinkCloseCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return () => promiseCall(fn, original, []);\n\t\t    }\n\t\t    function convertUnderlyingSinkStartCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return (controller) => reflectCall(fn, original, [controller]);\n\t\t    }\n\t\t    function convertUnderlyingSinkWriteCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n\t\t    }\n\n\t\t    function assertWritableStream(x, context) {\n\t\t        if (!IsWritableStream(x)) {\n\t\t            throw new TypeError(`${context} is not a WritableStream.`);\n\t\t        }\n\t\t    }\n\n\t\t    function isAbortSignal(value) {\n\t\t        if (typeof value !== 'object' || value === null) {\n\t\t            return false;\n\t\t        }\n\t\t        try {\n\t\t            return typeof value.aborted === 'boolean';\n\t\t        }\n\t\t        catch (_a) {\n\t\t            // AbortSignal.prototype.aborted throws if its brand check fails\n\t\t            return false;\n\t\t        }\n\t\t    }\n\t\t    const supportsAbortController = typeof AbortController === 'function';\n\t\t    /**\n\t\t     * Construct a new AbortController, if supported by the platform.\n\t\t     *\n\t\t     * @internal\n\t\t     */\n\t\t    function createAbortController() {\n\t\t        if (supportsAbortController) {\n\t\t            return new AbortController();\n\t\t        }\n\t\t        return undefined;\n\t\t    }\n\n\t\t    /**\n\t\t     * A writable stream represents a destination for data, into which you can write.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class WritableStream {\n\t\t        constructor(rawUnderlyingSink = {}, rawStrategy = {}) {\n\t\t            if (rawUnderlyingSink === undefined) {\n\t\t                rawUnderlyingSink = null;\n\t\t            }\n\t\t            else {\n\t\t                assertObject(rawUnderlyingSink, 'First parameter');\n\t\t            }\n\t\t            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n\t\t            const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n\t\t            InitializeWritableStream(this);\n\t\t            const type = underlyingSink.type;\n\t\t            if (type !== undefined) {\n\t\t                throw new RangeError('Invalid type is specified');\n\t\t            }\n\t\t            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n\t\t            const highWaterMark = ExtractHighWaterMark(strategy, 1);\n\t\t            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n\t\t        }\n\t\t        /**\n\t\t         * Returns whether or not the writable stream is locked to a writer.\n\t\t         */\n\t\t        get locked() {\n\t\t            if (!IsWritableStream(this)) {\n\t\t                throw streamBrandCheckException$2('locked');\n\t\t            }\n\t\t            return IsWritableStreamLocked(this);\n\t\t        }\n\t\t        /**\n\t\t         * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n\t\t         * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n\t\t         * mechanism of the underlying sink.\n\t\t         *\n\t\t         * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n\t\t         * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n\t\t         * the stream) if the stream is currently locked.\n\t\t         */\n\t\t        abort(reason = undefined) {\n\t\t            if (!IsWritableStream(this)) {\n\t\t                return promiseRejectedWith(streamBrandCheckException$2('abort'));\n\t\t            }\n\t\t            if (IsWritableStreamLocked(this)) {\n\t\t                return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n\t\t            }\n\t\t            return WritableStreamAbort(this, reason);\n\t\t        }\n\t\t        /**\n\t\t         * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n\t\t         * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n\t\t         *\n\t\t         * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n\t\t         * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n\t\t         * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n\t\t         */\n\t\t        close() {\n\t\t            if (!IsWritableStream(this)) {\n\t\t                return promiseRejectedWith(streamBrandCheckException$2('close'));\n\t\t            }\n\t\t            if (IsWritableStreamLocked(this)) {\n\t\t                return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n\t\t            }\n\t\t            if (WritableStreamCloseQueuedOrInFlight(this)) {\n\t\t                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n\t\t            }\n\t\t            return WritableStreamClose(this);\n\t\t        }\n\t\t        /**\n\t\t         * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n\t\t         * is locked, no other writer can be acquired until this one is released.\n\t\t         *\n\t\t         * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n\t\t         * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n\t\t         * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n\t\t         */\n\t\t        getWriter() {\n\t\t            if (!IsWritableStream(this)) {\n\t\t                throw streamBrandCheckException$2('getWriter');\n\t\t            }\n\t\t            return AcquireWritableStreamDefaultWriter(this);\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(WritableStream.prototype, {\n\t\t        abort: { enumerable: true },\n\t\t        close: { enumerable: true },\n\t\t        getWriter: { enumerable: true },\n\t\t        locked: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'WritableStream',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Abstract operations for the WritableStream.\n\t\t    function AcquireWritableStreamDefaultWriter(stream) {\n\t\t        return new WritableStreamDefaultWriter(stream);\n\t\t    }\n\t\t    // Throws if and only if startAlgorithm throws.\n\t\t    function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n\t\t        const stream = Object.create(WritableStream.prototype);\n\t\t        InitializeWritableStream(stream);\n\t\t        const controller = Object.create(WritableStreamDefaultController.prototype);\n\t\t        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n\t\t        return stream;\n\t\t    }\n\t\t    function InitializeWritableStream(stream) {\n\t\t        stream._state = 'writable';\n\t\t        // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n\t\t        // 'erroring' or 'errored'. May be set to an undefined value.\n\t\t        stream._storedError = undefined;\n\t\t        stream._writer = undefined;\n\t\t        // Initialize to undefined first because the constructor of the controller checks this\n\t\t        // variable to validate the caller.\n\t\t        stream._writableStreamController = undefined;\n\t\t        // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n\t\t        // producer without waiting for the queued writes to finish.\n\t\t        stream._writeRequests = new SimpleQueue();\n\t\t        // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n\t\t        // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n\t\t        stream._inFlightWriteRequest = undefined;\n\t\t        // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n\t\t        // has been detached.\n\t\t        stream._closeRequest = undefined;\n\t\t        // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n\t\t        // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n\t\t        stream._inFlightCloseRequest = undefined;\n\t\t        // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n\t\t        stream._pendingAbortRequest = undefined;\n\t\t        // The backpressure signal set by the controller.\n\t\t        stream._backpressure = false;\n\t\t    }\n\t\t    function IsWritableStream(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof WritableStream;\n\t\t    }\n\t\t    function IsWritableStreamLocked(stream) {\n\t\t        if (stream._writer === undefined) {\n\t\t            return false;\n\t\t        }\n\t\t        return true;\n\t\t    }\n\t\t    function WritableStreamAbort(stream, reason) {\n\t\t        var _a;\n\t\t        if (stream._state === 'closed' || stream._state === 'errored') {\n\t\t            return promiseResolvedWith(undefined);\n\t\t        }\n\t\t        stream._writableStreamController._abortReason = reason;\n\t\t        (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort();\n\t\t        // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n\t\t        // but it doesn't know that signaling abort runs author code that might have changed the state.\n\t\t        // Widen the type again by casting to WritableStreamState.\n\t\t        const state = stream._state;\n\t\t        if (state === 'closed' || state === 'errored') {\n\t\t            return promiseResolvedWith(undefined);\n\t\t        }\n\t\t        if (stream._pendingAbortRequest !== undefined) {\n\t\t            return stream._pendingAbortRequest._promise;\n\t\t        }\n\t\t        let wasAlreadyErroring = false;\n\t\t        if (state === 'erroring') {\n\t\t            wasAlreadyErroring = true;\n\t\t            // reason will not be used, so don't keep a reference to it.\n\t\t            reason = undefined;\n\t\t        }\n\t\t        const promise = newPromise((resolve, reject) => {\n\t\t            stream._pendingAbortRequest = {\n\t\t                _promise: undefined,\n\t\t                _resolve: resolve,\n\t\t                _reject: reject,\n\t\t                _reason: reason,\n\t\t                _wasAlreadyErroring: wasAlreadyErroring\n\t\t            };\n\t\t        });\n\t\t        stream._pendingAbortRequest._promise = promise;\n\t\t        if (!wasAlreadyErroring) {\n\t\t            WritableStreamStartErroring(stream, reason);\n\t\t        }\n\t\t        return promise;\n\t\t    }\n\t\t    function WritableStreamClose(stream) {\n\t\t        const state = stream._state;\n\t\t        if (state === 'closed' || state === 'errored') {\n\t\t            return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));\n\t\t        }\n\t\t        const promise = newPromise((resolve, reject) => {\n\t\t            const closeRequest = {\n\t\t                _resolve: resolve,\n\t\t                _reject: reject\n\t\t            };\n\t\t            stream._closeRequest = closeRequest;\n\t\t        });\n\t\t        const writer = stream._writer;\n\t\t        if (writer !== undefined && stream._backpressure && state === 'writable') {\n\t\t            defaultWriterReadyPromiseResolve(writer);\n\t\t        }\n\t\t        WritableStreamDefaultControllerClose(stream._writableStreamController);\n\t\t        return promise;\n\t\t    }\n\t\t    // WritableStream API exposed for controllers.\n\t\t    function WritableStreamAddWriteRequest(stream) {\n\t\t        const promise = newPromise((resolve, reject) => {\n\t\t            const writeRequest = {\n\t\t                _resolve: resolve,\n\t\t                _reject: reject\n\t\t            };\n\t\t            stream._writeRequests.push(writeRequest);\n\t\t        });\n\t\t        return promise;\n\t\t    }\n\t\t    function WritableStreamDealWithRejection(stream, error) {\n\t\t        const state = stream._state;\n\t\t        if (state === 'writable') {\n\t\t            WritableStreamStartErroring(stream, error);\n\t\t            return;\n\t\t        }\n\t\t        WritableStreamFinishErroring(stream);\n\t\t    }\n\t\t    function WritableStreamStartErroring(stream, reason) {\n\t\t        const controller = stream._writableStreamController;\n\t\t        stream._state = 'erroring';\n\t\t        stream._storedError = reason;\n\t\t        const writer = stream._writer;\n\t\t        if (writer !== undefined) {\n\t\t            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n\t\t        }\n\t\t        if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n\t\t            WritableStreamFinishErroring(stream);\n\t\t        }\n\t\t    }\n\t\t    function WritableStreamFinishErroring(stream) {\n\t\t        stream._state = 'errored';\n\t\t        stream._writableStreamController[ErrorSteps]();\n\t\t        const storedError = stream._storedError;\n\t\t        stream._writeRequests.forEach(writeRequest => {\n\t\t            writeRequest._reject(storedError);\n\t\t        });\n\t\t        stream._writeRequests = new SimpleQueue();\n\t\t        if (stream._pendingAbortRequest === undefined) {\n\t\t            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n\t\t            return;\n\t\t        }\n\t\t        const abortRequest = stream._pendingAbortRequest;\n\t\t        stream._pendingAbortRequest = undefined;\n\t\t        if (abortRequest._wasAlreadyErroring) {\n\t\t            abortRequest._reject(storedError);\n\t\t            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n\t\t            return;\n\t\t        }\n\t\t        const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n\t\t        uponPromise(promise, () => {\n\t\t            abortRequest._resolve();\n\t\t            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n\t\t        }, (reason) => {\n\t\t            abortRequest._reject(reason);\n\t\t            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n\t\t        });\n\t\t    }\n\t\t    function WritableStreamFinishInFlightWrite(stream) {\n\t\t        stream._inFlightWriteRequest._resolve(undefined);\n\t\t        stream._inFlightWriteRequest = undefined;\n\t\t    }\n\t\t    function WritableStreamFinishInFlightWriteWithError(stream, error) {\n\t\t        stream._inFlightWriteRequest._reject(error);\n\t\t        stream._inFlightWriteRequest = undefined;\n\t\t        WritableStreamDealWithRejection(stream, error);\n\t\t    }\n\t\t    function WritableStreamFinishInFlightClose(stream) {\n\t\t        stream._inFlightCloseRequest._resolve(undefined);\n\t\t        stream._inFlightCloseRequest = undefined;\n\t\t        const state = stream._state;\n\t\t        if (state === 'erroring') {\n\t\t            // The error was too late to do anything, so it is ignored.\n\t\t            stream._storedError = undefined;\n\t\t            if (stream._pendingAbortRequest !== undefined) {\n\t\t                stream._pendingAbortRequest._resolve();\n\t\t                stream._pendingAbortRequest = undefined;\n\t\t            }\n\t\t        }\n\t\t        stream._state = 'closed';\n\t\t        const writer = stream._writer;\n\t\t        if (writer !== undefined) {\n\t\t            defaultWriterClosedPromiseResolve(writer);\n\t\t        }\n\t\t    }\n\t\t    function WritableStreamFinishInFlightCloseWithError(stream, error) {\n\t\t        stream._inFlightCloseRequest._reject(error);\n\t\t        stream._inFlightCloseRequest = undefined;\n\t\t        // Never execute sink abort() after sink close().\n\t\t        if (stream._pendingAbortRequest !== undefined) {\n\t\t            stream._pendingAbortRequest._reject(error);\n\t\t            stream._pendingAbortRequest = undefined;\n\t\t        }\n\t\t        WritableStreamDealWithRejection(stream, error);\n\t\t    }\n\t\t    // TODO(ricea): Fix alphabetical order.\n\t\t    function WritableStreamCloseQueuedOrInFlight(stream) {\n\t\t        if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n\t\t            return false;\n\t\t        }\n\t\t        return true;\n\t\t    }\n\t\t    function WritableStreamHasOperationMarkedInFlight(stream) {\n\t\t        if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n\t\t            return false;\n\t\t        }\n\t\t        return true;\n\t\t    }\n\t\t    function WritableStreamMarkCloseRequestInFlight(stream) {\n\t\t        stream._inFlightCloseRequest = stream._closeRequest;\n\t\t        stream._closeRequest = undefined;\n\t\t    }\n\t\t    function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n\t\t        stream._inFlightWriteRequest = stream._writeRequests.shift();\n\t\t    }\n\t\t    function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n\t\t        if (stream._closeRequest !== undefined) {\n\t\t            stream._closeRequest._reject(stream._storedError);\n\t\t            stream._closeRequest = undefined;\n\t\t        }\n\t\t        const writer = stream._writer;\n\t\t        if (writer !== undefined) {\n\t\t            defaultWriterClosedPromiseReject(writer, stream._storedError);\n\t\t        }\n\t\t    }\n\t\t    function WritableStreamUpdateBackpressure(stream, backpressure) {\n\t\t        const writer = stream._writer;\n\t\t        if (writer !== undefined && backpressure !== stream._backpressure) {\n\t\t            if (backpressure) {\n\t\t                defaultWriterReadyPromiseReset(writer);\n\t\t            }\n\t\t            else {\n\t\t                defaultWriterReadyPromiseResolve(writer);\n\t\t            }\n\t\t        }\n\t\t        stream._backpressure = backpressure;\n\t\t    }\n\t\t    /**\n\t\t     * A default writer vended by a {@link WritableStream}.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class WritableStreamDefaultWriter {\n\t\t        constructor(stream) {\n\t\t            assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n\t\t            assertWritableStream(stream, 'First parameter');\n\t\t            if (IsWritableStreamLocked(stream)) {\n\t\t                throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n\t\t            }\n\t\t            this._ownerWritableStream = stream;\n\t\t            stream._writer = this;\n\t\t            const state = stream._state;\n\t\t            if (state === 'writable') {\n\t\t                if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n\t\t                    defaultWriterReadyPromiseInitialize(this);\n\t\t                }\n\t\t                else {\n\t\t                    defaultWriterReadyPromiseInitializeAsResolved(this);\n\t\t                }\n\t\t                defaultWriterClosedPromiseInitialize(this);\n\t\t            }\n\t\t            else if (state === 'erroring') {\n\t\t                defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n\t\t                defaultWriterClosedPromiseInitialize(this);\n\t\t            }\n\t\t            else if (state === 'closed') {\n\t\t                defaultWriterReadyPromiseInitializeAsResolved(this);\n\t\t                defaultWriterClosedPromiseInitializeAsResolved(this);\n\t\t            }\n\t\t            else {\n\t\t                const storedError = stream._storedError;\n\t\t                defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n\t\t                defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n\t\t            }\n\t\t        }\n\t\t        /**\n\t\t         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n\t\t         * the writer’s lock is released before the stream finishes closing.\n\t\t         */\n\t\t        get closed() {\n\t\t            if (!IsWritableStreamDefaultWriter(this)) {\n\t\t                return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n\t\t            }\n\t\t            return this._closedPromise;\n\t\t        }\n\t\t        /**\n\t\t         * Returns the desired size to fill the stream’s internal queue. It can be negative, if the queue is over-full.\n\t\t         * A producer can use this information to determine the right amount of data to write.\n\t\t         *\n\t\t         * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n\t\t         * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n\t\t         * the writer’s lock is released.\n\t\t         */\n\t\t        get desiredSize() {\n\t\t            if (!IsWritableStreamDefaultWriter(this)) {\n\t\t                throw defaultWriterBrandCheckException('desiredSize');\n\t\t            }\n\t\t            if (this._ownerWritableStream === undefined) {\n\t\t                throw defaultWriterLockException('desiredSize');\n\t\t            }\n\t\t            return WritableStreamDefaultWriterGetDesiredSize(this);\n\t\t        }\n\t\t        /**\n\t\t         * Returns a promise that will be fulfilled when the desired size to fill the stream’s internal queue transitions\n\t\t         * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n\t\t         * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n\t\t         *\n\t\t         * If the stream becomes errored or aborted, or the writer’s lock is released, the returned promise will become\n\t\t         * rejected.\n\t\t         */\n\t\t        get ready() {\n\t\t            if (!IsWritableStreamDefaultWriter(this)) {\n\t\t                return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n\t\t            }\n\t\t            return this._readyPromise;\n\t\t        }\n\t\t        /**\n\t\t         * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n\t\t         */\n\t\t        abort(reason = undefined) {\n\t\t            if (!IsWritableStreamDefaultWriter(this)) {\n\t\t                return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n\t\t            }\n\t\t            if (this._ownerWritableStream === undefined) {\n\t\t                return promiseRejectedWith(defaultWriterLockException('abort'));\n\t\t            }\n\t\t            return WritableStreamDefaultWriterAbort(this, reason);\n\t\t        }\n\t\t        /**\n\t\t         * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n\t\t         */\n\t\t        close() {\n\t\t            if (!IsWritableStreamDefaultWriter(this)) {\n\t\t                return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n\t\t            }\n\t\t            const stream = this._ownerWritableStream;\n\t\t            if (stream === undefined) {\n\t\t                return promiseRejectedWith(defaultWriterLockException('close'));\n\t\t            }\n\t\t            if (WritableStreamCloseQueuedOrInFlight(stream)) {\n\t\t                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n\t\t            }\n\t\t            return WritableStreamDefaultWriterClose(this);\n\t\t        }\n\t\t        /**\n\t\t         * Releases the writer’s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n\t\t         * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n\t\t         * now on; otherwise, the writer will appear closed.\n\t\t         *\n\t\t         * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n\t\t         * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n\t\t         * It’s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n\t\t         * other producers from writing in an interleaved manner.\n\t\t         */\n\t\t        releaseLock() {\n\t\t            if (!IsWritableStreamDefaultWriter(this)) {\n\t\t                throw defaultWriterBrandCheckException('releaseLock');\n\t\t            }\n\t\t            const stream = this._ownerWritableStream;\n\t\t            if (stream === undefined) {\n\t\t                return;\n\t\t            }\n\t\t            WritableStreamDefaultWriterRelease(this);\n\t\t        }\n\t\t        write(chunk = undefined) {\n\t\t            if (!IsWritableStreamDefaultWriter(this)) {\n\t\t                return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n\t\t            }\n\t\t            if (this._ownerWritableStream === undefined) {\n\t\t                return promiseRejectedWith(defaultWriterLockException('write to'));\n\t\t            }\n\t\t            return WritableStreamDefaultWriterWrite(this, chunk);\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(WritableStreamDefaultWriter.prototype, {\n\t\t        abort: { enumerable: true },\n\t\t        close: { enumerable: true },\n\t\t        releaseLock: { enumerable: true },\n\t\t        write: { enumerable: true },\n\t\t        closed: { enumerable: true },\n\t\t        desiredSize: { enumerable: true },\n\t\t        ready: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'WritableStreamDefaultWriter',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Abstract operations for the WritableStreamDefaultWriter.\n\t\t    function IsWritableStreamDefaultWriter(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof WritableStreamDefaultWriter;\n\t\t    }\n\t\t    // A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n\t\t    function WritableStreamDefaultWriterAbort(writer, reason) {\n\t\t        const stream = writer._ownerWritableStream;\n\t\t        return WritableStreamAbort(stream, reason);\n\t\t    }\n\t\t    function WritableStreamDefaultWriterClose(writer) {\n\t\t        const stream = writer._ownerWritableStream;\n\t\t        return WritableStreamClose(stream);\n\t\t    }\n\t\t    function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n\t\t        const stream = writer._ownerWritableStream;\n\t\t        const state = stream._state;\n\t\t        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n\t\t            return promiseResolvedWith(undefined);\n\t\t        }\n\t\t        if (state === 'errored') {\n\t\t            return promiseRejectedWith(stream._storedError);\n\t\t        }\n\t\t        return WritableStreamDefaultWriterClose(writer);\n\t\t    }\n\t\t    function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n\t\t        if (writer._closedPromiseState === 'pending') {\n\t\t            defaultWriterClosedPromiseReject(writer, error);\n\t\t        }\n\t\t        else {\n\t\t            defaultWriterClosedPromiseResetToRejected(writer, error);\n\t\t        }\n\t\t    }\n\t\t    function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n\t\t        if (writer._readyPromiseState === 'pending') {\n\t\t            defaultWriterReadyPromiseReject(writer, error);\n\t\t        }\n\t\t        else {\n\t\t            defaultWriterReadyPromiseResetToRejected(writer, error);\n\t\t        }\n\t\t    }\n\t\t    function WritableStreamDefaultWriterGetDesiredSize(writer) {\n\t\t        const stream = writer._ownerWritableStream;\n\t\t        const state = stream._state;\n\t\t        if (state === 'errored' || state === 'erroring') {\n\t\t            return null;\n\t\t        }\n\t\t        if (state === 'closed') {\n\t\t            return 0;\n\t\t        }\n\t\t        return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n\t\t    }\n\t\t    function WritableStreamDefaultWriterRelease(writer) {\n\t\t        const stream = writer._ownerWritableStream;\n\t\t        const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);\n\t\t        WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n\t\t        // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n\t\t        // rejected until afterwards. This means that simply testing state will not work.\n\t\t        WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n\t\t        stream._writer = undefined;\n\t\t        writer._ownerWritableStream = undefined;\n\t\t    }\n\t\t    function WritableStreamDefaultWriterWrite(writer, chunk) {\n\t\t        const stream = writer._ownerWritableStream;\n\t\t        const controller = stream._writableStreamController;\n\t\t        const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n\t\t        if (stream !== writer._ownerWritableStream) {\n\t\t            return promiseRejectedWith(defaultWriterLockException('write to'));\n\t\t        }\n\t\t        const state = stream._state;\n\t\t        if (state === 'errored') {\n\t\t            return promiseRejectedWith(stream._storedError);\n\t\t        }\n\t\t        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n\t\t            return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n\t\t        }\n\t\t        if (state === 'erroring') {\n\t\t            return promiseRejectedWith(stream._storedError);\n\t\t        }\n\t\t        const promise = WritableStreamAddWriteRequest(stream);\n\t\t        WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n\t\t        return promise;\n\t\t    }\n\t\t    const closeSentinel = {};\n\t\t    /**\n\t\t     * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class WritableStreamDefaultController {\n\t\t        constructor() {\n\t\t            throw new TypeError('Illegal constructor');\n\t\t        }\n\t\t        /**\n\t\t         * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n\t\t         *\n\t\t         * @deprecated\n\t\t         *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.\n\t\t         *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.\n\t\t         */\n\t\t        get abortReason() {\n\t\t            if (!IsWritableStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException$2('abortReason');\n\t\t            }\n\t\t            return this._abortReason;\n\t\t        }\n\t\t        /**\n\t\t         * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n\t\t         */\n\t\t        get signal() {\n\t\t            if (!IsWritableStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException$2('signal');\n\t\t            }\n\t\t            if (this._abortController === undefined) {\n\t\t                // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n\t\t                // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n\t\t                // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n\t\t                throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n\t\t            }\n\t\t            return this._abortController.signal;\n\t\t        }\n\t\t        /**\n\t\t         * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n\t\t         *\n\t\t         * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n\t\t         * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n\t\t         * normal lifecycle of interactions with the underlying sink.\n\t\t         */\n\t\t        error(e = undefined) {\n\t\t            if (!IsWritableStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException$2('error');\n\t\t            }\n\t\t            const state = this._controlledWritableStream._state;\n\t\t            if (state !== 'writable') {\n\t\t                // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n\t\t                // just treat it as a no-op.\n\t\t                return;\n\t\t            }\n\t\t            WritableStreamDefaultControllerError(this, e);\n\t\t        }\n\t\t        /** @internal */\n\t\t        [AbortSteps](reason) {\n\t\t            const result = this._abortAlgorithm(reason);\n\t\t            WritableStreamDefaultControllerClearAlgorithms(this);\n\t\t            return result;\n\t\t        }\n\t\t        /** @internal */\n\t\t        [ErrorSteps]() {\n\t\t            ResetQueue(this);\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(WritableStreamDefaultController.prototype, {\n\t\t        abortReason: { enumerable: true },\n\t\t        signal: { enumerable: true },\n\t\t        error: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'WritableStreamDefaultController',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Abstract operations implementing interface required by the WritableStream.\n\t\t    function IsWritableStreamDefaultController(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof WritableStreamDefaultController;\n\t\t    }\n\t\t    function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n\t\t        controller._controlledWritableStream = stream;\n\t\t        stream._writableStreamController = controller;\n\t\t        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n\t\t        controller._queue = undefined;\n\t\t        controller._queueTotalSize = undefined;\n\t\t        ResetQueue(controller);\n\t\t        controller._abortReason = undefined;\n\t\t        controller._abortController = createAbortController();\n\t\t        controller._started = false;\n\t\t        controller._strategySizeAlgorithm = sizeAlgorithm;\n\t\t        controller._strategyHWM = highWaterMark;\n\t\t        controller._writeAlgorithm = writeAlgorithm;\n\t\t        controller._closeAlgorithm = closeAlgorithm;\n\t\t        controller._abortAlgorithm = abortAlgorithm;\n\t\t        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n\t\t        WritableStreamUpdateBackpressure(stream, backpressure);\n\t\t        const startResult = startAlgorithm();\n\t\t        const startPromise = promiseResolvedWith(startResult);\n\t\t        uponPromise(startPromise, () => {\n\t\t            controller._started = true;\n\t\t            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n\t\t        }, r => {\n\t\t            controller._started = true;\n\t\t            WritableStreamDealWithRejection(stream, r);\n\t\t        });\n\t\t    }\n\t\t    function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n\t\t        const controller = Object.create(WritableStreamDefaultController.prototype);\n\t\t        let startAlgorithm = () => undefined;\n\t\t        let writeAlgorithm = () => promiseResolvedWith(undefined);\n\t\t        let closeAlgorithm = () => promiseResolvedWith(undefined);\n\t\t        let abortAlgorithm = () => promiseResolvedWith(undefined);\n\t\t        if (underlyingSink.start !== undefined) {\n\t\t            startAlgorithm = () => underlyingSink.start(controller);\n\t\t        }\n\t\t        if (underlyingSink.write !== undefined) {\n\t\t            writeAlgorithm = chunk => underlyingSink.write(chunk, controller);\n\t\t        }\n\t\t        if (underlyingSink.close !== undefined) {\n\t\t            closeAlgorithm = () => underlyingSink.close();\n\t\t        }\n\t\t        if (underlyingSink.abort !== undefined) {\n\t\t            abortAlgorithm = reason => underlyingSink.abort(reason);\n\t\t        }\n\t\t        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n\t\t    }\n\t\t    // ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\n\t\t    function WritableStreamDefaultControllerClearAlgorithms(controller) {\n\t\t        controller._writeAlgorithm = undefined;\n\t\t        controller._closeAlgorithm = undefined;\n\t\t        controller._abortAlgorithm = undefined;\n\t\t        controller._strategySizeAlgorithm = undefined;\n\t\t    }\n\t\t    function WritableStreamDefaultControllerClose(controller) {\n\t\t        EnqueueValueWithSize(controller, closeSentinel, 0);\n\t\t        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n\t\t    }\n\t\t    function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n\t\t        try {\n\t\t            return controller._strategySizeAlgorithm(chunk);\n\t\t        }\n\t\t        catch (chunkSizeE) {\n\t\t            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n\t\t            return 1;\n\t\t        }\n\t\t    }\n\t\t    function WritableStreamDefaultControllerGetDesiredSize(controller) {\n\t\t        return controller._strategyHWM - controller._queueTotalSize;\n\t\t    }\n\t\t    function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n\t\t        try {\n\t\t            EnqueueValueWithSize(controller, chunk, chunkSize);\n\t\t        }\n\t\t        catch (enqueueE) {\n\t\t            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n\t\t            return;\n\t\t        }\n\t\t        const stream = controller._controlledWritableStream;\n\t\t        if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n\t\t            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n\t\t            WritableStreamUpdateBackpressure(stream, backpressure);\n\t\t        }\n\t\t        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n\t\t    }\n\t\t    // Abstract operations for the WritableStreamDefaultController.\n\t\t    function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n\t\t        const stream = controller._controlledWritableStream;\n\t\t        if (!controller._started) {\n\t\t            return;\n\t\t        }\n\t\t        if (stream._inFlightWriteRequest !== undefined) {\n\t\t            return;\n\t\t        }\n\t\t        const state = stream._state;\n\t\t        if (state === 'erroring') {\n\t\t            WritableStreamFinishErroring(stream);\n\t\t            return;\n\t\t        }\n\t\t        if (controller._queue.length === 0) {\n\t\t            return;\n\t\t        }\n\t\t        const value = PeekQueueValue(controller);\n\t\t        if (value === closeSentinel) {\n\t\t            WritableStreamDefaultControllerProcessClose(controller);\n\t\t        }\n\t\t        else {\n\t\t            WritableStreamDefaultControllerProcessWrite(controller, value);\n\t\t        }\n\t\t    }\n\t\t    function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n\t\t        if (controller._controlledWritableStream._state === 'writable') {\n\t\t            WritableStreamDefaultControllerError(controller, error);\n\t\t        }\n\t\t    }\n\t\t    function WritableStreamDefaultControllerProcessClose(controller) {\n\t\t        const stream = controller._controlledWritableStream;\n\t\t        WritableStreamMarkCloseRequestInFlight(stream);\n\t\t        DequeueValue(controller);\n\t\t        const sinkClosePromise = controller._closeAlgorithm();\n\t\t        WritableStreamDefaultControllerClearAlgorithms(controller);\n\t\t        uponPromise(sinkClosePromise, () => {\n\t\t            WritableStreamFinishInFlightClose(stream);\n\t\t        }, reason => {\n\t\t            WritableStreamFinishInFlightCloseWithError(stream, reason);\n\t\t        });\n\t\t    }\n\t\t    function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n\t\t        const stream = controller._controlledWritableStream;\n\t\t        WritableStreamMarkFirstWriteRequestInFlight(stream);\n\t\t        const sinkWritePromise = controller._writeAlgorithm(chunk);\n\t\t        uponPromise(sinkWritePromise, () => {\n\t\t            WritableStreamFinishInFlightWrite(stream);\n\t\t            const state = stream._state;\n\t\t            DequeueValue(controller);\n\t\t            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n\t\t                const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n\t\t                WritableStreamUpdateBackpressure(stream, backpressure);\n\t\t            }\n\t\t            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n\t\t        }, reason => {\n\t\t            if (stream._state === 'writable') {\n\t\t                WritableStreamDefaultControllerClearAlgorithms(controller);\n\t\t            }\n\t\t            WritableStreamFinishInFlightWriteWithError(stream, reason);\n\t\t        });\n\t\t    }\n\t\t    function WritableStreamDefaultControllerGetBackpressure(controller) {\n\t\t        const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n\t\t        return desiredSize <= 0;\n\t\t    }\n\t\t    // A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n\t\t    function WritableStreamDefaultControllerError(controller, error) {\n\t\t        const stream = controller._controlledWritableStream;\n\t\t        WritableStreamDefaultControllerClearAlgorithms(controller);\n\t\t        WritableStreamStartErroring(stream, error);\n\t\t    }\n\t\t    // Helper functions for the WritableStream.\n\t\t    function streamBrandCheckException$2(name) {\n\t\t        return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n\t\t    }\n\t\t    // Helper functions for the WritableStreamDefaultController.\n\t\t    function defaultControllerBrandCheckException$2(name) {\n\t\t        return new TypeError(`WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);\n\t\t    }\n\t\t    // Helper functions for the WritableStreamDefaultWriter.\n\t\t    function defaultWriterBrandCheckException(name) {\n\t\t        return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n\t\t    }\n\t\t    function defaultWriterLockException(name) {\n\t\t        return new TypeError('Cannot ' + name + ' a stream using a released writer');\n\t\t    }\n\t\t    function defaultWriterClosedPromiseInitialize(writer) {\n\t\t        writer._closedPromise = newPromise((resolve, reject) => {\n\t\t            writer._closedPromise_resolve = resolve;\n\t\t            writer._closedPromise_reject = reject;\n\t\t            writer._closedPromiseState = 'pending';\n\t\t        });\n\t\t    }\n\t\t    function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n\t\t        defaultWriterClosedPromiseInitialize(writer);\n\t\t        defaultWriterClosedPromiseReject(writer, reason);\n\t\t    }\n\t\t    function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n\t\t        defaultWriterClosedPromiseInitialize(writer);\n\t\t        defaultWriterClosedPromiseResolve(writer);\n\t\t    }\n\t\t    function defaultWriterClosedPromiseReject(writer, reason) {\n\t\t        if (writer._closedPromise_reject === undefined) {\n\t\t            return;\n\t\t        }\n\t\t        setPromiseIsHandledToTrue(writer._closedPromise);\n\t\t        writer._closedPromise_reject(reason);\n\t\t        writer._closedPromise_resolve = undefined;\n\t\t        writer._closedPromise_reject = undefined;\n\t\t        writer._closedPromiseState = 'rejected';\n\t\t    }\n\t\t    function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n\t\t        defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n\t\t    }\n\t\t    function defaultWriterClosedPromiseResolve(writer) {\n\t\t        if (writer._closedPromise_resolve === undefined) {\n\t\t            return;\n\t\t        }\n\t\t        writer._closedPromise_resolve(undefined);\n\t\t        writer._closedPromise_resolve = undefined;\n\t\t        writer._closedPromise_reject = undefined;\n\t\t        writer._closedPromiseState = 'resolved';\n\t\t    }\n\t\t    function defaultWriterReadyPromiseInitialize(writer) {\n\t\t        writer._readyPromise = newPromise((resolve, reject) => {\n\t\t            writer._readyPromise_resolve = resolve;\n\t\t            writer._readyPromise_reject = reject;\n\t\t        });\n\t\t        writer._readyPromiseState = 'pending';\n\t\t    }\n\t\t    function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n\t\t        defaultWriterReadyPromiseInitialize(writer);\n\t\t        defaultWriterReadyPromiseReject(writer, reason);\n\t\t    }\n\t\t    function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n\t\t        defaultWriterReadyPromiseInitialize(writer);\n\t\t        defaultWriterReadyPromiseResolve(writer);\n\t\t    }\n\t\t    function defaultWriterReadyPromiseReject(writer, reason) {\n\t\t        if (writer._readyPromise_reject === undefined) {\n\t\t            return;\n\t\t        }\n\t\t        setPromiseIsHandledToTrue(writer._readyPromise);\n\t\t        writer._readyPromise_reject(reason);\n\t\t        writer._readyPromise_resolve = undefined;\n\t\t        writer._readyPromise_reject = undefined;\n\t\t        writer._readyPromiseState = 'rejected';\n\t\t    }\n\t\t    function defaultWriterReadyPromiseReset(writer) {\n\t\t        defaultWriterReadyPromiseInitialize(writer);\n\t\t    }\n\t\t    function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n\t\t        defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n\t\t    }\n\t\t    function defaultWriterReadyPromiseResolve(writer) {\n\t\t        if (writer._readyPromise_resolve === undefined) {\n\t\t            return;\n\t\t        }\n\t\t        writer._readyPromise_resolve(undefined);\n\t\t        writer._readyPromise_resolve = undefined;\n\t\t        writer._readyPromise_reject = undefined;\n\t\t        writer._readyPromiseState = 'fulfilled';\n\t\t    }\n\n\t\t    /// <reference lib=\"dom\" />\n\t\t    const NativeDOMException = typeof DOMException !== 'undefined' ? DOMException : undefined;\n\n\t\t    /// <reference types=\"node\" />\n\t\t    function isDOMExceptionConstructor(ctor) {\n\t\t        if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n\t\t            return false;\n\t\t        }\n\t\t        try {\n\t\t            new ctor();\n\t\t            return true;\n\t\t        }\n\t\t        catch (_a) {\n\t\t            return false;\n\t\t        }\n\t\t    }\n\t\t    function createDOMExceptionPolyfill() {\n\t\t        // eslint-disable-next-line no-shadow\n\t\t        const ctor = function DOMException(message, name) {\n\t\t            this.message = message || '';\n\t\t            this.name = name || 'Error';\n\t\t            if (Error.captureStackTrace) {\n\t\t                Error.captureStackTrace(this, this.constructor);\n\t\t            }\n\t\t        };\n\t\t        ctor.prototype = Object.create(Error.prototype);\n\t\t        Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n\t\t        return ctor;\n\t\t    }\n\t\t    // eslint-disable-next-line no-redeclare\n\t\t    const DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();\n\n\t\t    function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n\t\t        const reader = AcquireReadableStreamDefaultReader(source);\n\t\t        const writer = AcquireWritableStreamDefaultWriter(dest);\n\t\t        source._disturbed = true;\n\t\t        let shuttingDown = false;\n\t\t        // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n\t\t        let currentWrite = promiseResolvedWith(undefined);\n\t\t        return newPromise((resolve, reject) => {\n\t\t            let abortAlgorithm;\n\t\t            if (signal !== undefined) {\n\t\t                abortAlgorithm = () => {\n\t\t                    const error = new DOMException$1('Aborted', 'AbortError');\n\t\t                    const actions = [];\n\t\t                    if (!preventAbort) {\n\t\t                        actions.push(() => {\n\t\t                            if (dest._state === 'writable') {\n\t\t                                return WritableStreamAbort(dest, error);\n\t\t                            }\n\t\t                            return promiseResolvedWith(undefined);\n\t\t                        });\n\t\t                    }\n\t\t                    if (!preventCancel) {\n\t\t                        actions.push(() => {\n\t\t                            if (source._state === 'readable') {\n\t\t                                return ReadableStreamCancel(source, error);\n\t\t                            }\n\t\t                            return promiseResolvedWith(undefined);\n\t\t                        });\n\t\t                    }\n\t\t                    shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);\n\t\t                };\n\t\t                if (signal.aborted) {\n\t\t                    abortAlgorithm();\n\t\t                    return;\n\t\t                }\n\t\t                signal.addEventListener('abort', abortAlgorithm);\n\t\t            }\n\t\t            // Using reader and writer, read all chunks from this and write them to dest\n\t\t            // - Backpressure must be enforced\n\t\t            // - Shutdown must stop all activity\n\t\t            function pipeLoop() {\n\t\t                return newPromise((resolveLoop, rejectLoop) => {\n\t\t                    function next(done) {\n\t\t                        if (done) {\n\t\t                            resolveLoop();\n\t\t                        }\n\t\t                        else {\n\t\t                            // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n\t\t                            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n\t\t                            PerformPromiseThen(pipeStep(), next, rejectLoop);\n\t\t                        }\n\t\t                    }\n\t\t                    next(false);\n\t\t                });\n\t\t            }\n\t\t            function pipeStep() {\n\t\t                if (shuttingDown) {\n\t\t                    return promiseResolvedWith(true);\n\t\t                }\n\t\t                return PerformPromiseThen(writer._readyPromise, () => {\n\t\t                    return newPromise((resolveRead, rejectRead) => {\n\t\t                        ReadableStreamDefaultReaderRead(reader, {\n\t\t                            _chunkSteps: chunk => {\n\t\t                                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n\t\t                                resolveRead(false);\n\t\t                            },\n\t\t                            _closeSteps: () => resolveRead(true),\n\t\t                            _errorSteps: rejectRead\n\t\t                        });\n\t\t                    });\n\t\t                });\n\t\t            }\n\t\t            // Errors must be propagated forward\n\t\t            isOrBecomesErrored(source, reader._closedPromise, storedError => {\n\t\t                if (!preventAbort) {\n\t\t                    shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n\t\t                }\n\t\t                else {\n\t\t                    shutdown(true, storedError);\n\t\t                }\n\t\t            });\n\t\t            // Errors must be propagated backward\n\t\t            isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n\t\t                if (!preventCancel) {\n\t\t                    shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n\t\t                }\n\t\t                else {\n\t\t                    shutdown(true, storedError);\n\t\t                }\n\t\t            });\n\t\t            // Closing must be propagated forward\n\t\t            isOrBecomesClosed(source, reader._closedPromise, () => {\n\t\t                if (!preventClose) {\n\t\t                    shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n\t\t                }\n\t\t                else {\n\t\t                    shutdown();\n\t\t                }\n\t\t            });\n\t\t            // Closing must be propagated backward\n\t\t            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n\t\t                const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n\t\t                if (!preventCancel) {\n\t\t                    shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n\t\t                }\n\t\t                else {\n\t\t                    shutdown(true, destClosed);\n\t\t                }\n\t\t            }\n\t\t            setPromiseIsHandledToTrue(pipeLoop());\n\t\t            function waitForWritesToFinish() {\n\t\t                // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n\t\t                // for that too.\n\t\t                const oldCurrentWrite = currentWrite;\n\t\t                return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined);\n\t\t            }\n\t\t            function isOrBecomesErrored(stream, promise, action) {\n\t\t                if (stream._state === 'errored') {\n\t\t                    action(stream._storedError);\n\t\t                }\n\t\t                else {\n\t\t                    uponRejection(promise, action);\n\t\t                }\n\t\t            }\n\t\t            function isOrBecomesClosed(stream, promise, action) {\n\t\t                if (stream._state === 'closed') {\n\t\t                    action();\n\t\t                }\n\t\t                else {\n\t\t                    uponFulfillment(promise, action);\n\t\t                }\n\t\t            }\n\t\t            function shutdownWithAction(action, originalIsError, originalError) {\n\t\t                if (shuttingDown) {\n\t\t                    return;\n\t\t                }\n\t\t                shuttingDown = true;\n\t\t                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n\t\t                    uponFulfillment(waitForWritesToFinish(), doTheRest);\n\t\t                }\n\t\t                else {\n\t\t                    doTheRest();\n\t\t                }\n\t\t                function doTheRest() {\n\t\t                    uponPromise(action(), () => finalize(originalIsError, originalError), newError => finalize(true, newError));\n\t\t                }\n\t\t            }\n\t\t            function shutdown(isError, error) {\n\t\t                if (shuttingDown) {\n\t\t                    return;\n\t\t                }\n\t\t                shuttingDown = true;\n\t\t                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n\t\t                    uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n\t\t                }\n\t\t                else {\n\t\t                    finalize(isError, error);\n\t\t                }\n\t\t            }\n\t\t            function finalize(isError, error) {\n\t\t                WritableStreamDefaultWriterRelease(writer);\n\t\t                ReadableStreamReaderGenericRelease(reader);\n\t\t                if (signal !== undefined) {\n\t\t                    signal.removeEventListener('abort', abortAlgorithm);\n\t\t                }\n\t\t                if (isError) {\n\t\t                    reject(error);\n\t\t                }\n\t\t                else {\n\t\t                    resolve(undefined);\n\t\t                }\n\t\t            }\n\t\t        });\n\t\t    }\n\n\t\t    /**\n\t\t     * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class ReadableStreamDefaultController {\n\t\t        constructor() {\n\t\t            throw new TypeError('Illegal constructor');\n\t\t        }\n\t\t        /**\n\t\t         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n\t\t         * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n\t\t         */\n\t\t        get desiredSize() {\n\t\t            if (!IsReadableStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException$1('desiredSize');\n\t\t            }\n\t\t            return ReadableStreamDefaultControllerGetDesiredSize(this);\n\t\t        }\n\t\t        /**\n\t\t         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n\t\t         * the stream, but once those are read, the stream will become closed.\n\t\t         */\n\t\t        close() {\n\t\t            if (!IsReadableStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException$1('close');\n\t\t            }\n\t\t            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n\t\t                throw new TypeError('The stream is not in a state that permits close');\n\t\t            }\n\t\t            ReadableStreamDefaultControllerClose(this);\n\t\t        }\n\t\t        enqueue(chunk = undefined) {\n\t\t            if (!IsReadableStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException$1('enqueue');\n\t\t            }\n\t\t            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n\t\t                throw new TypeError('The stream is not in a state that permits enqueue');\n\t\t            }\n\t\t            return ReadableStreamDefaultControllerEnqueue(this, chunk);\n\t\t        }\n\t\t        /**\n\t\t         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n\t\t         */\n\t\t        error(e = undefined) {\n\t\t            if (!IsReadableStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException$1('error');\n\t\t            }\n\t\t            ReadableStreamDefaultControllerError(this, e);\n\t\t        }\n\t\t        /** @internal */\n\t\t        [CancelSteps](reason) {\n\t\t            ResetQueue(this);\n\t\t            const result = this._cancelAlgorithm(reason);\n\t\t            ReadableStreamDefaultControllerClearAlgorithms(this);\n\t\t            return result;\n\t\t        }\n\t\t        /** @internal */\n\t\t        [PullSteps](readRequest) {\n\t\t            const stream = this._controlledReadableStream;\n\t\t            if (this._queue.length > 0) {\n\t\t                const chunk = DequeueValue(this);\n\t\t                if (this._closeRequested && this._queue.length === 0) {\n\t\t                    ReadableStreamDefaultControllerClearAlgorithms(this);\n\t\t                    ReadableStreamClose(stream);\n\t\t                }\n\t\t                else {\n\t\t                    ReadableStreamDefaultControllerCallPullIfNeeded(this);\n\t\t                }\n\t\t                readRequest._chunkSteps(chunk);\n\t\t            }\n\t\t            else {\n\t\t                ReadableStreamAddReadRequest(stream, readRequest);\n\t\t                ReadableStreamDefaultControllerCallPullIfNeeded(this);\n\t\t            }\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(ReadableStreamDefaultController.prototype, {\n\t\t        close: { enumerable: true },\n\t\t        enqueue: { enumerable: true },\n\t\t        error: { enumerable: true },\n\t\t        desiredSize: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'ReadableStreamDefaultController',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Abstract operations for the ReadableStreamDefaultController.\n\t\t    function IsReadableStreamDefaultController(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof ReadableStreamDefaultController;\n\t\t    }\n\t\t    function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n\t\t        const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n\t\t        if (!shouldPull) {\n\t\t            return;\n\t\t        }\n\t\t        if (controller._pulling) {\n\t\t            controller._pullAgain = true;\n\t\t            return;\n\t\t        }\n\t\t        controller._pulling = true;\n\t\t        const pullPromise = controller._pullAlgorithm();\n\t\t        uponPromise(pullPromise, () => {\n\t\t            controller._pulling = false;\n\t\t            if (controller._pullAgain) {\n\t\t                controller._pullAgain = false;\n\t\t                ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n\t\t            }\n\t\t        }, e => {\n\t\t            ReadableStreamDefaultControllerError(controller, e);\n\t\t        });\n\t\t    }\n\t\t    function ReadableStreamDefaultControllerShouldCallPull(controller) {\n\t\t        const stream = controller._controlledReadableStream;\n\t\t        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!controller._started) {\n\t\t            return false;\n\t\t        }\n\t\t        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n\t\t            return true;\n\t\t        }\n\t\t        const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n\t\t        if (desiredSize > 0) {\n\t\t            return true;\n\t\t        }\n\t\t        return false;\n\t\t    }\n\t\t    function ReadableStreamDefaultControllerClearAlgorithms(controller) {\n\t\t        controller._pullAlgorithm = undefined;\n\t\t        controller._cancelAlgorithm = undefined;\n\t\t        controller._strategySizeAlgorithm = undefined;\n\t\t    }\n\t\t    // A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n\t\t    function ReadableStreamDefaultControllerClose(controller) {\n\t\t        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n\t\t            return;\n\t\t        }\n\t\t        const stream = controller._controlledReadableStream;\n\t\t        controller._closeRequested = true;\n\t\t        if (controller._queue.length === 0) {\n\t\t            ReadableStreamDefaultControllerClearAlgorithms(controller);\n\t\t            ReadableStreamClose(stream);\n\t\t        }\n\t\t    }\n\t\t    function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n\t\t        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n\t\t            return;\n\t\t        }\n\t\t        const stream = controller._controlledReadableStream;\n\t\t        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n\t\t            ReadableStreamFulfillReadRequest(stream, chunk, false);\n\t\t        }\n\t\t        else {\n\t\t            let chunkSize;\n\t\t            try {\n\t\t                chunkSize = controller._strategySizeAlgorithm(chunk);\n\t\t            }\n\t\t            catch (chunkSizeE) {\n\t\t                ReadableStreamDefaultControllerError(controller, chunkSizeE);\n\t\t                throw chunkSizeE;\n\t\t            }\n\t\t            try {\n\t\t                EnqueueValueWithSize(controller, chunk, chunkSize);\n\t\t            }\n\t\t            catch (enqueueE) {\n\t\t                ReadableStreamDefaultControllerError(controller, enqueueE);\n\t\t                throw enqueueE;\n\t\t            }\n\t\t        }\n\t\t        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n\t\t    }\n\t\t    function ReadableStreamDefaultControllerError(controller, e) {\n\t\t        const stream = controller._controlledReadableStream;\n\t\t        if (stream._state !== 'readable') {\n\t\t            return;\n\t\t        }\n\t\t        ResetQueue(controller);\n\t\t        ReadableStreamDefaultControllerClearAlgorithms(controller);\n\t\t        ReadableStreamError(stream, e);\n\t\t    }\n\t\t    function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n\t\t        const state = controller._controlledReadableStream._state;\n\t\t        if (state === 'errored') {\n\t\t            return null;\n\t\t        }\n\t\t        if (state === 'closed') {\n\t\t            return 0;\n\t\t        }\n\t\t        return controller._strategyHWM - controller._queueTotalSize;\n\t\t    }\n\t\t    // This is used in the implementation of TransformStream.\n\t\t    function ReadableStreamDefaultControllerHasBackpressure(controller) {\n\t\t        if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n\t\t            return false;\n\t\t        }\n\t\t        return true;\n\t\t    }\n\t\t    function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n\t\t        const state = controller._controlledReadableStream._state;\n\t\t        if (!controller._closeRequested && state === 'readable') {\n\t\t            return true;\n\t\t        }\n\t\t        return false;\n\t\t    }\n\t\t    function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n\t\t        controller._controlledReadableStream = stream;\n\t\t        controller._queue = undefined;\n\t\t        controller._queueTotalSize = undefined;\n\t\t        ResetQueue(controller);\n\t\t        controller._started = false;\n\t\t        controller._closeRequested = false;\n\t\t        controller._pullAgain = false;\n\t\t        controller._pulling = false;\n\t\t        controller._strategySizeAlgorithm = sizeAlgorithm;\n\t\t        controller._strategyHWM = highWaterMark;\n\t\t        controller._pullAlgorithm = pullAlgorithm;\n\t\t        controller._cancelAlgorithm = cancelAlgorithm;\n\t\t        stream._readableStreamController = controller;\n\t\t        const startResult = startAlgorithm();\n\t\t        uponPromise(promiseResolvedWith(startResult), () => {\n\t\t            controller._started = true;\n\t\t            ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n\t\t        }, r => {\n\t\t            ReadableStreamDefaultControllerError(controller, r);\n\t\t        });\n\t\t    }\n\t\t    function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {\n\t\t        const controller = Object.create(ReadableStreamDefaultController.prototype);\n\t\t        let startAlgorithm = () => undefined;\n\t\t        let pullAlgorithm = () => promiseResolvedWith(undefined);\n\t\t        let cancelAlgorithm = () => promiseResolvedWith(undefined);\n\t\t        if (underlyingSource.start !== undefined) {\n\t\t            startAlgorithm = () => underlyingSource.start(controller);\n\t\t        }\n\t\t        if (underlyingSource.pull !== undefined) {\n\t\t            pullAlgorithm = () => underlyingSource.pull(controller);\n\t\t        }\n\t\t        if (underlyingSource.cancel !== undefined) {\n\t\t            cancelAlgorithm = reason => underlyingSource.cancel(reason);\n\t\t        }\n\t\t        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n\t\t    }\n\t\t    // Helper functions for the ReadableStreamDefaultController.\n\t\t    function defaultControllerBrandCheckException$1(name) {\n\t\t        return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n\t\t    }\n\n\t\t    function ReadableStreamTee(stream, cloneForBranch2) {\n\t\t        if (IsReadableByteStreamController(stream._readableStreamController)) {\n\t\t            return ReadableByteStreamTee(stream);\n\t\t        }\n\t\t        return ReadableStreamDefaultTee(stream);\n\t\t    }\n\t\t    function ReadableStreamDefaultTee(stream, cloneForBranch2) {\n\t\t        const reader = AcquireReadableStreamDefaultReader(stream);\n\t\t        let reading = false;\n\t\t        let readAgain = false;\n\t\t        let canceled1 = false;\n\t\t        let canceled2 = false;\n\t\t        let reason1;\n\t\t        let reason2;\n\t\t        let branch1;\n\t\t        let branch2;\n\t\t        let resolveCancelPromise;\n\t\t        const cancelPromise = newPromise(resolve => {\n\t\t            resolveCancelPromise = resolve;\n\t\t        });\n\t\t        function pullAlgorithm() {\n\t\t            if (reading) {\n\t\t                readAgain = true;\n\t\t                return promiseResolvedWith(undefined);\n\t\t            }\n\t\t            reading = true;\n\t\t            const readRequest = {\n\t\t                _chunkSteps: chunk => {\n\t\t                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n\t\t                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n\t\t                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n\t\t                    queueMicrotask(() => {\n\t\t                        readAgain = false;\n\t\t                        const chunk1 = chunk;\n\t\t                        const chunk2 = chunk;\n\t\t                        // There is no way to access the cloning code right now in the reference implementation.\n\t\t                        // If we add one then we'll need an implementation for serializable objects.\n\t\t                        // if (!canceled2 && cloneForBranch2) {\n\t\t                        //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n\t\t                        // }\n\t\t                        if (!canceled1) {\n\t\t                            ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);\n\t\t                        }\n\t\t                        if (!canceled2) {\n\t\t                            ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);\n\t\t                        }\n\t\t                        reading = false;\n\t\t                        if (readAgain) {\n\t\t                            pullAlgorithm();\n\t\t                        }\n\t\t                    });\n\t\t                },\n\t\t                _closeSteps: () => {\n\t\t                    reading = false;\n\t\t                    if (!canceled1) {\n\t\t                        ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n\t\t                    }\n\t\t                    if (!canceled2) {\n\t\t                        ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n\t\t                    }\n\t\t                    if (!canceled1 || !canceled2) {\n\t\t                        resolveCancelPromise(undefined);\n\t\t                    }\n\t\t                },\n\t\t                _errorSteps: () => {\n\t\t                    reading = false;\n\t\t                }\n\t\t            };\n\t\t            ReadableStreamDefaultReaderRead(reader, readRequest);\n\t\t            return promiseResolvedWith(undefined);\n\t\t        }\n\t\t        function cancel1Algorithm(reason) {\n\t\t            canceled1 = true;\n\t\t            reason1 = reason;\n\t\t            if (canceled2) {\n\t\t                const compositeReason = CreateArrayFromList([reason1, reason2]);\n\t\t                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n\t\t                resolveCancelPromise(cancelResult);\n\t\t            }\n\t\t            return cancelPromise;\n\t\t        }\n\t\t        function cancel2Algorithm(reason) {\n\t\t            canceled2 = true;\n\t\t            reason2 = reason;\n\t\t            if (canceled1) {\n\t\t                const compositeReason = CreateArrayFromList([reason1, reason2]);\n\t\t                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n\t\t                resolveCancelPromise(cancelResult);\n\t\t            }\n\t\t            return cancelPromise;\n\t\t        }\n\t\t        function startAlgorithm() {\n\t\t            // do nothing\n\t\t        }\n\t\t        branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n\t\t        branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n\t\t        uponRejection(reader._closedPromise, (r) => {\n\t\t            ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n\t\t            ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n\t\t            if (!canceled1 || !canceled2) {\n\t\t                resolveCancelPromise(undefined);\n\t\t            }\n\t\t        });\n\t\t        return [branch1, branch2];\n\t\t    }\n\t\t    function ReadableByteStreamTee(stream) {\n\t\t        let reader = AcquireReadableStreamDefaultReader(stream);\n\t\t        let reading = false;\n\t\t        let readAgainForBranch1 = false;\n\t\t        let readAgainForBranch2 = false;\n\t\t        let canceled1 = false;\n\t\t        let canceled2 = false;\n\t\t        let reason1;\n\t\t        let reason2;\n\t\t        let branch1;\n\t\t        let branch2;\n\t\t        let resolveCancelPromise;\n\t\t        const cancelPromise = newPromise(resolve => {\n\t\t            resolveCancelPromise = resolve;\n\t\t        });\n\t\t        function forwardReaderError(thisReader) {\n\t\t            uponRejection(thisReader._closedPromise, r => {\n\t\t                if (thisReader !== reader) {\n\t\t                    return;\n\t\t                }\n\t\t                ReadableByteStreamControllerError(branch1._readableStreamController, r);\n\t\t                ReadableByteStreamControllerError(branch2._readableStreamController, r);\n\t\t                if (!canceled1 || !canceled2) {\n\t\t                    resolveCancelPromise(undefined);\n\t\t                }\n\t\t            });\n\t\t        }\n\t\t        function pullWithDefaultReader() {\n\t\t            if (IsReadableStreamBYOBReader(reader)) {\n\t\t                ReadableStreamReaderGenericRelease(reader);\n\t\t                reader = AcquireReadableStreamDefaultReader(stream);\n\t\t                forwardReaderError(reader);\n\t\t            }\n\t\t            const readRequest = {\n\t\t                _chunkSteps: chunk => {\n\t\t                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n\t\t                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n\t\t                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n\t\t                    queueMicrotask(() => {\n\t\t                        readAgainForBranch1 = false;\n\t\t                        readAgainForBranch2 = false;\n\t\t                        const chunk1 = chunk;\n\t\t                        let chunk2 = chunk;\n\t\t                        if (!canceled1 && !canceled2) {\n\t\t                            try {\n\t\t                                chunk2 = CloneAsUint8Array(chunk);\n\t\t                            }\n\t\t                            catch (cloneE) {\n\t\t                                ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n\t\t                                ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n\t\t                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n\t\t                                return;\n\t\t                            }\n\t\t                        }\n\t\t                        if (!canceled1) {\n\t\t                            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n\t\t                        }\n\t\t                        if (!canceled2) {\n\t\t                            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n\t\t                        }\n\t\t                        reading = false;\n\t\t                        if (readAgainForBranch1) {\n\t\t                            pull1Algorithm();\n\t\t                        }\n\t\t                        else if (readAgainForBranch2) {\n\t\t                            pull2Algorithm();\n\t\t                        }\n\t\t                    });\n\t\t                },\n\t\t                _closeSteps: () => {\n\t\t                    reading = false;\n\t\t                    if (!canceled1) {\n\t\t                        ReadableByteStreamControllerClose(branch1._readableStreamController);\n\t\t                    }\n\t\t                    if (!canceled2) {\n\t\t                        ReadableByteStreamControllerClose(branch2._readableStreamController);\n\t\t                    }\n\t\t                    if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n\t\t                        ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n\t\t                    }\n\t\t                    if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n\t\t                        ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n\t\t                    }\n\t\t                    if (!canceled1 || !canceled2) {\n\t\t                        resolveCancelPromise(undefined);\n\t\t                    }\n\t\t                },\n\t\t                _errorSteps: () => {\n\t\t                    reading = false;\n\t\t                }\n\t\t            };\n\t\t            ReadableStreamDefaultReaderRead(reader, readRequest);\n\t\t        }\n\t\t        function pullWithBYOBReader(view, forBranch2) {\n\t\t            if (IsReadableStreamDefaultReader(reader)) {\n\t\t                ReadableStreamReaderGenericRelease(reader);\n\t\t                reader = AcquireReadableStreamBYOBReader(stream);\n\t\t                forwardReaderError(reader);\n\t\t            }\n\t\t            const byobBranch = forBranch2 ? branch2 : branch1;\n\t\t            const otherBranch = forBranch2 ? branch1 : branch2;\n\t\t            const readIntoRequest = {\n\t\t                _chunkSteps: chunk => {\n\t\t                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n\t\t                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n\t\t                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n\t\t                    queueMicrotask(() => {\n\t\t                        readAgainForBranch1 = false;\n\t\t                        readAgainForBranch2 = false;\n\t\t                        const byobCanceled = forBranch2 ? canceled2 : canceled1;\n\t\t                        const otherCanceled = forBranch2 ? canceled1 : canceled2;\n\t\t                        if (!otherCanceled) {\n\t\t                            let clonedChunk;\n\t\t                            try {\n\t\t                                clonedChunk = CloneAsUint8Array(chunk);\n\t\t                            }\n\t\t                            catch (cloneE) {\n\t\t                                ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n\t\t                                ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n\t\t                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n\t\t                                return;\n\t\t                            }\n\t\t                            if (!byobCanceled) {\n\t\t                                ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n\t\t                            }\n\t\t                            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n\t\t                        }\n\t\t                        else if (!byobCanceled) {\n\t\t                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n\t\t                        }\n\t\t                        reading = false;\n\t\t                        if (readAgainForBranch1) {\n\t\t                            pull1Algorithm();\n\t\t                        }\n\t\t                        else if (readAgainForBranch2) {\n\t\t                            pull2Algorithm();\n\t\t                        }\n\t\t                    });\n\t\t                },\n\t\t                _closeSteps: chunk => {\n\t\t                    reading = false;\n\t\t                    const byobCanceled = forBranch2 ? canceled2 : canceled1;\n\t\t                    const otherCanceled = forBranch2 ? canceled1 : canceled2;\n\t\t                    if (!byobCanceled) {\n\t\t                        ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n\t\t                    }\n\t\t                    if (!otherCanceled) {\n\t\t                        ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n\t\t                    }\n\t\t                    if (chunk !== undefined) {\n\t\t                        if (!byobCanceled) {\n\t\t                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n\t\t                        }\n\t\t                        if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n\t\t                            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n\t\t                        }\n\t\t                    }\n\t\t                    if (!byobCanceled || !otherCanceled) {\n\t\t                        resolveCancelPromise(undefined);\n\t\t                    }\n\t\t                },\n\t\t                _errorSteps: () => {\n\t\t                    reading = false;\n\t\t                }\n\t\t            };\n\t\t            ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);\n\t\t        }\n\t\t        function pull1Algorithm() {\n\t\t            if (reading) {\n\t\t                readAgainForBranch1 = true;\n\t\t                return promiseResolvedWith(undefined);\n\t\t            }\n\t\t            reading = true;\n\t\t            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n\t\t            if (byobRequest === null) {\n\t\t                pullWithDefaultReader();\n\t\t            }\n\t\t            else {\n\t\t                pullWithBYOBReader(byobRequest._view, false);\n\t\t            }\n\t\t            return promiseResolvedWith(undefined);\n\t\t        }\n\t\t        function pull2Algorithm() {\n\t\t            if (reading) {\n\t\t                readAgainForBranch2 = true;\n\t\t                return promiseResolvedWith(undefined);\n\t\t            }\n\t\t            reading = true;\n\t\t            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n\t\t            if (byobRequest === null) {\n\t\t                pullWithDefaultReader();\n\t\t            }\n\t\t            else {\n\t\t                pullWithBYOBReader(byobRequest._view, true);\n\t\t            }\n\t\t            return promiseResolvedWith(undefined);\n\t\t        }\n\t\t        function cancel1Algorithm(reason) {\n\t\t            canceled1 = true;\n\t\t            reason1 = reason;\n\t\t            if (canceled2) {\n\t\t                const compositeReason = CreateArrayFromList([reason1, reason2]);\n\t\t                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n\t\t                resolveCancelPromise(cancelResult);\n\t\t            }\n\t\t            return cancelPromise;\n\t\t        }\n\t\t        function cancel2Algorithm(reason) {\n\t\t            canceled2 = true;\n\t\t            reason2 = reason;\n\t\t            if (canceled1) {\n\t\t                const compositeReason = CreateArrayFromList([reason1, reason2]);\n\t\t                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n\t\t                resolveCancelPromise(cancelResult);\n\t\t            }\n\t\t            return cancelPromise;\n\t\t        }\n\t\t        function startAlgorithm() {\n\t\t            return;\n\t\t        }\n\t\t        branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n\t\t        branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n\t\t        forwardReaderError(reader);\n\t\t        return [branch1, branch2];\n\t\t    }\n\n\t\t    function convertUnderlyingDefaultOrByteSource(source, context) {\n\t\t        assertDictionary(source, context);\n\t\t        const original = source;\n\t\t        const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;\n\t\t        const cancel = original === null || original === void 0 ? void 0 : original.cancel;\n\t\t        const pull = original === null || original === void 0 ? void 0 : original.pull;\n\t\t        const start = original === null || original === void 0 ? void 0 : original.start;\n\t\t        const type = original === null || original === void 0 ? void 0 : original.type;\n\t\t        return {\n\t\t            autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n\t\t                undefined :\n\t\t                convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),\n\t\t            cancel: cancel === undefined ?\n\t\t                undefined :\n\t\t                convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),\n\t\t            pull: pull === undefined ?\n\t\t                undefined :\n\t\t                convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),\n\t\t            start: start === undefined ?\n\t\t                undefined :\n\t\t                convertUnderlyingSourceStartCallback(start, original, `${context} has member 'start' that`),\n\t\t            type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)\n\t\t        };\n\t\t    }\n\t\t    function convertUnderlyingSourceCancelCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return (reason) => promiseCall(fn, original, [reason]);\n\t\t    }\n\t\t    function convertUnderlyingSourcePullCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return (controller) => promiseCall(fn, original, [controller]);\n\t\t    }\n\t\t    function convertUnderlyingSourceStartCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return (controller) => reflectCall(fn, original, [controller]);\n\t\t    }\n\t\t    function convertReadableStreamType(type, context) {\n\t\t        type = `${type}`;\n\t\t        if (type !== 'bytes') {\n\t\t            throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n\t\t        }\n\t\t        return type;\n\t\t    }\n\n\t\t    function convertReaderOptions(options, context) {\n\t\t        assertDictionary(options, context);\n\t\t        const mode = options === null || options === void 0 ? void 0 : options.mode;\n\t\t        return {\n\t\t            mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n\t\t        };\n\t\t    }\n\t\t    function convertReadableStreamReaderMode(mode, context) {\n\t\t        mode = `${mode}`;\n\t\t        if (mode !== 'byob') {\n\t\t            throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n\t\t        }\n\t\t        return mode;\n\t\t    }\n\n\t\t    function convertIteratorOptions(options, context) {\n\t\t        assertDictionary(options, context);\n\t\t        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n\t\t        return { preventCancel: Boolean(preventCancel) };\n\t\t    }\n\n\t\t    function convertPipeOptions(options, context) {\n\t\t        assertDictionary(options, context);\n\t\t        const preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;\n\t\t        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n\t\t        const preventClose = options === null || options === void 0 ? void 0 : options.preventClose;\n\t\t        const signal = options === null || options === void 0 ? void 0 : options.signal;\n\t\t        if (signal !== undefined) {\n\t\t            assertAbortSignal(signal, `${context} has member 'signal' that`);\n\t\t        }\n\t\t        return {\n\t\t            preventAbort: Boolean(preventAbort),\n\t\t            preventCancel: Boolean(preventCancel),\n\t\t            preventClose: Boolean(preventClose),\n\t\t            signal\n\t\t        };\n\t\t    }\n\t\t    function assertAbortSignal(signal, context) {\n\t\t        if (!isAbortSignal(signal)) {\n\t\t            throw new TypeError(`${context} is not an AbortSignal.`);\n\t\t        }\n\t\t    }\n\n\t\t    function convertReadableWritablePair(pair, context) {\n\t\t        assertDictionary(pair, context);\n\t\t        const readable = pair === null || pair === void 0 ? void 0 : pair.readable;\n\t\t        assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n\t\t        assertReadableStream(readable, `${context} has member 'readable' that`);\n\t\t        const writable = pair === null || pair === void 0 ? void 0 : pair.writable;\n\t\t        assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n\t\t        assertWritableStream(writable, `${context} has member 'writable' that`);\n\t\t        return { readable, writable };\n\t\t    }\n\n\t\t    /**\n\t\t     * A readable stream represents a source of data, from which you can read.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class ReadableStream {\n\t\t        constructor(rawUnderlyingSource = {}, rawStrategy = {}) {\n\t\t            if (rawUnderlyingSource === undefined) {\n\t\t                rawUnderlyingSource = null;\n\t\t            }\n\t\t            else {\n\t\t                assertObject(rawUnderlyingSource, 'First parameter');\n\t\t            }\n\t\t            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n\t\t            const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n\t\t            InitializeReadableStream(this);\n\t\t            if (underlyingSource.type === 'bytes') {\n\t\t                if (strategy.size !== undefined) {\n\t\t                    throw new RangeError('The strategy for a byte stream cannot have a size function');\n\t\t                }\n\t\t                const highWaterMark = ExtractHighWaterMark(strategy, 0);\n\t\t                SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n\t\t            }\n\t\t            else {\n\t\t                const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n\t\t                const highWaterMark = ExtractHighWaterMark(strategy, 1);\n\t\t                SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n\t\t            }\n\t\t        }\n\t\t        /**\n\t\t         * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n\t\t         */\n\t\t        get locked() {\n\t\t            if (!IsReadableStream(this)) {\n\t\t                throw streamBrandCheckException$1('locked');\n\t\t            }\n\t\t            return IsReadableStreamLocked(this);\n\t\t        }\n\t\t        /**\n\t\t         * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n\t\t         *\n\t\t         * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n\t\t         * method, which might or might not use it.\n\t\t         */\n\t\t        cancel(reason = undefined) {\n\t\t            if (!IsReadableStream(this)) {\n\t\t                return promiseRejectedWith(streamBrandCheckException$1('cancel'));\n\t\t            }\n\t\t            if (IsReadableStreamLocked(this)) {\n\t\t                return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n\t\t            }\n\t\t            return ReadableStreamCancel(this, reason);\n\t\t        }\n\t\t        getReader(rawOptions = undefined) {\n\t\t            if (!IsReadableStream(this)) {\n\t\t                throw streamBrandCheckException$1('getReader');\n\t\t            }\n\t\t            const options = convertReaderOptions(rawOptions, 'First parameter');\n\t\t            if (options.mode === undefined) {\n\t\t                return AcquireReadableStreamDefaultReader(this);\n\t\t            }\n\t\t            return AcquireReadableStreamBYOBReader(this);\n\t\t        }\n\t\t        pipeThrough(rawTransform, rawOptions = {}) {\n\t\t            if (!IsReadableStream(this)) {\n\t\t                throw streamBrandCheckException$1('pipeThrough');\n\t\t            }\n\t\t            assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n\t\t            const transform = convertReadableWritablePair(rawTransform, 'First parameter');\n\t\t            const options = convertPipeOptions(rawOptions, 'Second parameter');\n\t\t            if (IsReadableStreamLocked(this)) {\n\t\t                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n\t\t            }\n\t\t            if (IsWritableStreamLocked(transform.writable)) {\n\t\t                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n\t\t            }\n\t\t            const promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n\t\t            setPromiseIsHandledToTrue(promise);\n\t\t            return transform.readable;\n\t\t        }\n\t\t        pipeTo(destination, rawOptions = {}) {\n\t\t            if (!IsReadableStream(this)) {\n\t\t                return promiseRejectedWith(streamBrandCheckException$1('pipeTo'));\n\t\t            }\n\t\t            if (destination === undefined) {\n\t\t                return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n\t\t            }\n\t\t            if (!IsWritableStream(destination)) {\n\t\t                return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));\n\t\t            }\n\t\t            let options;\n\t\t            try {\n\t\t                options = convertPipeOptions(rawOptions, 'Second parameter');\n\t\t            }\n\t\t            catch (e) {\n\t\t                return promiseRejectedWith(e);\n\t\t            }\n\t\t            if (IsReadableStreamLocked(this)) {\n\t\t                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n\t\t            }\n\t\t            if (IsWritableStreamLocked(destination)) {\n\t\t                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n\t\t            }\n\t\t            return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n\t\t        }\n\t\t        /**\n\t\t         * Tees this readable stream, returning a two-element array containing the two resulting branches as\n\t\t         * new {@link ReadableStream} instances.\n\t\t         *\n\t\t         * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n\t\t         * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n\t\t         * propagated to the stream's underlying source.\n\t\t         *\n\t\t         * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n\t\t         * this could allow interference between the two branches.\n\t\t         */\n\t\t        tee() {\n\t\t            if (!IsReadableStream(this)) {\n\t\t                throw streamBrandCheckException$1('tee');\n\t\t            }\n\t\t            const branches = ReadableStreamTee(this);\n\t\t            return CreateArrayFromList(branches);\n\t\t        }\n\t\t        values(rawOptions = undefined) {\n\t\t            if (!IsReadableStream(this)) {\n\t\t                throw streamBrandCheckException$1('values');\n\t\t            }\n\t\t            const options = convertIteratorOptions(rawOptions, 'First parameter');\n\t\t            return AcquireReadableStreamAsyncIterator(this, options.preventCancel);\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(ReadableStream.prototype, {\n\t\t        cancel: { enumerable: true },\n\t\t        getReader: { enumerable: true },\n\t\t        pipeThrough: { enumerable: true },\n\t\t        pipeTo: { enumerable: true },\n\t\t        tee: { enumerable: true },\n\t\t        values: { enumerable: true },\n\t\t        locked: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'ReadableStream',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    if (typeof SymbolPolyfill.asyncIterator === 'symbol') {\n\t\t        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.asyncIterator, {\n\t\t            value: ReadableStream.prototype.values,\n\t\t            writable: true,\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Abstract operations for the ReadableStream.\n\t\t    // Throws if and only if startAlgorithm throws.\n\t\t    function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n\t\t        const stream = Object.create(ReadableStream.prototype);\n\t\t        InitializeReadableStream(stream);\n\t\t        const controller = Object.create(ReadableStreamDefaultController.prototype);\n\t\t        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n\t\t        return stream;\n\t\t    }\n\t\t    // Throws if and only if startAlgorithm throws.\n\t\t    function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {\n\t\t        const stream = Object.create(ReadableStream.prototype);\n\t\t        InitializeReadableStream(stream);\n\t\t        const controller = Object.create(ReadableByteStreamController.prototype);\n\t\t        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n\t\t        return stream;\n\t\t    }\n\t\t    function InitializeReadableStream(stream) {\n\t\t        stream._state = 'readable';\n\t\t        stream._reader = undefined;\n\t\t        stream._storedError = undefined;\n\t\t        stream._disturbed = false;\n\t\t    }\n\t\t    function IsReadableStream(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof ReadableStream;\n\t\t    }\n\t\t    function IsReadableStreamLocked(stream) {\n\t\t        if (stream._reader === undefined) {\n\t\t            return false;\n\t\t        }\n\t\t        return true;\n\t\t    }\n\t\t    // ReadableStream API exposed for controllers.\n\t\t    function ReadableStreamCancel(stream, reason) {\n\t\t        stream._disturbed = true;\n\t\t        if (stream._state === 'closed') {\n\t\t            return promiseResolvedWith(undefined);\n\t\t        }\n\t\t        if (stream._state === 'errored') {\n\t\t            return promiseRejectedWith(stream._storedError);\n\t\t        }\n\t\t        ReadableStreamClose(stream);\n\t\t        const reader = stream._reader;\n\t\t        if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n\t\t            reader._readIntoRequests.forEach(readIntoRequest => {\n\t\t                readIntoRequest._closeSteps(undefined);\n\t\t            });\n\t\t            reader._readIntoRequests = new SimpleQueue();\n\t\t        }\n\t\t        const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n\t\t        return transformPromiseWith(sourceCancelPromise, noop);\n\t\t    }\n\t\t    function ReadableStreamClose(stream) {\n\t\t        stream._state = 'closed';\n\t\t        const reader = stream._reader;\n\t\t        if (reader === undefined) {\n\t\t            return;\n\t\t        }\n\t\t        defaultReaderClosedPromiseResolve(reader);\n\t\t        if (IsReadableStreamDefaultReader(reader)) {\n\t\t            reader._readRequests.forEach(readRequest => {\n\t\t                readRequest._closeSteps();\n\t\t            });\n\t\t            reader._readRequests = new SimpleQueue();\n\t\t        }\n\t\t    }\n\t\t    function ReadableStreamError(stream, e) {\n\t\t        stream._state = 'errored';\n\t\t        stream._storedError = e;\n\t\t        const reader = stream._reader;\n\t\t        if (reader === undefined) {\n\t\t            return;\n\t\t        }\n\t\t        defaultReaderClosedPromiseReject(reader, e);\n\t\t        if (IsReadableStreamDefaultReader(reader)) {\n\t\t            reader._readRequests.forEach(readRequest => {\n\t\t                readRequest._errorSteps(e);\n\t\t            });\n\t\t            reader._readRequests = new SimpleQueue();\n\t\t        }\n\t\t        else {\n\t\t            reader._readIntoRequests.forEach(readIntoRequest => {\n\t\t                readIntoRequest._errorSteps(e);\n\t\t            });\n\t\t            reader._readIntoRequests = new SimpleQueue();\n\t\t        }\n\t\t    }\n\t\t    // Helper functions for the ReadableStream.\n\t\t    function streamBrandCheckException$1(name) {\n\t\t        return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n\t\t    }\n\n\t\t    function convertQueuingStrategyInit(init, context) {\n\t\t        assertDictionary(init, context);\n\t\t        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n\t\t        assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n\t\t        return {\n\t\t            highWaterMark: convertUnrestrictedDouble(highWaterMark)\n\t\t        };\n\t\t    }\n\n\t\t    // The size function must not have a prototype property nor be a constructor\n\t\t    const byteLengthSizeFunction = (chunk) => {\n\t\t        return chunk.byteLength;\n\t\t    };\n\t\t    try {\n\t\t        Object.defineProperty(byteLengthSizeFunction, 'name', {\n\t\t            value: 'size',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    catch (_a) {\n\t\t        // This property is non-configurable in older browsers, so ignore if this throws.\n\t\t        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n\t\t    }\n\t\t    /**\n\t\t     * A queuing strategy that counts the number of bytes in each chunk.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class ByteLengthQueuingStrategy {\n\t\t        constructor(options) {\n\t\t            assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n\t\t            options = convertQueuingStrategyInit(options, 'First parameter');\n\t\t            this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n\t\t        }\n\t\t        /**\n\t\t         * Returns the high water mark provided to the constructor.\n\t\t         */\n\t\t        get highWaterMark() {\n\t\t            if (!IsByteLengthQueuingStrategy(this)) {\n\t\t                throw byteLengthBrandCheckException('highWaterMark');\n\t\t            }\n\t\t            return this._byteLengthQueuingStrategyHighWaterMark;\n\t\t        }\n\t\t        /**\n\t\t         * Measures the size of `chunk` by returning the value of its `byteLength` property.\n\t\t         */\n\t\t        get size() {\n\t\t            if (!IsByteLengthQueuingStrategy(this)) {\n\t\t                throw byteLengthBrandCheckException('size');\n\t\t            }\n\t\t            return byteLengthSizeFunction;\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(ByteLengthQueuingStrategy.prototype, {\n\t\t        highWaterMark: { enumerable: true },\n\t\t        size: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'ByteLengthQueuingStrategy',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Helper functions for the ByteLengthQueuingStrategy.\n\t\t    function byteLengthBrandCheckException(name) {\n\t\t        return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n\t\t    }\n\t\t    function IsByteLengthQueuingStrategy(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof ByteLengthQueuingStrategy;\n\t\t    }\n\n\t\t    // The size function must not have a prototype property nor be a constructor\n\t\t    const countSizeFunction = () => {\n\t\t        return 1;\n\t\t    };\n\t\t    try {\n\t\t        Object.defineProperty(countSizeFunction, 'name', {\n\t\t            value: 'size',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    catch (_a) {\n\t\t        // This property is non-configurable in older browsers, so ignore if this throws.\n\t\t        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n\t\t    }\n\t\t    /**\n\t\t     * A queuing strategy that counts the number of chunks.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class CountQueuingStrategy {\n\t\t        constructor(options) {\n\t\t            assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n\t\t            options = convertQueuingStrategyInit(options, 'First parameter');\n\t\t            this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n\t\t        }\n\t\t        /**\n\t\t         * Returns the high water mark provided to the constructor.\n\t\t         */\n\t\t        get highWaterMark() {\n\t\t            if (!IsCountQueuingStrategy(this)) {\n\t\t                throw countBrandCheckException('highWaterMark');\n\t\t            }\n\t\t            return this._countQueuingStrategyHighWaterMark;\n\t\t        }\n\t\t        /**\n\t\t         * Measures the size of `chunk` by always returning 1.\n\t\t         * This ensures that the total queue size is a count of the number of chunks in the queue.\n\t\t         */\n\t\t        get size() {\n\t\t            if (!IsCountQueuingStrategy(this)) {\n\t\t                throw countBrandCheckException('size');\n\t\t            }\n\t\t            return countSizeFunction;\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(CountQueuingStrategy.prototype, {\n\t\t        highWaterMark: { enumerable: true },\n\t\t        size: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'CountQueuingStrategy',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Helper functions for the CountQueuingStrategy.\n\t\t    function countBrandCheckException(name) {\n\t\t        return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n\t\t    }\n\t\t    function IsCountQueuingStrategy(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof CountQueuingStrategy;\n\t\t    }\n\n\t\t    function convertTransformer(original, context) {\n\t\t        assertDictionary(original, context);\n\t\t        const flush = original === null || original === void 0 ? void 0 : original.flush;\n\t\t        const readableType = original === null || original === void 0 ? void 0 : original.readableType;\n\t\t        const start = original === null || original === void 0 ? void 0 : original.start;\n\t\t        const transform = original === null || original === void 0 ? void 0 : original.transform;\n\t\t        const writableType = original === null || original === void 0 ? void 0 : original.writableType;\n\t\t        return {\n\t\t            flush: flush === undefined ?\n\t\t                undefined :\n\t\t                convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),\n\t\t            readableType,\n\t\t            start: start === undefined ?\n\t\t                undefined :\n\t\t                convertTransformerStartCallback(start, original, `${context} has member 'start' that`),\n\t\t            transform: transform === undefined ?\n\t\t                undefined :\n\t\t                convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),\n\t\t            writableType\n\t\t        };\n\t\t    }\n\t\t    function convertTransformerFlushCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return (controller) => promiseCall(fn, original, [controller]);\n\t\t    }\n\t\t    function convertTransformerStartCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return (controller) => reflectCall(fn, original, [controller]);\n\t\t    }\n\t\t    function convertTransformerTransformCallback(fn, original, context) {\n\t\t        assertFunction(fn, context);\n\t\t        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n\t\t    }\n\n\t\t    // Class TransformStream\n\t\t    /**\n\t\t     * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n\t\t     * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n\t\t     * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n\t\t     * made available for reading from the readable side.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class TransformStream {\n\t\t        constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {\n\t\t            if (rawTransformer === undefined) {\n\t\t                rawTransformer = null;\n\t\t            }\n\t\t            const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n\t\t            const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n\t\t            const transformer = convertTransformer(rawTransformer, 'First parameter');\n\t\t            if (transformer.readableType !== undefined) {\n\t\t                throw new RangeError('Invalid readableType specified');\n\t\t            }\n\t\t            if (transformer.writableType !== undefined) {\n\t\t                throw new RangeError('Invalid writableType specified');\n\t\t            }\n\t\t            const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n\t\t            const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n\t\t            const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n\t\t            const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n\t\t            let startPromise_resolve;\n\t\t            const startPromise = newPromise(resolve => {\n\t\t                startPromise_resolve = resolve;\n\t\t            });\n\t\t            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n\t\t            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n\t\t            if (transformer.start !== undefined) {\n\t\t                startPromise_resolve(transformer.start(this._transformStreamController));\n\t\t            }\n\t\t            else {\n\t\t                startPromise_resolve(undefined);\n\t\t            }\n\t\t        }\n\t\t        /**\n\t\t         * The readable side of the transform stream.\n\t\t         */\n\t\t        get readable() {\n\t\t            if (!IsTransformStream(this)) {\n\t\t                throw streamBrandCheckException('readable');\n\t\t            }\n\t\t            return this._readable;\n\t\t        }\n\t\t        /**\n\t\t         * The writable side of the transform stream.\n\t\t         */\n\t\t        get writable() {\n\t\t            if (!IsTransformStream(this)) {\n\t\t                throw streamBrandCheckException('writable');\n\t\t            }\n\t\t            return this._writable;\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(TransformStream.prototype, {\n\t\t        readable: { enumerable: true },\n\t\t        writable: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'TransformStream',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {\n\t\t        function startAlgorithm() {\n\t\t            return startPromise;\n\t\t        }\n\t\t        function writeAlgorithm(chunk) {\n\t\t            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n\t\t        }\n\t\t        function abortAlgorithm(reason) {\n\t\t            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n\t\t        }\n\t\t        function closeAlgorithm() {\n\t\t            return TransformStreamDefaultSinkCloseAlgorithm(stream);\n\t\t        }\n\t\t        stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);\n\t\t        function pullAlgorithm() {\n\t\t            return TransformStreamDefaultSourcePullAlgorithm(stream);\n\t\t        }\n\t\t        function cancelAlgorithm(reason) {\n\t\t            TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n\t\t            return promiseResolvedWith(undefined);\n\t\t        }\n\t\t        stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n\t\t        // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n\t\t        stream._backpressure = undefined;\n\t\t        stream._backpressureChangePromise = undefined;\n\t\t        stream._backpressureChangePromise_resolve = undefined;\n\t\t        TransformStreamSetBackpressure(stream, true);\n\t\t        stream._transformStreamController = undefined;\n\t\t    }\n\t\t    function IsTransformStream(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof TransformStream;\n\t\t    }\n\t\t    // This is a no-op if both sides are already errored.\n\t\t    function TransformStreamError(stream, e) {\n\t\t        ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n\t\t        TransformStreamErrorWritableAndUnblockWrite(stream, e);\n\t\t    }\n\t\t    function TransformStreamErrorWritableAndUnblockWrite(stream, e) {\n\t\t        TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n\t\t        WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n\t\t        if (stream._backpressure) {\n\t\t            // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n\t\t            // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n\t\t            // _backpressure is set.\n\t\t            TransformStreamSetBackpressure(stream, false);\n\t\t        }\n\t\t    }\n\t\t    function TransformStreamSetBackpressure(stream, backpressure) {\n\t\t        // Passes also when called during construction.\n\t\t        if (stream._backpressureChangePromise !== undefined) {\n\t\t            stream._backpressureChangePromise_resolve();\n\t\t        }\n\t\t        stream._backpressureChangePromise = newPromise(resolve => {\n\t\t            stream._backpressureChangePromise_resolve = resolve;\n\t\t        });\n\t\t        stream._backpressure = backpressure;\n\t\t    }\n\t\t    // Class TransformStreamDefaultController\n\t\t    /**\n\t\t     * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n\t\t     *\n\t\t     * @public\n\t\t     */\n\t\t    class TransformStreamDefaultController {\n\t\t        constructor() {\n\t\t            throw new TypeError('Illegal constructor');\n\t\t        }\n\t\t        /**\n\t\t         * Returns the desired size to fill the readable side’s internal queue. It can be negative, if the queue is over-full.\n\t\t         */\n\t\t        get desiredSize() {\n\t\t            if (!IsTransformStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException('desiredSize');\n\t\t            }\n\t\t            const readableController = this._controlledTransformStream._readable._readableStreamController;\n\t\t            return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n\t\t        }\n\t\t        enqueue(chunk = undefined) {\n\t\t            if (!IsTransformStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException('enqueue');\n\t\t            }\n\t\t            TransformStreamDefaultControllerEnqueue(this, chunk);\n\t\t        }\n\t\t        /**\n\t\t         * Errors both the readable side and the writable side of the controlled transform stream, making all future\n\t\t         * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n\t\t         */\n\t\t        error(reason = undefined) {\n\t\t            if (!IsTransformStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException('error');\n\t\t            }\n\t\t            TransformStreamDefaultControllerError(this, reason);\n\t\t        }\n\t\t        /**\n\t\t         * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n\t\t         * transformer only needs to consume a portion of the chunks written to the writable side.\n\t\t         */\n\t\t        terminate() {\n\t\t            if (!IsTransformStreamDefaultController(this)) {\n\t\t                throw defaultControllerBrandCheckException('terminate');\n\t\t            }\n\t\t            TransformStreamDefaultControllerTerminate(this);\n\t\t        }\n\t\t    }\n\t\t    Object.defineProperties(TransformStreamDefaultController.prototype, {\n\t\t        enqueue: { enumerable: true },\n\t\t        error: { enumerable: true },\n\t\t        terminate: { enumerable: true },\n\t\t        desiredSize: { enumerable: true }\n\t\t    });\n\t\t    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n\t\t        Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n\t\t            value: 'TransformStreamDefaultController',\n\t\t            configurable: true\n\t\t        });\n\t\t    }\n\t\t    // Transform Stream Default Controller Abstract Operations\n\t\t    function IsTransformStreamDefaultController(x) {\n\t\t        if (!typeIsObject(x)) {\n\t\t            return false;\n\t\t        }\n\t\t        if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n\t\t            return false;\n\t\t        }\n\t\t        return x instanceof TransformStreamDefaultController;\n\t\t    }\n\t\t    function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {\n\t\t        controller._controlledTransformStream = stream;\n\t\t        stream._transformStreamController = controller;\n\t\t        controller._transformAlgorithm = transformAlgorithm;\n\t\t        controller._flushAlgorithm = flushAlgorithm;\n\t\t    }\n\t\t    function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n\t\t        const controller = Object.create(TransformStreamDefaultController.prototype);\n\t\t        let transformAlgorithm = (chunk) => {\n\t\t            try {\n\t\t                TransformStreamDefaultControllerEnqueue(controller, chunk);\n\t\t                return promiseResolvedWith(undefined);\n\t\t            }\n\t\t            catch (transformResultE) {\n\t\t                return promiseRejectedWith(transformResultE);\n\t\t            }\n\t\t        };\n\t\t        let flushAlgorithm = () => promiseResolvedWith(undefined);\n\t\t        if (transformer.transform !== undefined) {\n\t\t            transformAlgorithm = chunk => transformer.transform(chunk, controller);\n\t\t        }\n\t\t        if (transformer.flush !== undefined) {\n\t\t            flushAlgorithm = () => transformer.flush(controller);\n\t\t        }\n\t\t        SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n\t\t    }\n\t\t    function TransformStreamDefaultControllerClearAlgorithms(controller) {\n\t\t        controller._transformAlgorithm = undefined;\n\t\t        controller._flushAlgorithm = undefined;\n\t\t    }\n\t\t    function TransformStreamDefaultControllerEnqueue(controller, chunk) {\n\t\t        const stream = controller._controlledTransformStream;\n\t\t        const readableController = stream._readable._readableStreamController;\n\t\t        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n\t\t            throw new TypeError('Readable side is not in a state that permits enqueue');\n\t\t        }\n\t\t        // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n\t\t        // accept TransformStreamDefaultControllerEnqueue() calls.\n\t\t        try {\n\t\t            ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n\t\t        }\n\t\t        catch (e) {\n\t\t            // This happens when readableStrategy.size() throws.\n\t\t            TransformStreamErrorWritableAndUnblockWrite(stream, e);\n\t\t            throw stream._readable._storedError;\n\t\t        }\n\t\t        const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n\t\t        if (backpressure !== stream._backpressure) {\n\t\t            TransformStreamSetBackpressure(stream, true);\n\t\t        }\n\t\t    }\n\t\t    function TransformStreamDefaultControllerError(controller, e) {\n\t\t        TransformStreamError(controller._controlledTransformStream, e);\n\t\t    }\n\t\t    function TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n\t\t        const transformPromise = controller._transformAlgorithm(chunk);\n\t\t        return transformPromiseWith(transformPromise, undefined, r => {\n\t\t            TransformStreamError(controller._controlledTransformStream, r);\n\t\t            throw r;\n\t\t        });\n\t\t    }\n\t\t    function TransformStreamDefaultControllerTerminate(controller) {\n\t\t        const stream = controller._controlledTransformStream;\n\t\t        const readableController = stream._readable._readableStreamController;\n\t\t        ReadableStreamDefaultControllerClose(readableController);\n\t\t        const error = new TypeError('TransformStream terminated');\n\t\t        TransformStreamErrorWritableAndUnblockWrite(stream, error);\n\t\t    }\n\t\t    // TransformStreamDefaultSink Algorithms\n\t\t    function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n\t\t        const controller = stream._transformStreamController;\n\t\t        if (stream._backpressure) {\n\t\t            const backpressureChangePromise = stream._backpressureChangePromise;\n\t\t            return transformPromiseWith(backpressureChangePromise, () => {\n\t\t                const writable = stream._writable;\n\t\t                const state = writable._state;\n\t\t                if (state === 'erroring') {\n\t\t                    throw writable._storedError;\n\t\t                }\n\t\t                return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n\t\t            });\n\t\t        }\n\t\t        return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n\t\t    }\n\t\t    function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n\t\t        // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n\t\t        // errored.\n\t\t        TransformStreamError(stream, reason);\n\t\t        return promiseResolvedWith(undefined);\n\t\t    }\n\t\t    function TransformStreamDefaultSinkCloseAlgorithm(stream) {\n\t\t        // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n\t\t        const readable = stream._readable;\n\t\t        const controller = stream._transformStreamController;\n\t\t        const flushPromise = controller._flushAlgorithm();\n\t\t        TransformStreamDefaultControllerClearAlgorithms(controller);\n\t\t        // Return a promise that is fulfilled with undefined on success.\n\t\t        return transformPromiseWith(flushPromise, () => {\n\t\t            if (readable._state === 'errored') {\n\t\t                throw readable._storedError;\n\t\t            }\n\t\t            ReadableStreamDefaultControllerClose(readable._readableStreamController);\n\t\t        }, r => {\n\t\t            TransformStreamError(stream, r);\n\t\t            throw readable._storedError;\n\t\t        });\n\t\t    }\n\t\t    // TransformStreamDefaultSource Algorithms\n\t\t    function TransformStreamDefaultSourcePullAlgorithm(stream) {\n\t\t        // Invariant. Enforced by the promises returned by start() and pull().\n\t\t        TransformStreamSetBackpressure(stream, false);\n\t\t        // Prevent the next pull() call until there is backpressure.\n\t\t        return stream._backpressureChangePromise;\n\t\t    }\n\t\t    // Helper functions for the TransformStreamDefaultController.\n\t\t    function defaultControllerBrandCheckException(name) {\n\t\t        return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n\t\t    }\n\t\t    // Helper functions for the TransformStream.\n\t\t    function streamBrandCheckException(name) {\n\t\t        return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);\n\t\t    }\n\n\t\t    exports.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;\n\t\t    exports.CountQueuingStrategy = CountQueuingStrategy;\n\t\t    exports.ReadableByteStreamController = ReadableByteStreamController;\n\t\t    exports.ReadableStream = ReadableStream;\n\t\t    exports.ReadableStreamBYOBReader = ReadableStreamBYOBReader;\n\t\t    exports.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;\n\t\t    exports.ReadableStreamDefaultController = ReadableStreamDefaultController;\n\t\t    exports.ReadableStreamDefaultReader = ReadableStreamDefaultReader;\n\t\t    exports.TransformStream = TransformStream;\n\t\t    exports.TransformStreamDefaultController = TransformStreamDefaultController;\n\t\t    exports.WritableStream = WritableStream;\n\t\t    exports.WritableStreamDefaultController = WritableStreamDefaultController;\n\t\t    exports.WritableStreamDefaultWriter = WritableStreamDefaultWriter;\n\n\t\t    Object.defineProperty(exports, '__esModule', { value: true });\n\n\t\t})));\n\t\t\n} (ponyfill_es2018, ponyfill_es2018.exports));\n\treturn ponyfill_es2018.exports;\n}\n\n/* c8 ignore start */\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE$1 = 65536;\n\nif (!globalThis.ReadableStream) {\n  // `node:stream/web` got introduced in v16.5.0 as experimental\n  // and it's preferred over the polyfilled version. So we also\n  // suppress the warning that gets emitted by NodeJS for using it.\n  try {\n    const process = require('node:process');\n    const { emitWarning } = process;\n    try {\n      process.emitWarning = () => {};\n      Object.assign(globalThis, require('node:stream/web'));\n      process.emitWarning = emitWarning;\n    } catch (error) {\n      process.emitWarning = emitWarning;\n      throw error\n    }\n  } catch (error) {\n    // fallback to polyfill implementation\n    Object.assign(globalThis, requirePonyfill_es2018());\n  }\n}\n\ntry {\n  // Don't use node: prefix for this, require+node: is not supported until node v14.14\n  // Only `import()` can use prefix in 12.20 and later\n  const { Blob } = require('buffer');\n  if (Blob && !Blob.prototype.stream) {\n    Blob.prototype.stream = function name (params) {\n      let position = 0;\n      const blob = this;\n\n      return new ReadableStream({\n        type: 'bytes',\n        async pull (ctrl) {\n          const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE$1));\n          const buffer = await chunk.arrayBuffer();\n          position += buffer.byteLength;\n          ctrl.enqueue(new Uint8Array(buffer));\n\n          if (position === blob.size) {\n            ctrl.close();\n          }\n        }\n      })\n    };\n  }\n} catch (error) {}\n\n/*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536;\n\n/** @param {(Blob | Uint8Array)[]} parts */\nasync function * toIterator (parts, clone = true) {\n  for (const part of parts) {\n    if ('stream' in part) {\n      yield * (/** @type {AsyncIterableIterator<Uint8Array>} */ (part.stream()));\n    } else if (ArrayBuffer.isView(part)) {\n      if (clone) {\n        let position = part.byteOffset;\n        const end = part.byteOffset + part.byteLength;\n        while (position !== end) {\n          const size = Math.min(end - position, POOL_SIZE);\n          const chunk = part.buffer.slice(position, position + size);\n          position += chunk.byteLength;\n          yield new Uint8Array(chunk);\n        }\n      } else {\n        yield part;\n      }\n    /* c8 ignore next 10 */\n    } else {\n      // For blobs that have arrayBuffer but no stream method (nodes buffer.Blob)\n      let position = 0, b = (/** @type {Blob} */ (part));\n      while (position !== b.size) {\n        const chunk = b.slice(position, Math.min(b.size, position + POOL_SIZE));\n        const buffer = await chunk.arrayBuffer();\n        position += buffer.byteLength;\n        yield new Uint8Array(buffer);\n      }\n    }\n  }\n}\n\nconst _Blob = class Blob {\n  /** @type {Array.<(Blob|Uint8Array)>} */\n  #parts = []\n  #type = ''\n  #size = 0\n  #endings = 'transparent'\n\n  /**\n   * The Blob() constructor returns a new Blob object. The content\n   * of the blob consists of the concatenation of the values given\n   * in the parameter array.\n   *\n   * @param {*} blobParts\n   * @param {{ type?: string, endings?: string }} [options]\n   */\n  constructor (blobParts = [], options = {}) {\n    if (typeof blobParts !== 'object' || blobParts === null) {\n      throw new TypeError('Failed to construct \\'Blob\\': The provided value cannot be converted to a sequence.')\n    }\n\n    if (typeof blobParts[Symbol.iterator] !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': The object must have a callable @@iterator property.')\n    }\n\n    if (typeof options !== 'object' && typeof options !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': parameter 2 cannot convert to dictionary.')\n    }\n\n    if (options === null) options = {};\n\n    const encoder = new TextEncoder();\n    for (const element of blobParts) {\n      let part;\n      if (ArrayBuffer.isView(element)) {\n        part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength));\n      } else if (element instanceof ArrayBuffer) {\n        part = new Uint8Array(element.slice(0));\n      } else if (element instanceof Blob) {\n        part = element;\n      } else {\n        part = encoder.encode(`${element}`);\n      }\n\n      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size;\n      // Avoid pushing empty parts into the array to better GC them\n      if (size) {\n        this.#size += size;\n        this.#parts.push(part);\n      }\n    }\n\n    this.#endings = `${options.endings === undefined ? 'transparent' : options.endings}`;\n    const type = options.type === undefined ? '' : String(options.type);\n    this.#type = /^[\\x20-\\x7E]*$/.test(type) ? type : '';\n  }\n\n  /**\n   * The Blob interface's size property returns the\n   * size of the Blob in bytes.\n   */\n  get size () {\n    return this.#size\n  }\n\n  /**\n   * The type property of a Blob object returns the MIME type of the file.\n   */\n  get type () {\n    return this.#type\n  }\n\n  /**\n   * The text() method in the Blob interface returns a Promise\n   * that resolves with a string containing the contents of\n   * the blob, interpreted as UTF-8.\n   *\n   * @return {Promise<string>}\n   */\n  async text () {\n    // More optimized than using this.arrayBuffer()\n    // that requires twice as much ram\n    const decoder = new TextDecoder();\n    let str = '';\n    for await (const part of toIterator(this.#parts, false)) {\n      str += decoder.decode(part, { stream: true });\n    }\n    // Remaining\n    str += decoder.decode();\n    return str\n  }\n\n  /**\n   * The arrayBuffer() method in the Blob interface returns a\n   * Promise that resolves with the contents of the blob as\n   * binary data contained in an ArrayBuffer.\n   *\n   * @return {Promise<ArrayBuffer>}\n   */\n  async arrayBuffer () {\n    // Easier way... Just a unnecessary overhead\n    // const view = new Uint8Array(this.size);\n    // await this.stream().getReader({mode: 'byob'}).read(view);\n    // return view.buffer;\n\n    const data = new Uint8Array(this.size);\n    let offset = 0;\n    for await (const chunk of toIterator(this.#parts, false)) {\n      data.set(chunk, offset);\n      offset += chunk.length;\n    }\n\n    return data.buffer\n  }\n\n  stream () {\n    const it = toIterator(this.#parts, true);\n\n    return new globalThis.ReadableStream({\n      // @ts-ignore\n      type: 'bytes',\n      async pull (ctrl) {\n        const chunk = await it.next();\n        chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value);\n      },\n\n      async cancel () {\n        await it.return();\n      }\n    })\n  }\n\n  /**\n   * The Blob interface's slice() method creates and returns a\n   * new Blob object which contains data from a subset of the\n   * blob on which it's called.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [type]\n   */\n  slice (start = 0, end = this.size, type = '') {\n    const { size } = this;\n\n    let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size);\n    let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size);\n\n    const span = Math.max(relativeEnd - relativeStart, 0);\n    const parts = this.#parts;\n    const blobParts = [];\n    let added = 0;\n\n    for (const part of parts) {\n      // don't add the overflow to new blobParts\n      if (added >= span) {\n        break\n      }\n\n      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size;\n      if (relativeStart && size <= relativeStart) {\n        // Skip the beginning and change the relative\n        // start & end position as we skip the unwanted parts\n        relativeStart -= size;\n        relativeEnd -= size;\n      } else {\n        let chunk;\n        if (ArrayBuffer.isView(part)) {\n          chunk = part.subarray(relativeStart, Math.min(size, relativeEnd));\n          added += chunk.byteLength;\n        } else {\n          chunk = part.slice(relativeStart, Math.min(size, relativeEnd));\n          added += chunk.size;\n        }\n        relativeEnd -= size;\n        blobParts.push(chunk);\n        relativeStart = 0; // All next sequential parts should start at 0\n      }\n    }\n\n    const blob = new Blob([], { type: String(type).toLowerCase() });\n    blob.#size = span;\n    blob.#parts = blobParts;\n\n    return blob\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return (\n      object &&\n      typeof object === 'object' &&\n      typeof object.constructor === 'function' &&\n      (\n        typeof object.stream === 'function' ||\n        typeof object.arrayBuffer === 'function'\n      ) &&\n      /^(Blob|File)$/.test(object[Symbol.toStringTag])\n    )\n  }\n};\n\nObject.defineProperties(_Blob.prototype, {\n  size: { enumerable: true },\n  type: { enumerable: true },\n  slice: { enumerable: true }\n});\n\n/** @type {typeof globalThis.Blob} */\nconst Blob = _Blob;\nconst _Blob$1 = Blob;\n\nconst _File = class File extends _Blob$1 {\n  #lastModified = 0\n  #name = ''\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */// @ts-ignore\n  constructor (fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)\n    }\n    super(fileBits, options);\n\n    if (options === null) options = {};\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified);\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified;\n    }\n\n    this.#name = String(fileName);\n  }\n\n  get name () {\n    return this.#name\n  }\n\n  get lastModified () {\n    return this.#lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return !!object && object instanceof _Blob$1 &&\n      /^(File)$/.test(object[Symbol.toStringTag])\n  }\n};\n\n/** @type {typeof globalThis.File} */// @ts-ignore\nconst File = _File;\nconst File$1 = File;\n\n/*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nvar {toStringTag:t,iterator:i,hasInstance:h}=Symbol,\nr=Math.random,\nm='append,set,get,getAll,delete,keys,values,entries,forEach,constructor'.split(','),\nf=(a,b,c)=>(a+='',/^(Blob|File)$/.test(b && b[t])?[(c=c!==void 0?c+'':b[t]=='File'?b.name:'blob',a),b.name!==c||b[t]=='blob'?new File$1([b],c,b):b]:[a,b+'']),\ne=(c,f)=>(f?c:c.replace(/\\r?\\n|\\r/g,'\\r\\n')).replace(/\\n/g,'%0A').replace(/\\r/g,'%0D').replace(/\"/g,'%22'),\nx=(n, a, e)=>{if(a.length<e){throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e} arguments required, but only ${a.length} present.`)}};\n\n/** @type {typeof globalThis.FormData} */\nconst FormData = class FormData {\n#d=[];\nconstructor(...a){if(a.length)throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`)}\nget [t]() {return 'FormData'}\n[i](){return this.entries()}\nstatic [h](o) {return o&&typeof o==='object'&&o[t]==='FormData'&&!m.some(m=>typeof o[m]!='function')}\nappend(...a){x('append',arguments,2);this.#d.push(f(...a));}\ndelete(a){x('delete',arguments,1);a+='';this.#d=this.#d.filter(([b])=>b!==a);}\nget(a){x('get',arguments,1);a+='';for(var b=this.#d,l=b.length,c=0;c<l;c++)if(b[c][0]===a)return b[c][1];return null}\ngetAll(a,b){x('getAll',arguments,1);b=[];a+='';this.#d.forEach(c=>c[0]===a&&b.push(c[1]));return b}\nhas(a){x('has',arguments,1);a+='';return this.#d.some(b=>b[0]===a)}\nforEach(a,b){x('forEach',arguments,1);for(var [c,d]of this)a.call(b,d,c,this);}\nset(...a){x('set',arguments,2);var b=[],c=!0;a=f(...a);this.#d.forEach(d=>{d[0]===a[0]?c&&(c=!b.push(a)):b.push(d);});c&&b.push(a);this.#d=b;}\n*entries(){yield*this.#d;}\n*keys(){for(var[a]of this)yield a;}\n*values(){for(var[,a]of this)yield a;}};\n\n/** @param {FormData} F */\nfunction formDataToBlob (F,B=_Blob$1){\nvar b=`${r()}${r()}`.replace(/\\./g, '').slice(-28).padStart(32, '-'),c=[],p=`--${b}\\r\\nContent-Disposition: form-data; name=\"`;\nF.forEach((v,n)=>typeof v=='string'\n?c.push(p+e(n)+`\"\\r\\n\\r\\n${v.replace(/\\r(?!\\n)|(?<!\\r)\\n/g, '\\r\\n')}\\r\\n`)\n:c.push(p+e(n)+`\"; filename=\"${e(v.name, 1)}\"\\r\\nContent-Type: ${v.type||\"application/octet-stream\"}\\r\\n\\r\\n`, v, '\\r\\n'));\nc.push(`--${b}--`);\nreturn new B(c,{type:\"multipart/form-data; boundary=\"+b})}\n\nclass FetchBaseError extends Error {\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nclass FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} [type] -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n\n/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nconst isURLSearchParameters = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.has === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.sort === 'function' &&\n\t\tobject[NAME] === 'URLSearchParams'\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nconst isBlob = object => {\n\treturn (\n\t\tobject &&\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.arrayBuffer === 'function' &&\n\t\ttypeof object.type === 'string' &&\n\t\ttypeof object.stream === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nconst isAbortSignal = object => {\n\treturn (\n\t\ttypeof object === 'object' && (\n\t\t\tobject[NAME] === 'AbortSignal' ||\n\t\t\tobject[NAME] === 'EventTarget'\n\t\t)\n\t);\n};\n\n/**\n * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of\n * the parent domain.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isDomainOrSubdomain = (destination, original) => {\n\tconst orig = new URL(original).hostname;\n\tconst dest = new URL(destination).hostname;\n\n\treturn orig === dest || orig.endsWith(`.${dest}`);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isSameProtocol = (destination, original) => {\n\tconst orig = new URL(original).protocol;\n\tconst dest = new URL(destination).protocol;\n\n\treturn orig === dest;\n};\n\nconst pipeline = node_util.promisify(Stream.pipeline);\nconst INTERNALS$2 = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Body {\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tlet boundary = null;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tbody = null;\n\t\t} else if (isURLSearchParameters(body)) {\n\t\t\t// Body is a URLSearchParams\n\t\t\tbody = node_buffer.Buffer.from(body.toString());\n\t\t} else if (isBlob(body)) ; else if (node_buffer.Buffer.isBuffer(body)) ; else if (node_util.types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tbody = node_buffer.Buffer.from(body);\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tbody = node_buffer.Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t\t} else if (body instanceof Stream) ; else if (body instanceof FormData) {\n\t\t\t// Body is FormData\n\t\t\tbody = formDataToBlob(body);\n\t\t\tboundary = body.type.split('=')[1];\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tbody = node_buffer.Buffer.from(String(body));\n\t\t}\n\n\t\tlet stream = body;\n\n\t\tif (node_buffer.Buffer.isBuffer(body)) {\n\t\t\tstream = Stream.Readable.from(body);\n\t\t} else if (isBlob(body)) {\n\t\t\tstream = Stream.Readable.from(body.stream());\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tbody,\n\t\t\tstream,\n\t\t\tboundary,\n\t\t\tdisturbed: false,\n\t\t\terror: null\n\t\t};\n\t\tthis.size = size;\n\n\t\tif (body instanceof Stream) {\n\t\t\tbody.on('error', error_ => {\n\t\t\t\tconst error = error_ instanceof FetchBaseError ?\n\t\t\t\t\terror_ :\n\t\t\t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);\n\t\t\t\tthis[INTERNALS$2].error = error;\n\t\t\t});\n\t\t}\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS$2].stream;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS$2].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return  Promise\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\tasync formData() {\n\t\tconst ct = this.headers.get('content-type');\n\n\t\tif (ct.startsWith('application/x-www-form-urlencoded')) {\n\t\t\tconst formData = new FormData();\n\t\t\tconst parameters = new URLSearchParams(await this.text());\n\n\t\t\tfor (const [name, value] of parameters) {\n\t\t\t\tformData.append(name, value);\n\t\t\t}\n\n\t\t\treturn formData;\n\t\t}\n\n\t\tconst {toFormData} = await import('../chunks/multipart-parser.cjs');\n\t\treturn toFormData(this.body, ct);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS$2].body && this[INTERNALS$2].body.type) || '';\n\t\tconst buf = await this.arrayBuffer();\n\n\t\treturn new _Blob$1([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\tconst text = await this.text();\n\t\treturn JSON.parse(text);\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn new TextDecoder().decode(buffer);\n\t}\n\n\t/**\n\t * Decode response as buffer (non-spec api)\n\t *\n\t * @return  Promise\n\t */\n\tbuffer() {\n\t\treturn consumeBody(this);\n\t}\n}\n\nBody.prototype.buffer = node_util.deprecate(Body.prototype.buffer, 'Please use \\'response.arrayBuffer()\\' instead of \\'response.buffer()\\'', 'node-fetch#buffer');\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tdata: {get: node_util.deprecate(() => {},\n\t\t'data doesn\\'t exist, use json(), text(), arrayBuffer(), or body instead',\n\t\t'https://github.com/node-fetch/node-fetch/issues/1000 (response)')}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return Promise\n */\nasync function consumeBody(data) {\n\tif (data[INTERNALS$2].disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tdata[INTERNALS$2].disturbed = true;\n\n\tif (data[INTERNALS$2].error) {\n\t\tthrow data[INTERNALS$2].error;\n\t}\n\n\tconst {body} = data;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn node_buffer.Buffer.alloc(0);\n\t}\n\n\t/* c8 ignore next 3 */\n\tif (!(body instanceof Stream)) {\n\t\treturn node_buffer.Buffer.alloc(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\tconst accum = [];\n\tlet accumBytes = 0;\n\n\ttry {\n\t\tfor await (const chunk of body) {\n\t\t\tif (data.size > 0 && accumBytes + chunk.length > data.size) {\n\t\t\t\tconst error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\n\t\t\t\tbody.destroy(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t}\n\t} catch (error) {\n\t\tconst error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\n\t\tthrow error_;\n\t}\n\n\tif (body.readableEnded === true || body._readableState.ended === true) {\n\t\ttry {\n\t\t\tif (accum.every(c => typeof c === 'string')) {\n\t\t\t\treturn node_buffer.Buffer.from(accum.join(''));\n\t\t\t}\n\n\t\t\treturn node_buffer.Buffer.concat(accum, accumBytes);\n\t\t} catch (error) {\n\t\t\tthrow new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\n\t\t}\n\t} else {\n\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed   instance       Response or Request instance\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\n * @return  Mixed\n */\nconst clone = (instance, highWaterMark) => {\n\tlet p1;\n\tlet p2;\n\tlet {body} = instance[INTERNALS$2];\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// Check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {\n\t\t// Tee instance body\n\t\tp1 = new Stream.PassThrough({highWaterMark});\n\t\tp2 = new Stream.PassThrough({highWaterMark});\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// Set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS$2].stream = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n};\n\nconst getNonSpecFormDataBoundary = node_util.deprecate(\n\tbody => body.getBoundary(),\n\t'form-data doesn\\'t follow the spec and requires special treatment. Use alternative package',\n\t'https://github.com/node-fetch/node-fetch/issues/1167'\n);\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {any} body Any options.body input\n * @returns {string | null}\n */\nconst extractContentType = (body, request) => {\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn null;\n\t}\n\n\t// Body is string\n\tif (typeof body === 'string') {\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n\n\t// Body is a URLSearchParams\n\tif (isURLSearchParameters(body)) {\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\treturn body.type || null;\n\t}\n\n\t// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\n\tif (node_buffer.Buffer.isBuffer(body) || node_util.types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n\t\treturn null;\n\t}\n\n\tif (body instanceof FormData) {\n\t\treturn `multipart/form-data; boundary=${request[INTERNALS$2].boundary}`;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getBoundary === 'function') {\n\t\treturn `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;\n\t}\n\n\t// Body is stream - can't really do much about this\n\tif (body instanceof Stream) {\n\t\treturn null;\n\t}\n\n\t// Body constructor defaults other things to string\n\treturn 'text/plain;charset=UTF-8';\n};\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {any} obj.body Body object from the Body instance.\n * @returns {number | null}\n */\nconst getTotalBytes = request => {\n\tconst {body} = request[INTERNALS$2];\n\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn 0;\n\t}\n\n\t// Body is Blob\n\tif (isBlob(body)) {\n\t\treturn body.size;\n\t}\n\n\t// Body is Buffer\n\tif (node_buffer.Buffer.isBuffer(body)) {\n\t\treturn body.length;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getLengthSync === 'function') {\n\t\treturn body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\n\t}\n\n\t// Body is stream\n\treturn null;\n};\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest The stream to write to.\n * @param obj.body Body object from the Body instance.\n * @returns {Promise<void>}\n */\nconst writeToStream = async (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\t// Body is stream\n\t\tawait pipeline(body, dest);\n\t}\n};\n\n/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\n/* c8 ignore next 9 */\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\n\thttp.validateHeaderName :\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/* c8 ignore next 9 */\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\n\thttp.validateHeaderValue :\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nclass Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) ; else if (typeof init === 'object' && !node_util.types.isBoxedPrimitive(init)) {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (method == null) {\n\t\t\t\t// Record<ByteString, ByteString>\n\t\t\t\tresult.push(...Object.entries(init));\n\t\t\t} else {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tresult = [...init]\n\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof pair !== 'object' || node_util.types.isBoxedPrimitive(pair)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t}).map(pair => {\n\t\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\tundefined;\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t/* c8 ignore next */\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield this.get(name);\n\t\t}\n\t}\n\n\t/**\n\t * @type {() => IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield [name, this.get(name)];\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {});\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, {})\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nfunction fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n\nconst redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nconst isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n\n/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS$1].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS$1].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size,\n\t\t\thighWaterMark: this.highWaterMark\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS$1].type = 'error';\n\t\treturn response;\n\t}\n\n\tstatic json(data = undefined, init = {}) {\n\t\tconst body = JSON.stringify(data);\n\n\t\tif (body === undefined) {\n\t\t\tthrow new TypeError('data is not JSON serializable');\n\t\t}\n\n\t\tconst headers = new Headers(init && init.headers);\n\n\t\tif (!headers.has('content-type')) {\n\t\t\theaders.set('content-type', 'application/json');\n\t\t}\n\n\t\treturn new Response(body, {\n\t\t\t...init,\n\t\t\theaders\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n\nconst getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n\n/**\n * @external URL\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/URL|URL}\n */\n\n/**\n * @module utils/referrer\n * @private\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#strip-url|Referrer Policy §8.4. Strip url for use as a referrer}\n * @param {string} URL\n * @param {boolean} [originOnly=false]\n */\nfunction stripURLForUseAsAReferrer(url, originOnly = false) {\n\t// 1. If url is null, return no referrer.\n\tif (url == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\treturn 'no-referrer';\n\t}\n\n\turl = new URL(url);\n\n\t// 2. If url's scheme is a local scheme, then return no referrer.\n\tif (/^(about|blob|data):$/.test(url.protocol)) {\n\t\treturn 'no-referrer';\n\t}\n\n\t// 3. Set url's username to the empty string.\n\turl.username = '';\n\n\t// 4. Set url's password to null.\n\t// Note: `null` appears to be a mistake as this actually results in the password being `\"null\"`.\n\turl.password = '';\n\n\t// 5. Set url's fragment to null.\n\t// Note: `null` appears to be a mistake as this actually results in the fragment being `\"#null\"`.\n\turl.hash = '';\n\n\t// 6. If the origin-only flag is true, then:\n\tif (originOnly) {\n\t\t// 6.1. Set url's path to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the path being `\"/null\"`.\n\t\turl.pathname = '';\n\n\t\t// 6.2. Set url's query to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the query being `\"?null\"`.\n\t\turl.search = '';\n\t}\n\n\t// 7. Return url.\n\treturn url;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy|enum ReferrerPolicy}\n */\nconst ReferrerPolicy = new Set([\n\t'',\n\t'no-referrer',\n\t'no-referrer-when-downgrade',\n\t'same-origin',\n\t'origin',\n\t'strict-origin',\n\t'origin-when-cross-origin',\n\t'strict-origin-when-cross-origin',\n\t'unsafe-url'\n]);\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#default-referrer-policy|default referrer policy}\n */\nconst DEFAULT_REFERRER_POLICY = 'strict-origin-when-cross-origin';\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#referrer-policies|Referrer Policy §3. Referrer Policies}\n * @param {string} referrerPolicy\n * @returns {string} referrerPolicy\n */\nfunction validateReferrerPolicy(referrerPolicy) {\n\tif (!ReferrerPolicy.has(referrerPolicy)) {\n\t\tthrow new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);\n\t}\n\n\treturn referrerPolicy;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy|Referrer Policy §3.2. Is origin potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nfunction isOriginPotentiallyTrustworthy(url) {\n\t// 1. If origin is an opaque origin, return \"Not Trustworthy\".\n\t// Not applicable\n\n\t// 2. Assert: origin is a tuple origin.\n\t// Not for implementations\n\n\t// 3. If origin's scheme is either \"https\" or \"wss\", return \"Potentially Trustworthy\".\n\tif (/^(http|ws)s:$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 4. If origin's host component matches one of the CIDR notations 127.0.0.0/8 or ::1/128 [RFC4632], return \"Potentially Trustworthy\".\n\tconst hostIp = url.host.replace(/(^\\[)|(]$)/g, '');\n\tconst hostIPVersion = node_net.isIP(hostIp);\n\n\tif (hostIPVersion === 4 && /^127\\./.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\tif (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\t// 5. If origin's host component is \"localhost\" or falls within \".localhost\", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return \"Potentially Trustworthy\".\n\t// We are returning FALSE here because we cannot ensure conformance to\n\t// let-localhost-be-loalhost (https://tools.ietf.org/html/draft-west-let-localhost-be-localhost)\n\tif (url.host === 'localhost' || url.host.endsWith('.localhost')) {\n\t\treturn false;\n\t}\n\n\t// 6. If origin's scheme component is file, return \"Potentially Trustworthy\".\n\tif (url.protocol === 'file:') {\n\t\treturn true;\n\t}\n\n\t// 7. If origin's scheme component is one which the user agent considers to be authenticated, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 8. If origin has been configured as a trustworthy origin, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 9. Return \"Not Trustworthy\".\n\treturn false;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy|Referrer Policy §3.3. Is url potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nfunction isUrlPotentiallyTrustworthy(url) {\n\t// 1. If url is \"about:blank\" or \"about:srcdoc\", return \"Potentially Trustworthy\".\n\tif (/^about:(blank|srcdoc)$/.test(url)) {\n\t\treturn true;\n\t}\n\n\t// 2. If url's scheme is \"data\", return \"Potentially Trustworthy\".\n\tif (url.protocol === 'data:') {\n\t\treturn true;\n\t}\n\n\t// Note: The origin of blob: and filesystem: URLs is the origin of the context in which they were\n\t// created. Therefore, blobs created in a trustworthy origin will themselves be potentially\n\t// trustworthy.\n\tif (/^(blob|filesystem):$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 3. Return the result of executing §3.2 Is origin potentially trustworthy? on url's origin.\n\treturn isOriginPotentiallyTrustworthy(url);\n}\n\n/**\n * Modifies the referrerURL to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerURLCallback\n * @param {external:URL} referrerURL\n * @returns {external:URL} modified referrerURL\n */\n\n/**\n * Modifies the referrerOrigin to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerOriginCallback\n * @param {external:URL} referrerOrigin\n * @returns {external:URL} modified referrerOrigin\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}\n * @param {Request} request\n * @param {object} o\n * @param {module:utils/referrer~referrerURLCallback} o.referrerURLCallback\n * @param {module:utils/referrer~referrerOriginCallback} o.referrerOriginCallback\n * @returns {external:URL} Request's referrer\n */\nfunction determineRequestsReferrer(request, {referrerURLCallback, referrerOriginCallback} = {}) {\n\t// There are 2 notes in the specification about invalid pre-conditions.  We return null, here, for\n\t// these cases:\n\t// > Note: If request's referrer is \"no-referrer\", Fetch will not call into this algorithm.\n\t// > Note: If request's referrer policy is the empty string, Fetch will not call into this\n\t// > algorithm.\n\tif (request.referrer === 'no-referrer' || request.referrerPolicy === '') {\n\t\treturn null;\n\t}\n\n\t// 1. Let policy be request's associated referrer policy.\n\tconst policy = request.referrerPolicy;\n\n\t// 2. Let environment be request's client.\n\t// not applicable to node.js\n\n\t// 3. Switch on request's referrer:\n\tif (request.referrer === 'about:client') {\n\t\treturn 'no-referrer';\n\t}\n\n\t// \"a URL\": Let referrerSource be request's referrer.\n\tconst referrerSource = request.referrer;\n\n\t// 4. Let request's referrerURL be the result of stripping referrerSource for use as a referrer.\n\tlet referrerURL = stripURLForUseAsAReferrer(referrerSource);\n\n\t// 5. Let referrerOrigin be the result of stripping referrerSource for use as a referrer, with the\n\t//    origin-only flag set to true.\n\tlet referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);\n\n\t// 6. If the result of serializing referrerURL is a string whose length is greater than 4096, set\n\t//    referrerURL to referrerOrigin.\n\tif (referrerURL.toString().length > 4096) {\n\t\treferrerURL = referrerOrigin;\n\t}\n\n\t// 7. The user agent MAY alter referrerURL or referrerOrigin at this point to enforce arbitrary\n\t//    policy considerations in the interests of minimizing data leakage. For example, the user\n\t//    agent could strip the URL down to an origin, modify its host, replace it with an empty\n\t//    string, etc.\n\tif (referrerURLCallback) {\n\t\treferrerURL = referrerURLCallback(referrerURL);\n\t}\n\n\tif (referrerOriginCallback) {\n\t\treferrerOrigin = referrerOriginCallback(referrerOrigin);\n\t}\n\n\t// 8.Execute the statements corresponding to the value of policy:\n\tconst currentURL = new URL(request.url);\n\n\tswitch (policy) {\n\t\tcase 'no-referrer':\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin':\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'unsafe-url':\n\t\t\treturn referrerURL;\n\n\t\tcase 'strict-origin':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerOrigin.\n\t\t\treturn referrerOrigin.toString();\n\n\t\tcase 'strict-origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 3. Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'same-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. Return no referrer.\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'no-referrer-when-downgrade':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerURL.\n\t\t\treturn referrerURL;\n\n\t\tdefault:\n\t\t\tthrow new TypeError(`Invalid referrerPolicy: ${policy}`);\n\t}\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#parse-referrer-policy-from-header|Referrer Policy §8.1. Parse a referrer policy from a Referrer-Policy header}\n * @param {Headers} headers Response headers\n * @returns {string} policy\n */\nfunction parseReferrerPolicyFromHeader(headers) {\n\t// 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy`\n\t//    and response’s header list.\n\tconst policyTokens = (headers.get('referrer-policy') || '').split(/[,\\s]+/);\n\n\t// 2. Let policy be the empty string.\n\tlet policy = '';\n\n\t// 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty\n\t//    string, then set policy to token.\n\t// Note: This algorithm loops over multiple policy values to allow deployment of new policy\n\t// values with fallbacks for older user agents, as described in § 11.1 Unknown Policy Values.\n\tfor (const token of policyTokens) {\n\t\tif (token && ReferrerPolicy.has(token)) {\n\t\t\tpolicy = token;\n\t\t}\n\t}\n\n\t// 4. Return policy.\n\treturn policy;\n}\n\n/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\nconst doBadDataWarn = node_util.deprecate(() => {},\n\t'.data is not a valid RequestInit property, use .body instead',\n\t'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tif (parsedURL.username !== '' || parsedURL.password !== '') {\n\t\t\tthrow new TypeError(`${parsedURL} is an url with embedded credentials.`);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tif (/^(delete|get|head|options|post|put)$/i.test(method)) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tif (!isRequest(init) && 'data' in init) {\n\t\t\tdoBadDataWarn();\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif ((init.body != null || (isRequest(input) && input.body !== null)) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.set('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\t// §5.4, Request constructor steps, step 15.1\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tlet referrer = init.referrer == null ? input.referrer : init.referrer;\n\t\tif (referrer === '') {\n\t\t\t// §5.4, Request constructor steps, step 15.2\n\t\t\treferrer = 'no-referrer';\n\t\t} else if (referrer) {\n\t\t\t// §5.4, Request constructor steps, step 15.3.1, 15.3.2\n\t\t\tconst parsedReferrer = new URL(referrer);\n\t\t\t// §5.4, Request constructor steps, step 15.3.3, 15.3.4\n\t\t\treferrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n\t\t} else {\n\t\t\treferrer = undefined;\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal,\n\t\t\treferrer\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\n\t\t// §5.4, Request constructor steps, step 16.\n\t\t// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n\t\tthis.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n\t}\n\n\t/** @returns {string} */\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/** @returns {string} */\n\tget url() {\n\t\treturn node_url.format(this[INTERNALS].parsedURL);\n\t}\n\n\t/** @returns {Headers} */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/** @returns {AbortSignal} */\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t// https://fetch.spec.whatwg.org/#dom-request-referrer\n\tget referrer() {\n\t\tif (this[INTERNALS].referrer === 'no-referrer') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer === 'client') {\n\t\t\treturn 'about:client';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer) {\n\t\t\treturn this[INTERNALS].referrer.toString();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget referrerPolicy() {\n\t\treturn this[INTERNALS].referrerPolicy;\n\t}\n\n\tset referrerPolicy(referrerPolicy) {\n\t\tthis[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true},\n\treferrer: {enumerable: true},\n\treferrerPolicy: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nconst getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// 4.1. Main fetch, step 2.6\n\t// > If request's referrer policy is the empty string, then set request's referrer policy to the\n\t// > default referrer policy.\n\tif (request.referrerPolicy === '') {\n\t\trequest.referrerPolicy = DEFAULT_REFERRER_POLICY;\n\t}\n\n\t// 4.1. Main fetch, step 2.7\n\t// > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n\t// > determine request's referrer.\n\tif (request.referrer && request.referrer !== 'no-referrer') {\n\t\trequest[INTERNALS].referrer = determineRequestsReferrer(request);\n\t} else {\n\t\trequest[INTERNALS].referrer = 'no-referrer';\n\t}\n\n\t// 4.5. HTTP-network-or-cache fetch, step 6.9\n\t// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n\t// >  and isomorphic encoded, to httpRequest's header list.\n\tif (request[INTERNALS].referrer instanceof URL) {\n\t\theaders.set('Referer', request.referrer);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip, deflate, br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Pass the full URL directly to request(), but overwrite the following\n\t// options:\n\tconst options = {\n\t\t// Overwrite search to retain trailing ? (issue #776)\n\t\tpath: parsedURL.pathname + search,\n\t\t// The following options are not expressed in the URL\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn {\n\t\t/** @type {URL} */\n\t\tparsedURL,\n\t\toptions\n\t};\n};\n\n/**\n * AbortError interface for cancelled requests\n */\nclass AbortError extends FetchBaseError {\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n\n/*! node-domexception. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nif (!globalThis.DOMException) {\n  try {\n    const { MessageChannel } = require('worker_threads'),\n    port = new MessageChannel().port1,\n    ab = new ArrayBuffer();\n    port.postMessage(ab, [ab, ab]);\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (\n      globalThis.DOMException = err.constructor\n    );\n  }\n}\n\nvar nodeDomexception = globalThis.DOMException;\n\n/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nasync function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst {parsedURL, options} = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(parsedURL.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (parsedURL.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (parsedURL.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(parsedURL.toString(), options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', error => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\n\t\t\tif (response && response.body) {\n\t\t\t\tresponse.body.destroy(error);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (process.version < 'v14') {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\tlet endedWithEventsCount;\n\t\t\t\ts.prependListener('end', () => {\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\n\t\t\t\t});\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\n\t\t\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL(location, request.url);\n\t\t\t\t} catch {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Nothing to do\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: clone(request),\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size,\n\t\t\t\t\t\t\treferrer: request.referrer,\n\t\t\t\t\t\t\treferrerPolicy: request.referrerPolicy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// when forwarding sensitive headers like \"Authorization\",\n\t\t\t\t\t\t// \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n\t\t\t\t\t\t// headers will be ignored when following a redirect to a domain\n\t\t\t\t\t\t// that is not a subdomain match or exact match of the initial domain.\n\t\t\t\t\t\t// For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n\t\t\t\t\t\t// will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n\t\t\t\t\t\t// headers will also be ignored when following a redirect to a domain using\n\t\t\t\t\t\t// a different protocol. For example, a redirect from \"https://foo.com\" to \"http://foo.com\"\n\t\t\t\t\t\t// will not forward the sensitive headers\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOptions.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 14\n\t\t\t\t\t\tconst responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\t\t\t\t\t\tif (responseReferrerPolicy) {\n\t\t\t\t\t\t\trequestOptions.referrerPolicy = responseReferrerPolicy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = Stream.pipeline(response_, new Stream.PassThrough(), error => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = Stream.pipeline(body, zlib.createGunzip(zlibOptions), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = Stream.pipeline(response_, new Stream.PassThrough(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = Stream.pipeline(body, zlib.createInflate(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = Stream.pipeline(body, zlib.createInflateRaw(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.once('end', () => {\n\t\t\t\t\t// Some old IIS servers return zero-length OK deflate responses, so\n\t\t\t\t\t// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = Stream.pipeline(body, zlib.createBrotliDecompress(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\twriteToStream(request_, request).catch(reject);\n\t});\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = node_buffer.Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = node_buffer.Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tnode_buffer.Buffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tnode_buffer.Buffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\trequest.on('close', () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t});\n\t});\n}\n\n/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2015 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap();\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap();\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event);\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    );\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            );\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true;\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault();\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    });\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true });\n\n    // Define accessors\n    const keys = Object.keys(event);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key));\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget;\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation();\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        data.immediateStopped = true;\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation();\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this));\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true;\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this));\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype);\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event);\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value;\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event;\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto);\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event);\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    });\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key);\n            const isFunc = typeof descriptor.value === \"function\";\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            );\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto);\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);\n        wrappers.set(proto, wrapper);\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nfunction wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event));\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nfunction isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nfunction setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase;\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nfunction setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget;\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nfunction setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener;\n}\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap();\n\n// Listener types\nconst CAPTURE = 1;\nconst BUBBLE = 2;\nconst ATTRIBUTE = 3;\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget);\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this);\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next;\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null; // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this);\n\n            // Traverse to the tail while removing old value.\n            let prev = null;\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next;\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next);\n                    } else {\n                        listeners.delete(eventName);\n                    }\n                } else {\n                    prev = node;\n                }\n\n                node = node.next;\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                };\n                if (prev === null) {\n                    listeners.set(eventName, newNode);\n                } else {\n                    prev.next = newNode;\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    );\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this);\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    });\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map());\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length);\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i];\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this);\n        const optionsIsObj = isObject(options);\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        };\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName);\n        if (node === undefined) {\n            listeners.set(eventName, newNode);\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null;\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node;\n            node = node.next;\n        }\n\n        // Add it.\n        prev.next = newNode;\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this);\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n\n        let prev = null;\n        let node = listeners.get(eventName);\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n                return\n            }\n\n            prev = node;\n            node = node.next;\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this);\n        const eventName = event.type;\n        let node = listeners.get(eventName);\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event);\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null;\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n            } else {\n                prev = node;\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            );\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent);\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err);\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent);\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next;\n        }\n        setPassiveListener(wrappedEvent, null);\n        setEventPhase(wrappedEvent, 0);\n        setCurrentTarget(wrappedEvent, null);\n\n        return !wrappedEvent.defaultPrevented\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);\n}\n\n/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * See LICENSE file in root directory for full license.\n */\n\n/**\n * The signal class.\n * @see https://dom.spec.whatwg.org/#abortsignal\n */\nclass AbortSignal extends EventTarget {\n    /**\n     * AbortSignal cannot be constructed directly.\n     */\n    constructor() {\n        super();\n        throw new TypeError(\"AbortSignal cannot be constructed directly\");\n    }\n    /**\n     * Returns `true` if this `AbortSignal`'s `AbortController` has signaled to abort, and `false` otherwise.\n     */\n    get aborted() {\n        const aborted = abortedFlags.get(this);\n        if (typeof aborted !== \"boolean\") {\n            throw new TypeError(`Expected 'this' to be an 'AbortSignal' object, but got ${this === null ? \"null\" : typeof this}`);\n        }\n        return aborted;\n    }\n}\ndefineEventAttribute(AbortSignal.prototype, \"abort\");\n/**\n * Create an AbortSignal object.\n */\nfunction createAbortSignal() {\n    const signal = Object.create(AbortSignal.prototype);\n    EventTarget.call(signal);\n    abortedFlags.set(signal, false);\n    return signal;\n}\n/**\n * Abort a given signal.\n */\nfunction abortSignal(signal) {\n    if (abortedFlags.get(signal) !== false) {\n        return;\n    }\n    abortedFlags.set(signal, true);\n    signal.dispatchEvent({ type: \"abort\" });\n}\n/**\n * Aborted flag for each instances.\n */\nconst abortedFlags = new WeakMap();\n// Properties should be enumerable.\nObject.defineProperties(AbortSignal.prototype, {\n    aborted: { enumerable: true },\n});\n// `toString()` should return `\"[object AbortSignal]\"`\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortSignal.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortSignal\",\n    });\n}\n\n/**\n * The AbortController.\n * @see https://dom.spec.whatwg.org/#abortcontroller\n */\nclass AbortController$1 {\n    /**\n     * Initialize this controller.\n     */\n    constructor() {\n        signals.set(this, createAbortSignal());\n    }\n    /**\n     * Returns the `AbortSignal` object associated with this object.\n     */\n    get signal() {\n        return getSignal(this);\n    }\n    /**\n     * Abort and signal to any observers that the associated activity is to be aborted.\n     */\n    abort() {\n        abortSignal(getSignal(this));\n    }\n}\n/**\n * Associated signals.\n */\nconst signals = new WeakMap();\n/**\n * Get the associated signal of a given controller.\n */\nfunction getSignal(controller) {\n    const signal = signals.get(controller);\n    if (signal == null) {\n        throw new TypeError(`Expected 'this' to be an 'AbortController' object, but got ${controller === null ? \"null\" : typeof controller}`);\n    }\n    return signal;\n}\n// Properties should be enumerable.\nObject.defineProperties(AbortController$1.prototype, {\n    signal: { enumerable: true },\n    abort: { enumerable: true },\n});\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortController$1.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortController\",\n    });\n}\n\nexports.AbortController = AbortController$1;\nexports.AbortError = AbortError;\nexports.FetchError = FetchError;\nexports.File = File$1;\nexports.FormData = FormData;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports._Blob = _Blob$1;\nexports.fetch = fetch;\nexports.isRedirect = isRedirect;\nexports.nodeDomexception = nodeDomexception;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7139, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/node-fetch-native%401.0.1/node_modules/node-fetch-native/dist/index.cjs"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst abortController = require('./shared/node-fetch-native.8afd3fea.cjs');\nconst node_fs = require('node:fs');\nconst node_path = require('node:path');\nrequire('node:http');\nrequire('node:https');\nrequire('node:zlib');\nrequire('node:stream');\nrequire('node:buffer');\nrequire('node:util');\nrequire('node:url');\nrequire('node:net');\n\nconst { stat } = node_fs.promises;\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst blobFromSync = (path, type) => fromBlob(node_fs.statSync(path), path, type);\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nconst blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type));\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nconst fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type));\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst fileFromSync = (path, type) => fromFile(node_fs.statSync(path), path, type);\n\n// @ts-ignore\nconst fromBlob = (stat, path, type = '') => new abortController._Blob([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], { type });\n\n// @ts-ignore\nconst fromFile = (stat, path, type = '') => new abortController.File([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], node_path.basename(path), { type, lastModified: stat.mtimeMs });\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nclass BlobDataItem {\n  #path\n  #start\n\n  constructor (options) {\n    this.#path = options.path;\n    this.#start = options.start;\n    this.size = options.size;\n    this.lastModified = options.lastModified;\n    this.originalSize = options.originalSize === undefined\n      ? options.size\n      : options.originalSize;\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  slice (start, end) {\n    return new BlobDataItem({\n      path: this.#path,\n      lastModified: this.lastModified,\n      originalSize: this.originalSize,\n      size: end - start,\n      start: this.#start + start\n    })\n  }\n\n  async * stream () {\n    const { mtimeMs, size } = await stat(this.#path);\n\n    if (mtimeMs > this.lastModified || this.originalSize !== size) {\n      throw new abortController.nodeDomexception('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')\n    }\n\n    yield * node_fs.createReadStream(this.#path, {\n      start: this.#start,\n      end: this.#start + this.size - 1\n    });\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n}\n\nconst fetch = globalThis.fetch || abortController.fetch;\nconst Blob = globalThis.Blob || abortController._Blob;\nconst File = globalThis.File || abortController.File;\nconst FormData = globalThis.FormData || abortController.FormData;\nconst Headers = globalThis.Headers || abortController.Headers;\nconst Request = globalThis.Request || abortController.Request;\nconst Response = globalThis.Response || abortController.Response;\nconst AbortController = globalThis.AbortController || abortController.AbortController;\n\nexports.AbortError = abortController.AbortError;\nexports.FetchError = abortController.FetchError;\nexports.isRedirect = abortController.isRedirect;\nexports.AbortController = AbortController;\nexports.Blob = Blob;\nexports.File = File;\nexports.FormData = FormData;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.blobFrom = blobFrom;\nexports.blobFromSync = blobFromSync;\nexports.default = fetch;\nexports.fetch = fetch;\nexports.fileFrom = fileFrom;\nexports.fileFromSync = fileFromSync;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7267, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Russell/Downloads/AI-Projects/Mesza/mesza-app/node_modules/.pnpm/node-fetch-native%401.0.1/node_modules/node-fetch-native/lib/index.cjs"],"sourcesContent":["const nodeFetch = require(\"../dist/index.cjs\");\n\nfunction fetch (input, options) {\n  return nodeFetch.fetch(input, options);\n}\n\nfor (const key in nodeFetch) {\n  fetch[key] = nodeFetch[key];\n}\n\nmodule.exports = fetch;\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,SAAS,MAAO,KAAK,EAAE,OAAO;IAC5B,OAAO,UAAU,KAAK,CAAC,OAAO;AAChC;AAEA,IAAK,MAAM,OAAO,UAAW;IAC3B,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI;AAC7B;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}}]
}